"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VGInterface__factory = void 0;
var ethers_1 = require("ethers");
var VGInterface__factory = /** @class */ (function () {
    function VGInterface__factory() {
    }
    VGInterface__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return VGInterface__factory;
}());
exports.VGInterface__factory = VGInterface__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "claimVictoryByTime",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getCurrentState",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_roundDuration",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_timeToStartMachine",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_partitionSize",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_maxCycle",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_picoSecondsToRunInsn",
                type: "uint256",
            },
        ],
        name: "getMaxInstanceDuration",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getNonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getPartitionGameIndex",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getPartitionQuerySize",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "getSubInstances",
        outputs: [
            {
                internalType: "address[]",
                name: "_addresses",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_indices",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_challenger",
                type: "address",
            },
            {
                internalType: "address",
                name: "_claimer",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_roundDuration",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_machineAddress",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "_initialHash",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_claimerFinalHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_finalTime",
                type: "uint256",
            },
        ],
        name: "instantiate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "isActive",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "isConcerned",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "settleVerificationGame",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "startMachineRunChallenge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "stateIsFinishedChallengerWon",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "stateIsFinishedClaimerWon",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "winByPartitionTimeout",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
