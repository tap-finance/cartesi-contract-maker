"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescartesInterface__factory = void 0;
var ethers_1 = require("ethers");
var DescartesInterface__factory = /** @class */ (function () {
    function DescartesInterface__factory() {
    }
    DescartesInterface__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return DescartesInterface__factory;
}());
exports.DescartesInterface__factory = DescartesInterface__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "destruct",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getNonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getResult",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "getSubInstances",
        outputs: [
            {
                internalType: "address[]",
                name: "_addresses",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_indices",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_finalTime",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_templateHash",
                type: "bytes32",
            },
            {
                internalType: "uint64",
                name: "_outputPosition",
                type: "uint64",
            },
            {
                internalType: "uint8",
                name: "_outputLog2Size",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_roundDuration",
                type: "uint256",
            },
            {
                internalType: "address[]",
                name: "parties",
                type: "address[]",
            },
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "position",
                        type: "uint64",
                    },
                    {
                        internalType: "uint8",
                        name: "driveLog2Size",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes",
                        name: "directValue",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "loggerIpfsPath",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes32",
                        name: "loggerRootHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "provider",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "waitsProvider",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "needsLogger",
                        type: "bool",
                    },
                ],
                internalType: "struct DescartesInterface.Drive[]",
                name: "_inputDrives",
                type: "tuple[]",
            },
        ],
        name: "instantiate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "isActive",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "isConcerned",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
