"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerTestInstantiator__factory = void 0;
var contracts_1 = require("@ethersproject/contracts");
var LoggerTestInstantiator__factory = /** @class */ (function (_super) {
    __extends(LoggerTestInstantiator__factory, _super);
    function LoggerTestInstantiator__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    LoggerTestInstantiator__factory.prototype.deploy = function (_user, overrides) {
        return _super.prototype.deploy.call(this, _user, overrides || {});
    };
    LoggerTestInstantiator__factory.prototype.getDeployTransaction = function (_user, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _user, overrides || {});
    };
    LoggerTestInstantiator__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    LoggerTestInstantiator__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    LoggerTestInstantiator__factory.connect = function (address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    };
    return LoggerTestInstantiator__factory;
}(contracts_1.ContractFactory));
exports.LoggerTestInstantiator__factory = LoggerTestInstantiator__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "LoggerTestCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "_state",
                type: "uint8",
            },
        ],
        name: "LoggerTestFinished",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_submittedHash",
                type: "bytes32",
            },
        ],
        name: "claimDownloading",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "claimFinished",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "claimSubmitting",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "currentIndex",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getCurrentState",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getNonce",
        outputs: [
            {
                internalType: "uint256",
                name: "currentNonce",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "getState",
        outputs: [
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "_hash",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_currentState",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "getSubInstances",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "isActive",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "isConcerned",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "stateIsDownloading",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "stateIsFinished",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "stateIsSubmitting",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60806040526000805534801561001457600080fd5b50604051610e1f380380610e1f8339818101604052602081101561003757600080fd5b50516000808055808052600360209081527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff80546001600160a01b0319166001600160a01b03851690811782557f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f01805460ff191690556040805194855292840152815190927f77a232d0b541d1b39d33a99d472f21d566b9eca98e550634b0154ffda4f8592592908290030190a150506000805481526001602081905260408220805460ff1916821790558154019055610d09806101166000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635748c1301161008c57806397e33a021161006657806397e33a02146102325780639e8201871461024f578063c526656c1461026c578063ef068ba414610331576100cf565b80635748c130146101a457806373df1612146101c157806382afd23b14610215576100cf565b806301ff62ab146100d45780630f3887b414610114578063155d31da1461013357806315d84dc21461015057806326987b601461016d5780633d46b81914610187575b600080fd5b610100600480360360408110156100ea57600080fd5b50803590602001356001600160a01b0316610354565b604080519115158252519081900360200190f35b6101316004803603602081101561012a57600080fd5b5035610375565b005b6101006004803603602081101561014957600080fd5b50356104b4565b6101006004803603602081101561016657600080fd5b503561052a565b610175610578565b60408051918252519081900360200190f35b6101756004803603602081101561019d57600080fd5b503561057e565b610175600480360360208110156101ba57600080fd5b5035610624565b6101ed600480360360408110156101d757600080fd5b50803590602001356001600160a01b031661079d565b604080516001600160a01b039094168452602084019290925282820152519081900360600190f35b6101006004803603602081101561022b57600080fd5b50356108fc565b6101316004803603602081101561024857600080fd5b5035610911565b6101006004803603602081101561026557600080fd5b5035610ac0565b6102986004803603604081101561028257600080fd5b50803590602001356001600160a01b0316610b0e565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156102dc5781810151838201526020016102c4565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561031b578181015183820152602001610303565b5050505090500194505050505060405180910390f35b6101316004803603604081101561034757600080fd5b5080359060200135610b29565b600091825260036020526040909120546001600160a01b0391821691161490565b8080600054116103ba576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b6000828152600360205260409020546001600160a01b0316338114610421576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b600083815260036020819052604082206002015460ff169081111561044257fe5b14610494576040805162461bcd60e51b815260206004820152601860248201527f5468652073746174652073686f756c642062652049646c650000000000000000604482015290519081900360640190fd5b50506000908152600360205260409020600201805460ff19166001179055565b60008180600054116104fb576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b60025b60008481526003602081905260409091206002015460ff169081111561052057fe5b1491505b50919050565b6000818060005411610571576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b60016104fe565b60005481565b60008180600054116105c5576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b6105ce816108fc565b610610576040805162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b604482015290519081900360640190fd5b505060009081526002602052604090205490565b600081806000541161066b576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b600083815260036020819052604082206002015460ff169081111561068c57fe5b14156106a1576349646c6560e01b9150610524565b600160008481526003602081905260409091206002015460ff16908111156106c557fe5b14156106e057695375626d697474696e6760b01b9150610524565b600260008481526003602081905260409091206002015460ff169081111561070457fe5b1415610720576a446f776e6c6f6164696e6760a81b9150610524565b60008381526003602081905260409091206002015460ff168181111561074257fe5b141561075b5767119a5b9a5cda195960c21b9150610524565b6040805162461bcd60e51b8152602060048201526012602482015271556e7265636f676e697a656420737461746560701b604482015290519081900360640190fd5b60008060006107aa610c95565b600086815260036020818152604092839020835160608101855281546001600160a01b031681526001820154928101929092526002810154919390929084019160ff16908111156107f757fe5b600381111561080257fe5b905250905060008060008881526003602081905260409091206002015460ff169081111561082c57fe5b141561083c57506349646c6560e01b5b600160008881526003602081905260409091206002015460ff169081111561086057fe5b14156108765750695375626d697474696e6760b01b5b600260008881526003602081905260409091206002015460ff169081111561089a57fe5b14156108b157506a446f776e6c6f6164696e6760a81b5b60008781526003602081905260409091206002015460ff16818111156108d357fe5b14156108e7575067119a5b9a5cda195960c21b5b81516020909201519197919650945092505050565b60009081526001602052604090205460ff1690565b808060005411610956576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b6000828152600360205260409020546001600160a01b03163381146109bd576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b600260008481526003602081905260409091206002015460ff16908111156109e157fe5b14610a33576040805162461bcd60e51b815260206004820152601f60248201527f5468652073746174652073686f756c6420626520446f776e6c6f6164696e6700604482015290519081900360640190fd5b6000838152600360208190526040909120600201805460ff19169091179055610a5b83610c72565b6000838152600360208190526040909120600201547fbdd51eb9fb70bb6e48865170e5931f9a9ad837dd15a4749be5eb0de6e645856191859160ff1690811115610aa157fe5b6040805192835260ff90911660208301528051918290030190a1505050565b6000818060005411610b07576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b60036104fe565b50506040805160008082526020820190815281830190925291565b818060005411610b6e576040805162461bcd60e51b81526020600482015260166024820152600080516020610cb4833981519152604482015290519081900360640190fd5b6000838152600360205260409020546001600160a01b0316338114610bd5576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b600160008581526003602081905260409091206002015460ff1690811115610bf957fe5b14610c4b576040805162461bcd60e51b815260206004820152601e60248201527f5468652073746174652073686f756c64206265205375626d697474696e670000604482015290519081900360640190fd5b50506000918252600360205260409091206002808201805460ff1916909117905560010155565b6000908152600160209081526040808320805460ff191690556002909152812055565b6040805160608101825260008082526020820181905290918201529056fe496e646578206e6f7420696e7374616e74696174656400000000000000000000a2646970667358221220486399402018ed9f563fd60544bdc15e9657d5e3687a67e44638d7e606f5233b64736f6c63430007040033";
