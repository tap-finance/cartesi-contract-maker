import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { ContractFactory, Overrides } from "@ethersproject/contracts";
import type { Logger } from "../Logger";
export declare class Logger__factory extends ContractFactory {
    constructor(linkLibraryAddresses: LoggerLibraryAddresses, signer?: Signer);
    static linkBytecode(linkLibraryAddresses: LoggerLibraryAddresses): string;
    deploy(overrides?: Overrides): Promise<Logger>;
    getDeployTransaction(overrides?: Overrides): TransactionRequest;
    attach(address: string): Logger;
    connect(signer: Signer): Logger__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): Logger;
}
export interface LoggerLibraryAddresses {
    ["__$c7dbd794b8c7b5c2028db781007df1176e$__"]: string;
}
