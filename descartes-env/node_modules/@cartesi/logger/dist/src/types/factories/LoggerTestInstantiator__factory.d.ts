import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { ContractFactory, Overrides } from "@ethersproject/contracts";
import type { LoggerTestInstantiator } from "../LoggerTestInstantiator";
export declare class LoggerTestInstantiator__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_user: string, overrides?: Overrides): Promise<LoggerTestInstantiator>;
    getDeployTransaction(_user: string, overrides?: Overrides): TransactionRequest;
    attach(address: string): LoggerTestInstantiator;
    connect(signer: Signer): LoggerTestInstantiator__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): LoggerTestInstantiator;
}
