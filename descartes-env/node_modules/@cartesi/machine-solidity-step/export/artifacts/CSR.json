{
  "contractName": "CSR",
  "sourceName": "contracts/CSR.sol",
  "abi": [],
  "bytecode": "0x612c59610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806386c8572a14610045578063b6a902a4146100a7575b600080fd5b81801561005157600080fd5b506100846004803603604081101561006857600080fd5b5080356001600160a01b0316906020013563ffffffff16610109565b6040805192151583526001600160401b0390911660208301528051918290030190f35b8180156100b357600080fd5b506100f5600480360360608110156100ca57600080fd5b5080356001600160a01b031690602081013563ffffffff1690604001356001600160401b031661050e565b604080519115158252519081900360200190f35b600080836001600160a01b031663f7ac913d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561014757600080fd5b505af115801561015b573d6000803e3d6000fd5b505050506040513d602081101561017157600080fd5b50516001600160401b0316610185846118bc565b63ffffffff16111561019c57506000905080610507565b63ffffffff8316610c0014156101bf576101b684846118c5565b91509150610507565b63ffffffff8316610c0214156101d9576101b68484611955565b63ffffffff8316610c0114156101f3576101b684846119a4565b63ffffffff8316610100141561020c576101b684611ab7565b63ffffffff83166101041415610225576101b684611ba6565b63ffffffff8316610105141561023e576101b684611c93565b63ffffffff83166101061415610257576101b684611d09565b63ffffffff83166101401415610270576101b684611d49565b63ffffffff83166101411415610289576101b684611d89565b63ffffffff831661014214156102a2576101b684611dc9565b63ffffffff831661014314156102bb576101b684611e09565b63ffffffff831661014414156102d4576101b684611e49565b63ffffffff831661018014156102ed576101b684611e89565b63ffffffff83166103001415610306576101b6846120ff565b63ffffffff8316610301141561031f576101b684612148565b63ffffffff83166103021415610338576101b684612188565b63ffffffff83166103031415610351576101b6846121c8565b63ffffffff8316610304141561036a576101b684612208565b63ffffffff83166103051415610383576101b684612248565b63ffffffff8316610306141561039c576101b684612288565b63ffffffff831661034014156103b5576101b6846122c8565b63ffffffff831661034114156103ce576101b684612308565b63ffffffff831661034214156103e7576101b684612348565b63ffffffff83166103431415610400576101b684612388565b63ffffffff83166103441415610419576101b6846123c8565b63ffffffff8316610b001415610432576101b684612408565b63ffffffff8316610b02141561044b576101b684612448565b63ffffffff8316610f111415610464576101b684612488565b63ffffffff8316610f12141561047d576101b6846124c8565b63ffffffff8316610f131415610496576101b684612508565b63ffffffff83166107a014806104b3575063ffffffff83166107a1145b806104c5575063ffffffff83166107a2145b806104d7575063ffffffff83166107a3145b806104e9575063ffffffff8316610f14145b156104fa5750600190506000610507565b610502612548565b915091505b9250929050565b6000836001600160a01b031663f7ac913d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561054b57600080fd5b505af115801561055f573d6000803e3d6000fd5b505050506040513d602081101561057557600080fd5b50516001600160401b0316610589846118bc565b63ffffffff16111561059d575060006118b5565b6105a68361254e565b156105b3575060006118b5565b63ffffffff83166101001415610739576000846001600160a01b031663b5b98ed46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561060057600080fd5b505af1158015610614573d6000803e3d6000fd5b505050506040513d602081101561062a57600080fd5b5051604080516386c2295560e01b8152905191925061073191879173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__916386c2295591600480820192602092909190829003018186803b15801561068157600080fd5b505af4158015610695573d6000803e3d6000fd5b505050506040513d60208110156106ab57600080fd5b5051604080516386c2295560e01b815290519187169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__916386c22955916004808301926020929190829003018186803b1580156106fc57600080fd5b505af4158015610710573d6000803e3d6000fd5b505050506040513d602081101561072657600080fd5b505119841617612558565b9150506118b5565b63ffffffff831661010414156108a3576000846001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050506040513d60208110156107b057600080fd5b50516040805163cc92cbf760e01b815290519192506000916001600160a01b0388169163cc92cbf791600480830192602092919082900301818787803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505050506040513d602081101561082357600080fd5b5051604080516386676d4360e01b81526001600160401b03851984168887161716600482015290519192506001600160a01b038816916386676d439160248082019260009290919082900301818387803b15801561088057600080fd5b505af1158015610894573d6000803e3d6000fd5b505050506001925050506118b5565b63ffffffff83166101051415610925576040805163cbc446b160e01b815267fffffffffffffffc8416600482015290516001600160a01b0386169163cbc446b191602480830192600092919082900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b50505050600190506118b5565b63ffffffff831661010614156109fb57836001600160a01b03166378ddee7573__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63cac5b4956040518163ffffffff1660e01b815260040160206040518083038186803b15801561098857600080fd5b505af415801561099c573d6000803e3d6000fd5b505050506040513d60208110156109b257600080fd5b50516040805160e084901b6001600160e01b03191681529186166001600160401b0316600483015251602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff83166101401415610a5a57836001600160a01b0316635af47ca7836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166101411415610abb5760408051635790783760e01b815267fffffffffffffffc8416600482015290516001600160a01b03861691635790783791602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff83166101421415610b1a57836001600160a01b03166378c49574836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166101431415610b7957836001600160a01b0316639c7b005d836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166101441415610cc3576000846001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bc657600080fd5b505af1158015610bda573d6000803e3d6000fd5b505050506040513d6020811015610bf057600080fd5b50516040805163a317ce9d60e01b815290519192506000916001600160a01b0388169163a317ce9d91600480830192602092919082900301818787803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b505050506040513d6020811015610c6357600080fd5b50516040805163aaed4f0760e01b81526001600160401b03851990931687861617928316600482015290519192506001600160a01b0388169163aaed4f079160248082019260009290919082900301818387803b15801561088057600080fd5b63ffffffff83166101801415610e04576000846001600160a01b0316631bf2f73d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d1057600080fd5b505af1158015610d24573d6000803e3d6000fd5b505050506040513d6020811015610d3a57600080fd5b50519050600f603c82811c8216919085901c16801580610d67575060088112158015610d67575060098113155b15610d70578091505b6040805163ab9779b760e01b8152650fffffffffff87166f0ffffffffffffffff000000000000000603c86901b16176001600160401b0316600482015290516001600160a01b0389169163ab9779b791602480830192600092919082900301818387803b158015610de057600080fd5b505af1158015610df4573d6000803e3d6000fd5b50505050600193505050506118b5565b63ffffffff83166103001415610e2557610e1e8483612558565b90506118b5565b63ffffffff83166103021415610fbe576000600173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a4652fa56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7d57600080fd5b505af4158015610e91573d6000803e3d6000fd5b505050506040513d6020811015610ea757600080fd5b81019080805190602001909291905050506001016001600160401b031660016001600160401b0316901b039050846001600160a01b031663575832df8285168319886001600160a01b0316636a72b27d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f2357600080fd5b505af1158015610f37573d6000803e3d6000fd5b505050506040513d6020811015610f4d57600080fd5b50516040805160e086901b6001600160e01b031916815292909116929092176001600160401b031660048201529051602480830192600092919082900301818387803b158015610f9c57600080fd5b505af1158015610fb0573d6000803e3d6000fd5b5050505060019150506118b5565b63ffffffff8316610303141561119057600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a73fa9526040518163ffffffff1660e01b815260040160206040518083038186803b15801561101457600080fd5b505af4158015611028573d6000803e3d6000fd5b505050506040513d602081101561103e57600080fd5b5051604080516301480ddb60e71b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163a406ed80916004808301926020929190829003018186803b15801561108b57600080fd5b505af415801561109f573d6000803e3d6000fd5b505050506040513d60208110156110b557600080fd5b5051604080516332e9b48360e21b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cba6d20c916004808301926020929190829003018186803b15801561110257600080fd5b505af4158015611116573d6000803e3d6000fd5b505050506040513d602081101561112c57600080fd5b810190808051906020019092919050505017179050846001600160a01b031663d2be7b6d8285168319886001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f2357600080fd5b63ffffffff8316610304141561145257600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a73fa9526040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e657600080fd5b505af41580156111fa573d6000803e3d6000fd5b505050506040513d602081101561121057600080fd5b5051604080516301480ddb60e71b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163a406ed80916004808301926020929190829003018186803b15801561125d57600080fd5b505af4158015611271573d6000803e3d6000fd5b505050506040513d602081101561128757600080fd5b5051604080516332e9b48360e21b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cba6d20c916004808301926020929190829003018186803b1580156112d457600080fd5b505af41580156112e8573d6000803e3d6000fd5b505050506040513d60208110156112fe57600080fd5b5051604080516362491af560e11b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163c49235ea916004808301926020929190829003018186803b15801561134b57600080fd5b505af415801561135f573d6000803e3d6000fd5b505050506040513d602081101561137557600080fd5b505160408051632968a7bd60e01b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91632968a7bd916004808301926020929190829003018186803b1580156113c257600080fd5b505af41580156113d6573d6000803e3d6000fd5b505050506040513d60208110156113ec57600080fd5b8101908080519060200190929190505050171717179050846001600160a01b03166386676d438285168319886001600160a01b031663cc92cbf76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f2357600080fd5b63ffffffff831661030514156114b35760408051634e43968160e11b815267fffffffffffffffc8416600482015290516001600160a01b03861691639c872d0291602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff8316610306141561151657836001600160a01b0316632ca2bd1673__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63f2fb62c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561098857600080fd5b63ffffffff8316610340141561157557836001600160a01b0316630df3e295836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff831661034114156115d6576040805163143a8d9b60e11b815267fffffffffffffffc8416600482015290516001600160a01b038616916328751b3691602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff8316610342141561163557836001600160a01b03166389365909836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff8316610343141561169457836001600160a01b031663f604edb8836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff831661034414156117d757600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a406ed806040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ea57600080fd5b505af41580156116fe573d6000803e3d6000fd5b505050506040513d602081101561171457600080fd5b5051604080516332e9b48360e21b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cba6d20c916004808301926020929190829003018186803b15801561176157600080fd5b505af4158015611775573d6000803e3d6000fd5b505050506040513d602081101561178b57600080fd5b50516040805163a317ce9d60e01b815290519290911792506000916001600160a01b0388169163a317ce9d91600480830192602092919082900301818787803b158015610c3957600080fd5b63ffffffff8316610b0014156117ef575060006118b5565b63ffffffff8316610b02141561185157836001600160a01b03166310d74c7d600184036040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166107a0148061186e575063ffffffff83166107a1145b80611880575063ffffffff83166107a2145b80611892575063ffffffff83166107a3145b806118a4575063ffffffff8316610301145b156118b1575060016118b5565b5060005b9392505050565b60081c60031690565b6000806118d2848461292c565b1561194a576001846001600160a01b031663daded5c26040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561191457600080fd5b505af1158015611928573d6000803e3d6000fd5b505050506040513d602081101561193e57600080fd5b50519092509050610507565b506000905080610507565b600080611962848461292c565b1561194a576001846001600160a01b03166328520b306040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561191457600080fd5b6000806119b1848461292c565b1561194a57600073__$b9271eb2291c300ff9debb50e0e3ab0f42$__63453f06be866001600160a01b031663daded5c26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a0d57600080fd5b505af1158015611a21573d6000803e3d6000fd5b505050506040513d6020811015611a3757600080fd5b5051604080516001600160e01b031960e085901b1681526001600160401b039092166004830152516024808301926020929190829003018186803b158015611a7e57600080fd5b505af4158015611a92573d6000803e3d6000fd5b505050506040513d6020811015611aa857600080fd5b50516001935091506105079050565b600080600173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__638a911eef6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0057600080fd5b505af4158015611b14573d6000803e3d6000fd5b505050506040513d6020811015611b2a57600080fd5b505160408051632d6e63b560e21b815290516001600160a01b0387169163b5b98ed49160048083019260209291908290030181600087803b158015611b6e57600080fd5b505af1158015611b82573d6000803e3d6000fd5b505050506040513d6020811015611b9857600080fd5b50519193501690505b915091565b6000806000836001600160a01b031663cc92cbf76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611be657600080fd5b505af1158015611bfa573d6000803e3d6000fd5b505050506040513d6020811015611c1057600080fd5b50516040805163a740dbc160e01b815290519192506000916001600160a01b0387169163a740dbc191600480830192602092919082900301818787803b158015611c5957600080fd5b505af1158015611c6d573d6000803e3d6000fd5b505050506040513d6020811015611c8357600080fd5b5051600196921694509092505050565b6000806001836001600160a01b0316630f84c0466040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b505af1158015611ce7573d6000803e3d6000fd5b505050506040513d6020811015611cfd57600080fd5b50519092509050915091565b6000806001836001600160a01b0316634ae9388b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316639b7021ce6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166318e504db6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663568b27026040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316632e963a806040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806000836001600160a01b031663a317ce9d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611be657600080fd5b6000806000836001600160a01b031663b5b98ed46040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ec957600080fd5b505af1158015611edd573d6000803e3d6000fd5b505050506040513d6020811015611ef357600080fd5b50516040805163f7ac913d60e01b815290519192506000916001600160a01b0387169163f7ac913d91600480830192602092919082900301818787803b158015611f3c57600080fd5b505af1158015611f50573d6000803e3d6000fd5b505050506040513d6020811015611f6657600080fd5b50516040805163026797d960e01b8152905191925073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163026797d991600480820192602092909190829003018186803b158015611fb757600080fd5b505af4158015611fcb573d6000803e3d6000fd5b505050506040513d6020811015611fe157600080fd5b50516001600160401b038281169116148015612076575073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__639166a2f96040518163ffffffff1660e01b815260040160206040518083038186803b15801561203c57600080fd5b505af4158015612050573d6000803e3d6000fd5b505050506040513d602081101561206657600080fd5b505182166001600160401b031615155b1561208957600080935093505050611ba1565b6001856001600160a01b0316631bf2f73d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120c657600080fd5b505af11580156120da573d6000803e3d6000fd5b505050506040513d60208110156120f057600080fd5b50519094509250611ba1915050565b600080600173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63944b9ad46040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0057600080fd5b6000806001836001600160a01b031663834aa4f66040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316636a72b27d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663cc92cbf76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166311cf3a226040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316639485871b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663af63b2a86040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316631e5e61906040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166351bb36156040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316636cd24daf6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663a317ce9d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663daded5c26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166328520b306040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316635f824bf96040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663854dba406040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663becdc10d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b60008091565b610c009081161490565b60008073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63944b9ad46040518163ffffffff1660e01b815260040160206040518083038186803b15801561259f57600080fd5b505af41580156125b3573d6000803e3d6000fd5b505050506040513d60208110156125c957600080fd5b505160408051632d6e63b560e21b815290516001600160a01b0387169163b5b98ed49160048083019260209291908290030181600087803b15801561260d57600080fd5b505af1158015612621573d6000803e3d6000fd5b505050506040513d602081101561263757600080fd5b50516040805163106acb0360e31b8152905192909116925073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91638356581891600480820192602092909190829003018186803b15801561268b57600080fd5b505af415801561269f573d6000803e3d6000fd5b505050506040513d60208110156126b557600080fd5b50516040805163106acb0360e31b815290519185169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__916383565818916004808301926020929190829003018186803b15801561270657600080fd5b505af415801561271a573d6000803e3d6000fd5b505050506040513d602081101561273057600080fd5b505160408051631918bc6f60e01b81529051911993909316919091179173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91631918bc6f91600480820192602092909190829003018186803b15801561278957600080fd5b505af415801561279d573d6000803e3d6000fd5b505050506040513d60208110156127b357600080fd5b505160408051631918bc6f60e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91631918bc6f916004808301926020929190829003018186803b15801561280c57600080fd5b505af4158015612820573d6000803e3d6000fd5b505050506040513d602081101561283657600080fd5b505182166001600160401b031614156128bb5773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a12e35116040518163ffffffff1660e01b815260040160206040518083038186803b15801561288d57600080fd5b505af41580156128a1573d6000803e3d6000fd5b505050506040513d60208110156128b757600080fd5b5051175b836001600160a01b031663f55c4d38826040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561290a57600080fd5b505af115801561291e573d6000803e3d6000fd5b506001979650505050505050565b60008073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63f2fb62c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561297357600080fd5b505af4158015612987573d6000803e3d6000fd5b505050506040513d602081101561299d57600080fd5b50516040805163f7ac913d60e01b815290519192506000916001600160a01b0387169163f7ac913d91600480830192602092919082900301818787803b1580156129e657600080fd5b505af11580156129fa573d6000803e3d6000fd5b505050506040513d6020811015612a1057600080fd5b50516040805163cf7ecf7960e01b8152905191925073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cf7ecf7991600480820192602092909190829003018186803b158015612a6157600080fd5b505af4158015612a75573d6000803e3d6000fd5b505050506040513d6020811015612a8b57600080fd5b50516001600160401b039081169082161015612c0557846001600160a01b0316639485871b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612adc57600080fd5b505af1158015612af0573d6000803e3d6000fd5b505050506040513d6020811015612b0657600080fd5b50516040805163026797d960e01b81529051939091169273__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163026797d9916004808301926020929190829003018186803b158015612b5857600080fd5b505af4158015612b6c573d6000803e3d6000fd5b505050506040513d6020811015612b8257600080fd5b50516001600160401b039081169082161015612c0557846001600160a01b0316634ae9388b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612bd357600080fd5b505af1158015612be7573d6000803e3d6000fd5b505050506040513d6020811015612bfd57600080fd5b505191909116905b5060016001600160401b03909116601f84161c16151590509291505056fea2646970667358221220fa434e49e14f70fa9fbac0272cdbef930fe6732ac6a3d0bd68b881f29da49c4964736f6c63430007040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806386c8572a14610045578063b6a902a4146100a7575b600080fd5b81801561005157600080fd5b506100846004803603604081101561006857600080fd5b5080356001600160a01b0316906020013563ffffffff16610109565b6040805192151583526001600160401b0390911660208301528051918290030190f35b8180156100b357600080fd5b506100f5600480360360608110156100ca57600080fd5b5080356001600160a01b031690602081013563ffffffff1690604001356001600160401b031661050e565b604080519115158252519081900360200190f35b600080836001600160a01b031663f7ac913d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561014757600080fd5b505af115801561015b573d6000803e3d6000fd5b505050506040513d602081101561017157600080fd5b50516001600160401b0316610185846118bc565b63ffffffff16111561019c57506000905080610507565b63ffffffff8316610c0014156101bf576101b684846118c5565b91509150610507565b63ffffffff8316610c0214156101d9576101b68484611955565b63ffffffff8316610c0114156101f3576101b684846119a4565b63ffffffff8316610100141561020c576101b684611ab7565b63ffffffff83166101041415610225576101b684611ba6565b63ffffffff8316610105141561023e576101b684611c93565b63ffffffff83166101061415610257576101b684611d09565b63ffffffff83166101401415610270576101b684611d49565b63ffffffff83166101411415610289576101b684611d89565b63ffffffff831661014214156102a2576101b684611dc9565b63ffffffff831661014314156102bb576101b684611e09565b63ffffffff831661014414156102d4576101b684611e49565b63ffffffff831661018014156102ed576101b684611e89565b63ffffffff83166103001415610306576101b6846120ff565b63ffffffff8316610301141561031f576101b684612148565b63ffffffff83166103021415610338576101b684612188565b63ffffffff83166103031415610351576101b6846121c8565b63ffffffff8316610304141561036a576101b684612208565b63ffffffff83166103051415610383576101b684612248565b63ffffffff8316610306141561039c576101b684612288565b63ffffffff831661034014156103b5576101b6846122c8565b63ffffffff831661034114156103ce576101b684612308565b63ffffffff831661034214156103e7576101b684612348565b63ffffffff83166103431415610400576101b684612388565b63ffffffff83166103441415610419576101b6846123c8565b63ffffffff8316610b001415610432576101b684612408565b63ffffffff8316610b02141561044b576101b684612448565b63ffffffff8316610f111415610464576101b684612488565b63ffffffff8316610f12141561047d576101b6846124c8565b63ffffffff8316610f131415610496576101b684612508565b63ffffffff83166107a014806104b3575063ffffffff83166107a1145b806104c5575063ffffffff83166107a2145b806104d7575063ffffffff83166107a3145b806104e9575063ffffffff8316610f14145b156104fa5750600190506000610507565b610502612548565b915091505b9250929050565b6000836001600160a01b031663f7ac913d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561054b57600080fd5b505af115801561055f573d6000803e3d6000fd5b505050506040513d602081101561057557600080fd5b50516001600160401b0316610589846118bc565b63ffffffff16111561059d575060006118b5565b6105a68361254e565b156105b3575060006118b5565b63ffffffff83166101001415610739576000846001600160a01b031663b5b98ed46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561060057600080fd5b505af1158015610614573d6000803e3d6000fd5b505050506040513d602081101561062a57600080fd5b5051604080516386c2295560e01b8152905191925061073191879173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__916386c2295591600480820192602092909190829003018186803b15801561068157600080fd5b505af4158015610695573d6000803e3d6000fd5b505050506040513d60208110156106ab57600080fd5b5051604080516386c2295560e01b815290519187169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__916386c22955916004808301926020929190829003018186803b1580156106fc57600080fd5b505af4158015610710573d6000803e3d6000fd5b505050506040513d602081101561072657600080fd5b505119841617612558565b9150506118b5565b63ffffffff831661010414156108a3576000846001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050506040513d60208110156107b057600080fd5b50516040805163cc92cbf760e01b815290519192506000916001600160a01b0388169163cc92cbf791600480830192602092919082900301818787803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505050506040513d602081101561082357600080fd5b5051604080516386676d4360e01b81526001600160401b03851984168887161716600482015290519192506001600160a01b038816916386676d439160248082019260009290919082900301818387803b15801561088057600080fd5b505af1158015610894573d6000803e3d6000fd5b505050506001925050506118b5565b63ffffffff83166101051415610925576040805163cbc446b160e01b815267fffffffffffffffc8416600482015290516001600160a01b0386169163cbc446b191602480830192600092919082900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b50505050600190506118b5565b63ffffffff831661010614156109fb57836001600160a01b03166378ddee7573__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63cac5b4956040518163ffffffff1660e01b815260040160206040518083038186803b15801561098857600080fd5b505af415801561099c573d6000803e3d6000fd5b505050506040513d60208110156109b257600080fd5b50516040805160e084901b6001600160e01b03191681529186166001600160401b0316600483015251602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff83166101401415610a5a57836001600160a01b0316635af47ca7836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166101411415610abb5760408051635790783760e01b815267fffffffffffffffc8416600482015290516001600160a01b03861691635790783791602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff83166101421415610b1a57836001600160a01b03166378c49574836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166101431415610b7957836001600160a01b0316639c7b005d836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166101441415610cc3576000846001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bc657600080fd5b505af1158015610bda573d6000803e3d6000fd5b505050506040513d6020811015610bf057600080fd5b50516040805163a317ce9d60e01b815290519192506000916001600160a01b0388169163a317ce9d91600480830192602092919082900301818787803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b505050506040513d6020811015610c6357600080fd5b50516040805163aaed4f0760e01b81526001600160401b03851990931687861617928316600482015290519192506001600160a01b0388169163aaed4f079160248082019260009290919082900301818387803b15801561088057600080fd5b63ffffffff83166101801415610e04576000846001600160a01b0316631bf2f73d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d1057600080fd5b505af1158015610d24573d6000803e3d6000fd5b505050506040513d6020811015610d3a57600080fd5b50519050600f603c82811c8216919085901c16801580610d67575060088112158015610d67575060098113155b15610d70578091505b6040805163ab9779b760e01b8152650fffffffffff87166f0ffffffffffffffff000000000000000603c86901b16176001600160401b0316600482015290516001600160a01b0389169163ab9779b791602480830192600092919082900301818387803b158015610de057600080fd5b505af1158015610df4573d6000803e3d6000fd5b50505050600193505050506118b5565b63ffffffff83166103001415610e2557610e1e8483612558565b90506118b5565b63ffffffff83166103021415610fbe576000600173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a4652fa56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7d57600080fd5b505af4158015610e91573d6000803e3d6000fd5b505050506040513d6020811015610ea757600080fd5b81019080805190602001909291905050506001016001600160401b031660016001600160401b0316901b039050846001600160a01b031663575832df8285168319886001600160a01b0316636a72b27d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f2357600080fd5b505af1158015610f37573d6000803e3d6000fd5b505050506040513d6020811015610f4d57600080fd5b50516040805160e086901b6001600160e01b031916815292909116929092176001600160401b031660048201529051602480830192600092919082900301818387803b158015610f9c57600080fd5b505af1158015610fb0573d6000803e3d6000fd5b5050505060019150506118b5565b63ffffffff8316610303141561119057600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a73fa9526040518163ffffffff1660e01b815260040160206040518083038186803b15801561101457600080fd5b505af4158015611028573d6000803e3d6000fd5b505050506040513d602081101561103e57600080fd5b5051604080516301480ddb60e71b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163a406ed80916004808301926020929190829003018186803b15801561108b57600080fd5b505af415801561109f573d6000803e3d6000fd5b505050506040513d60208110156110b557600080fd5b5051604080516332e9b48360e21b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cba6d20c916004808301926020929190829003018186803b15801561110257600080fd5b505af4158015611116573d6000803e3d6000fd5b505050506040513d602081101561112c57600080fd5b810190808051906020019092919050505017179050846001600160a01b031663d2be7b6d8285168319886001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f2357600080fd5b63ffffffff8316610304141561145257600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a73fa9526040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e657600080fd5b505af41580156111fa573d6000803e3d6000fd5b505050506040513d602081101561121057600080fd5b5051604080516301480ddb60e71b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163a406ed80916004808301926020929190829003018186803b15801561125d57600080fd5b505af4158015611271573d6000803e3d6000fd5b505050506040513d602081101561128757600080fd5b5051604080516332e9b48360e21b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cba6d20c916004808301926020929190829003018186803b1580156112d457600080fd5b505af41580156112e8573d6000803e3d6000fd5b505050506040513d60208110156112fe57600080fd5b5051604080516362491af560e11b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163c49235ea916004808301926020929190829003018186803b15801561134b57600080fd5b505af415801561135f573d6000803e3d6000fd5b505050506040513d602081101561137557600080fd5b505160408051632968a7bd60e01b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91632968a7bd916004808301926020929190829003018186803b1580156113c257600080fd5b505af41580156113d6573d6000803e3d6000fd5b505050506040513d60208110156113ec57600080fd5b8101908080519060200190929190505050171717179050846001600160a01b03166386676d438285168319886001600160a01b031663cc92cbf76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f2357600080fd5b63ffffffff831661030514156114b35760408051634e43968160e11b815267fffffffffffffffc8416600482015290516001600160a01b03861691639c872d0291602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff8316610306141561151657836001600160a01b0316632ca2bd1673__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63f2fb62c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561098857600080fd5b63ffffffff8316610340141561157557836001600160a01b0316630df3e295836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff831661034114156115d6576040805163143a8d9b60e11b815267fffffffffffffffc8416600482015290516001600160a01b038616916328751b3691602480830192600092919082900301818387803b15801561090457600080fd5b63ffffffff8316610342141561163557836001600160a01b03166389365909836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff8316610343141561169457836001600160a01b031663f604edb8836040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff831661034414156117d757600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a406ed806040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ea57600080fd5b505af41580156116fe573d6000803e3d6000fd5b505050506040513d602081101561171457600080fd5b5051604080516332e9b48360e21b8152905173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cba6d20c916004808301926020929190829003018186803b15801561176157600080fd5b505af4158015611775573d6000803e3d6000fd5b505050506040513d602081101561178b57600080fd5b50516040805163a317ce9d60e01b815290519290911792506000916001600160a01b0388169163a317ce9d91600480830192602092919082900301818787803b158015610c3957600080fd5b63ffffffff8316610b0014156117ef575060006118b5565b63ffffffff8316610b02141561185157836001600160a01b03166310d74c7d600184036040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561090457600080fd5b63ffffffff83166107a0148061186e575063ffffffff83166107a1145b80611880575063ffffffff83166107a2145b80611892575063ffffffff83166107a3145b806118a4575063ffffffff8316610301145b156118b1575060016118b5565b5060005b9392505050565b60081c60031690565b6000806118d2848461292c565b1561194a576001846001600160a01b031663daded5c26040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561191457600080fd5b505af1158015611928573d6000803e3d6000fd5b505050506040513d602081101561193e57600080fd5b50519092509050610507565b506000905080610507565b600080611962848461292c565b1561194a576001846001600160a01b03166328520b306040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561191457600080fd5b6000806119b1848461292c565b1561194a57600073__$b9271eb2291c300ff9debb50e0e3ab0f42$__63453f06be866001600160a01b031663daded5c26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a0d57600080fd5b505af1158015611a21573d6000803e3d6000fd5b505050506040513d6020811015611a3757600080fd5b5051604080516001600160e01b031960e085901b1681526001600160401b039092166004830152516024808301926020929190829003018186803b158015611a7e57600080fd5b505af4158015611a92573d6000803e3d6000fd5b505050506040513d6020811015611aa857600080fd5b50516001935091506105079050565b600080600173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__638a911eef6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0057600080fd5b505af4158015611b14573d6000803e3d6000fd5b505050506040513d6020811015611b2a57600080fd5b505160408051632d6e63b560e21b815290516001600160a01b0387169163b5b98ed49160048083019260209291908290030181600087803b158015611b6e57600080fd5b505af1158015611b82573d6000803e3d6000fd5b505050506040513d6020811015611b9857600080fd5b50519193501690505b915091565b6000806000836001600160a01b031663cc92cbf76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611be657600080fd5b505af1158015611bfa573d6000803e3d6000fd5b505050506040513d6020811015611c1057600080fd5b50516040805163a740dbc160e01b815290519192506000916001600160a01b0387169163a740dbc191600480830192602092919082900301818787803b158015611c5957600080fd5b505af1158015611c6d573d6000803e3d6000fd5b505050506040513d6020811015611c8357600080fd5b5051600196921694509092505050565b6000806001836001600160a01b0316630f84c0466040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b505af1158015611ce7573d6000803e3d6000fd5b505050506040513d6020811015611cfd57600080fd5b50519092509050915091565b6000806001836001600160a01b0316634ae9388b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316639b7021ce6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166318e504db6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663568b27026040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316632e963a806040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806000836001600160a01b031663a317ce9d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611be657600080fd5b6000806000836001600160a01b031663b5b98ed46040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ec957600080fd5b505af1158015611edd573d6000803e3d6000fd5b505050506040513d6020811015611ef357600080fd5b50516040805163f7ac913d60e01b815290519192506000916001600160a01b0387169163f7ac913d91600480830192602092919082900301818787803b158015611f3c57600080fd5b505af1158015611f50573d6000803e3d6000fd5b505050506040513d6020811015611f6657600080fd5b50516040805163026797d960e01b8152905191925073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163026797d991600480820192602092909190829003018186803b158015611fb757600080fd5b505af4158015611fcb573d6000803e3d6000fd5b505050506040513d6020811015611fe157600080fd5b50516001600160401b038281169116148015612076575073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__639166a2f96040518163ffffffff1660e01b815260040160206040518083038186803b15801561203c57600080fd5b505af4158015612050573d6000803e3d6000fd5b505050506040513d602081101561206657600080fd5b505182166001600160401b031615155b1561208957600080935093505050611ba1565b6001856001600160a01b0316631bf2f73d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120c657600080fd5b505af11580156120da573d6000803e3d6000fd5b505050506040513d60208110156120f057600080fd5b50519094509250611ba1915050565b600080600173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63944b9ad46040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0057600080fd5b6000806001836001600160a01b031663834aa4f66040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316636a72b27d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663a740dbc16040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663cc92cbf76040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166311cf3a226040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316639485871b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663af63b2a86040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316631e5e61906040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166351bb36156040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316636cd24daf6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663a317ce9d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663daded5c26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b03166328520b306040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b0316635f824bf96040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663854dba406040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b6000806001836001600160a01b031663becdc10d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cd357600080fd5b60008091565b610c009081161490565b60008073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63944b9ad46040518163ffffffff1660e01b815260040160206040518083038186803b15801561259f57600080fd5b505af41580156125b3573d6000803e3d6000fd5b505050506040513d60208110156125c957600080fd5b505160408051632d6e63b560e21b815290516001600160a01b0387169163b5b98ed49160048083019260209291908290030181600087803b15801561260d57600080fd5b505af1158015612621573d6000803e3d6000fd5b505050506040513d602081101561263757600080fd5b50516040805163106acb0360e31b8152905192909116925073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91638356581891600480820192602092909190829003018186803b15801561268b57600080fd5b505af415801561269f573d6000803e3d6000fd5b505050506040513d60208110156126b557600080fd5b50516040805163106acb0360e31b815290519185169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__916383565818916004808301926020929190829003018186803b15801561270657600080fd5b505af415801561271a573d6000803e3d6000fd5b505050506040513d602081101561273057600080fd5b505160408051631918bc6f60e01b81529051911993909316919091179173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91631918bc6f91600480820192602092909190829003018186803b15801561278957600080fd5b505af415801561279d573d6000803e3d6000fd5b505050506040513d60208110156127b357600080fd5b505160408051631918bc6f60e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__91631918bc6f916004808301926020929190829003018186803b15801561280c57600080fd5b505af4158015612820573d6000803e3d6000fd5b505050506040513d602081101561283657600080fd5b505182166001600160401b031614156128bb5773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a12e35116040518163ffffffff1660e01b815260040160206040518083038186803b15801561288d57600080fd5b505af41580156128a1573d6000803e3d6000fd5b505050506040513d60208110156128b757600080fd5b5051175b836001600160a01b031663f55c4d38826040518263ffffffff1660e01b815260040180826001600160401b03168152602001915050600060405180830381600087803b15801561290a57600080fd5b505af115801561291e573d6000803e3d6000fd5b506001979650505050505050565b60008073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63f2fb62c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561297357600080fd5b505af4158015612987573d6000803e3d6000fd5b505050506040513d602081101561299d57600080fd5b50516040805163f7ac913d60e01b815290519192506000916001600160a01b0387169163f7ac913d91600480830192602092919082900301818787803b1580156129e657600080fd5b505af11580156129fa573d6000803e3d6000fd5b505050506040513d6020811015612a1057600080fd5b50516040805163cf7ecf7960e01b8152905191925073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163cf7ecf7991600480820192602092909190829003018186803b158015612a6157600080fd5b505af4158015612a75573d6000803e3d6000fd5b505050506040513d6020811015612a8b57600080fd5b50516001600160401b039081169082161015612c0557846001600160a01b0316639485871b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612adc57600080fd5b505af1158015612af0573d6000803e3d6000fd5b505050506040513d6020811015612b0657600080fd5b50516040805163026797d960e01b81529051939091169273__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163026797d9916004808301926020929190829003018186803b158015612b5857600080fd5b505af4158015612b6c573d6000803e3d6000fd5b505050506040513d6020811015612b8257600080fd5b50516001600160401b039081169082161015612c0557846001600160a01b0316634ae9388b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612bd357600080fd5b505af1158015612be7573d6000803e3d6000fd5b505050506040513d6020811015612bfd57600080fd5b505191909116905b5060016001600160401b03909116601f84161c16151590509291505056fea2646970667358221220fa434e49e14f70fa9fbac0272cdbef930fe6732ac6a3d0bd68b881f29da49c4964736f6c63430007040033",
  "linkReferences": {
    "contracts/RealTimeClock.sol": {
      "RealTimeClock": [
        {
          "length": 20,
          "start": 6624
        }
      ]
    },
    "contracts/RiscVConstants.sol": {
      "RiscVConstants": [
        {
          "length": 20,
          "start": 1645
        },
        {
          "length": 20,
          "start": 1769
        },
        {
          "length": 20,
          "start": 2412
        },
        {
          "length": 20,
          "start": 3681
        },
        {
          "length": 20,
          "start": 4088
        },
        {
          "length": 20,
          "start": 4216
        },
        {
          "length": 20,
          "start": 4335
        },
        {
          "length": 20,
          "start": 4554
        },
        {
          "length": 20,
          "start": 4682
        },
        {
          "length": 20,
          "start": 4801
        },
        {
          "length": 20,
          "start": 4920
        },
        {
          "length": 20,
          "start": 5039
        },
        {
          "length": 20,
          "start": 5370
        },
        {
          "length": 20,
          "start": 5838
        },
        {
          "length": 20,
          "start": 5966
        },
        {
          "length": 20,
          "start": 6884
        },
        {
          "length": 20,
          "start": 8099
        },
        {
          "length": 20,
          "start": 8224
        },
        {
          "length": 20,
          "start": 8492
        },
        {
          "length": 20,
          "start": 9603
        },
        {
          "length": 20,
          "start": 9847
        },
        {
          "length": 20,
          "start": 9971
        },
        {
          "length": 20,
          "start": 10101
        },
        {
          "length": 20,
          "start": 10233
        },
        {
          "length": 20,
          "start": 10353
        },
        {
          "length": 20,
          "start": 10583
        },
        {
          "length": 20,
          "start": 10829
        },
        {
          "length": 20,
          "start": 11077
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/RealTimeClock.sol": {
      "RealTimeClock": [
        {
          "length": 20,
          "start": 6586
        }
      ]
    },
    "contracts/RiscVConstants.sol": {
      "RiscVConstants": [
        {
          "length": 20,
          "start": 1607
        },
        {
          "length": 20,
          "start": 1731
        },
        {
          "length": 20,
          "start": 2374
        },
        {
          "length": 20,
          "start": 3643
        },
        {
          "length": 20,
          "start": 4050
        },
        {
          "length": 20,
          "start": 4178
        },
        {
          "length": 20,
          "start": 4297
        },
        {
          "length": 20,
          "start": 4516
        },
        {
          "length": 20,
          "start": 4644
        },
        {
          "length": 20,
          "start": 4763
        },
        {
          "length": 20,
          "start": 4882
        },
        {
          "length": 20,
          "start": 5001
        },
        {
          "length": 20,
          "start": 5332
        },
        {
          "length": 20,
          "start": 5800
        },
        {
          "length": 20,
          "start": 5928
        },
        {
          "length": 20,
          "start": 6846
        },
        {
          "length": 20,
          "start": 8061
        },
        {
          "length": 20,
          "start": 8186
        },
        {
          "length": 20,
          "start": 8454
        },
        {
          "length": 20,
          "start": 9565
        },
        {
          "length": 20,
          "start": 9809
        },
        {
          "length": 20,
          "start": 9933
        },
        {
          "length": 20,
          "start": 10063
        },
        {
          "length": 20,
          "start": 10195
        },
        {
          "length": 20,
          "start": 10315
        },
        {
          "length": 20,
          "start": 10545
        },
        {
          "length": 20,
          "start": 10791
        },
        {
          "length": 20,
          "start": 11039
        }
      ]
    }
  },
  "devdoc": {
    "author": "Felipe Argento",
    "kind": "dev",
    "methods": {
      "readCsr(MemoryInteractor,uint32)": {
        "details": "If/else should change to binary search to increase performance",
        "params": {
          "csrAddr": "Address of CSR in file.",
          "mi": "MemoryInteractor with which Step function is interacting."
        },
        "returns": {
          "_0": "Returns the status of the operation (true for success, false otherwise).",
          "_1": "Register value."
        }
      },
      "writeCsr(MemoryInteractor,uint32,uint64)": {
        "details": "If/else should change to binary search to increase performance",
        "params": {
          "csrAddr": "Address of CSR in file.",
          "mi": "MemoryInteractor with which Step function is interacting.",
          "val": "Value to be written;"
        },
        "returns": {
          "_0": "The status of the operation (true for success, false otherwise)."
        }
      }
    },
    "title": "CSR",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "contracts/RealTimeClock.sol": {
          "RealTimeClock": [
            {
              "length": 20,
              "start": 6624
            }
          ]
        },
        "contracts/RiscVConstants.sol": {
          "RiscVConstants": [
            {
              "length": 20,
              "start": 1645
            },
            {
              "length": 20,
              "start": 1769
            },
            {
              "length": 20,
              "start": 2412
            },
            {
              "length": 20,
              "start": 3681
            },
            {
              "length": 20,
              "start": 4088
            },
            {
              "length": 20,
              "start": 4216
            },
            {
              "length": 20,
              "start": 4335
            },
            {
              "length": 20,
              "start": 4554
            },
            {
              "length": 20,
              "start": 4682
            },
            {
              "length": 20,
              "start": 4801
            },
            {
              "length": 20,
              "start": 4920
            },
            {
              "length": 20,
              "start": 5039
            },
            {
              "length": 20,
              "start": 5370
            },
            {
              "length": 20,
              "start": 5838
            },
            {
              "length": 20,
              "start": 5966
            },
            {
              "length": 20,
              "start": 6884
            },
            {
              "length": 20,
              "start": 8099
            },
            {
              "length": 20,
              "start": 8224
            },
            {
              "length": 20,
              "start": 8492
            },
            {
              "length": 20,
              "start": 9603
            },
            {
              "length": 20,
              "start": 9847
            },
            {
              "length": 20,
              "start": 9971
            },
            {
              "length": 20,
              "start": 10101
            },
            {
              "length": 20,
              "start": 10233
            },
            {
              "length": 20,
              "start": 10353
            },
            {
              "length": 20,
              "start": 10583
            },
            {
              "length": 20,
              "start": 10829
            },
            {
              "length": 20,
              "start": 11077
            }
          ]
        }
      },
      "opcodes": "PUSH2 0x2C59 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86C8572A EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0xB6A902A4 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF7AC913D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x185 DUP5 PUSH2 0x18BC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x19C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x507 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xC00 EQ ISZERO PUSH2 0x1BF JUMPI PUSH2 0x1B6 DUP5 DUP5 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x507 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xC02 EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1B6 DUP5 DUP5 PUSH2 0x1955 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xC01 EQ ISZERO PUSH2 0x1F3 JUMPI PUSH2 0x1B6 DUP5 DUP5 PUSH2 0x19A4 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x100 EQ ISZERO PUSH2 0x20C JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x104 EQ ISZERO PUSH2 0x225 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1BA6 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x105 EQ ISZERO PUSH2 0x23E JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1C93 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x106 EQ ISZERO PUSH2 0x257 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1D09 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x140 EQ ISZERO PUSH2 0x270 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1D49 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x141 EQ ISZERO PUSH2 0x289 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1D89 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x142 EQ ISZERO PUSH2 0x2A2 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1DC9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x143 EQ ISZERO PUSH2 0x2BB JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1E09 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x144 EQ ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1E49 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x180 EQ ISZERO PUSH2 0x2ED JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1E89 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x300 EQ ISZERO PUSH2 0x306 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x20FF JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x301 EQ ISZERO PUSH2 0x31F JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2148 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x302 EQ ISZERO PUSH2 0x338 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2188 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x303 EQ ISZERO PUSH2 0x351 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x21C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x304 EQ ISZERO PUSH2 0x36A JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2208 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x305 EQ ISZERO PUSH2 0x383 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2248 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x306 EQ ISZERO PUSH2 0x39C JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2288 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x340 EQ ISZERO PUSH2 0x3B5 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x22C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x341 EQ ISZERO PUSH2 0x3CE JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2308 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x342 EQ ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2348 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x343 EQ ISZERO PUSH2 0x400 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2388 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x344 EQ ISZERO PUSH2 0x419 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x23C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB00 EQ ISZERO PUSH2 0x432 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2408 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB02 EQ ISZERO PUSH2 0x44B JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2448 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF11 EQ ISZERO PUSH2 0x464 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2488 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF12 EQ ISZERO PUSH2 0x47D JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x24C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF13 EQ ISZERO PUSH2 0x496 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2508 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A0 EQ DUP1 PUSH2 0x4B3 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A1 EQ JUMPDEST DUP1 PUSH2 0x4C5 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A2 EQ JUMPDEST DUP1 PUSH2 0x4D7 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A3 EQ JUMPDEST DUP1 PUSH2 0x4E9 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF14 EQ JUMPDEST ISZERO PUSH2 0x4FA JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x502 PUSH2 0x2548 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF7AC913D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x589 DUP5 PUSH2 0x18BC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x59D JUMPI POP PUSH1 0x0 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x5A6 DUP4 PUSH2 0x254E JUMP JUMPDEST ISZERO PUSH2 0x5B3 JUMPI POP PUSH1 0x0 PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x100 EQ ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB5B98ED4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x614 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86C22955 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH2 0x731 SWAP2 DUP8 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x86C22955 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86C22955 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 DUP8 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x86C22955 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x710 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD NOT DUP5 AND OR PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x104 EQ ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCC92CBF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xCC92CBF7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86676D43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 NOT DUP5 AND DUP9 DUP8 AND OR AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x86676D43 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x894 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x105 EQ ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xCBC446B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xCBC446B1 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x106 EQ ISZERO PUSH2 0x9FB JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x78DDEE75 PUSH20 0x0 PUSH4 0xCAC5B495 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x140 EQ ISZERO PUSH2 0xA5A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AF47CA7 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x141 EQ ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x57907837 PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x57907837 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x142 EQ ISZERO PUSH2 0xB1A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x78C49574 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x143 EQ ISZERO PUSH2 0xB79 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C7B005D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x144 EQ ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA317CE9D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xA317CE9D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAAED4F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 NOT SWAP1 SWAP4 AND DUP8 DUP7 AND OR SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xAAED4F07 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x180 EQ ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF2F73D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0xF PUSH1 0x3C DUP3 DUP2 SHR DUP3 AND SWAP2 SWAP1 DUP6 SWAP1 SHR AND DUP1 ISZERO DUP1 PUSH2 0xD67 JUMPI POP PUSH1 0x8 DUP2 SLT ISZERO DUP1 ISZERO PUSH2 0xD67 JUMPI POP PUSH1 0x9 DUP2 SGT ISZERO JUMPDEST ISZERO PUSH2 0xD70 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xAB9779B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH6 0xFFFFFFFFFFF DUP8 AND PUSH16 0xFFFFFFFFFFFFFFFF000000000000000 PUSH1 0x3C DUP7 SWAP1 SHL AND OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0xAB9779B7 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x300 EQ ISZERO PUSH2 0xE25 JUMPI PUSH2 0xE1E DUP5 DUP4 PUSH2 0x2558 JUMP JUMPDEST SWAP1 POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x302 EQ ISZERO PUSH2 0xFBE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH20 0x0 PUSH4 0xA4652FA5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL SUB SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x575832DF DUP3 DUP6 AND DUP4 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A72B27D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP7 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x303 EQ ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xA73FA952 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x103E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1480DDB PUSH1 0xE7 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xA406ED80 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x32E9B483 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xCBA6D20C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x112C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP OR OR SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD2BE7B6D DUP3 DUP6 AND DUP4 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x304 EQ ISZERO PUSH2 0x1452 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xA73FA952 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1480DDB PUSH1 0xE7 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xA406ED80 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x32E9B483 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xCBA6D20C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x62491AF5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xC49235EA SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x135F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2968A7BD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x2968A7BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x13D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP OR OR OR OR SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x86676D43 DUP3 DUP6 AND DUP4 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC92CBF7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x305 EQ ISZERO PUSH2 0x14B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x4E439681 PUSH1 0xE1 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x9C872D02 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x306 EQ ISZERO PUSH2 0x1516 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2CA2BD16 PUSH20 0x0 PUSH4 0xF2FB62C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x340 EQ ISZERO PUSH2 0x1575 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDF3E295 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x341 EQ ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x143A8D9B PUSH1 0xE1 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x28751B36 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x342 EQ ISZERO PUSH2 0x1635 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x89365909 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x343 EQ ISZERO PUSH2 0x1694 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF604EDB8 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x344 EQ ISZERO PUSH2 0x17D7 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xA406ED80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x16FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x32E9B483 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xCBA6D20C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1775 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x178B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA317CE9D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 OR SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xA317CE9D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB00 EQ ISZERO PUSH2 0x17EF JUMPI POP PUSH1 0x0 PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB02 EQ ISZERO PUSH2 0x1851 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x10D74C7D PUSH1 0x1 DUP5 SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A0 EQ DUP1 PUSH2 0x186E JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A1 EQ JUMPDEST DUP1 PUSH2 0x1880 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A2 EQ JUMPDEST DUP1 PUSH2 0x1892 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A3 EQ JUMPDEST DUP1 PUSH2 0x18A4 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x301 EQ JUMPDEST ISZERO PUSH2 0x18B1 JUMPI POP PUSH1 0x1 PUSH2 0x18B5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18D2 DUP5 DUP5 PUSH2 0x292C JUMP JUMPDEST ISZERO PUSH2 0x194A JUMPI PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDADED5C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x507 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1962 DUP5 DUP5 PUSH2 0x292C JUMP JUMPDEST ISZERO PUSH2 0x194A JUMPI PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x28520B30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19B1 DUP5 DUP5 PUSH2 0x292C JUMP JUMPDEST ISZERO PUSH2 0x194A JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0x453F06BE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDADED5C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1A92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x507 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH20 0x0 PUSH4 0x8A911EEF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2D6E63B5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xB5B98ED4 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP4 POP AND SWAP1 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC92CBF7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA740DBC1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xA740DBC1 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SWAP7 SWAP3 AND SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF84C046 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4AE9388B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B7021CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18E504DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x568B2702 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E963A80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA317CE9D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB5B98ED4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7AC913D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xF7AC913D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26797D9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0x26797D9 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1FCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x2076 JUMPI POP PUSH20 0x0 PUSH4 0x9166A2F9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x203C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2050 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2089 JUMPI PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF2F73D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1BA1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH20 0x0 PUSH4 0x944B9AD4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x834AA4F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A72B27D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC92CBF7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x11CF3A22 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9485871B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAF63B2A8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1E5E6190 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x51BB3615 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6CD24DAF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA317CE9D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDADED5C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x28520B30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5F824BF9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x854DBA40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBECDC10D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP2 JUMP JUMPDEST PUSH2 0xC00 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x944B9AD4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x259F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2D6E63B5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xB5B98ED4 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2621 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x106ACB03 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0x83565818 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x268B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x269F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x106ACB03 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 DUP6 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x83565818 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x271A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1918BC6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 NOT SWAP4 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x1918BC6F SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x279D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1918BC6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x1918BC6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x280C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2820 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ ISZERO PUSH2 0x28BB JUMPI PUSH20 0x0 PUSH4 0xA12E3511 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x288D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x28A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD OR JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF55C4D38 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x290A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x291E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0xF2FB62C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2987 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7AC913D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xF7AC913D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCF7ECF79 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0xCF7ECF79 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2A75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x2C05 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9485871B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26797D9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP1 SWAP2 AND SWAP3 PUSH20 0x0 SWAP2 PUSH4 0x26797D9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2B6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x2C05 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4AE9388B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 SWAP2 AND SWAP1 JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x1F DUP5 AND SHR AND ISZERO ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL NUMBER 0x4E 0x49 0xE1 0x4F PUSH17 0xFA9FBAC0272CDBEF930FE6732AC6A3D0BD PUSH9 0xB881F29DA49C496473 PUSH16 0x6C634300070400330000000000000000 ",
      "sourceMap": "829:11503:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {
        "contracts/RealTimeClock.sol": {
          "RealTimeClock": [
            {
              "length": 20,
              "start": 6586
            }
          ]
        },
        "contracts/RiscVConstants.sol": {
          "RiscVConstants": [
            {
              "length": 20,
              "start": 1607
            },
            {
              "length": 20,
              "start": 1731
            },
            {
              "length": 20,
              "start": 2374
            },
            {
              "length": 20,
              "start": 3643
            },
            {
              "length": 20,
              "start": 4050
            },
            {
              "length": 20,
              "start": 4178
            },
            {
              "length": 20,
              "start": 4297
            },
            {
              "length": 20,
              "start": 4516
            },
            {
              "length": 20,
              "start": 4644
            },
            {
              "length": 20,
              "start": 4763
            },
            {
              "length": 20,
              "start": 4882
            },
            {
              "length": 20,
              "start": 5001
            },
            {
              "length": 20,
              "start": 5332
            },
            {
              "length": 20,
              "start": 5800
            },
            {
              "length": 20,
              "start": 5928
            },
            {
              "length": 20,
              "start": 6846
            },
            {
              "length": 20,
              "start": 8061
            },
            {
              "length": 20,
              "start": 8186
            },
            {
              "length": 20,
              "start": 8454
            },
            {
              "length": 20,
              "start": 9565
            },
            {
              "length": 20,
              "start": 9809
            },
            {
              "length": 20,
              "start": 9933
            },
            {
              "length": 20,
              "start": 10063
            },
            {
              "length": 20,
              "start": 10195
            },
            {
              "length": 20,
              "start": 10315
            },
            {
              "length": 20,
              "start": 10545
            },
            {
              "length": 20,
              "start": 10791
            },
            {
              "length": 20,
              "start": 11039
            }
          ]
        }
      },
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86C8572A EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0xB6A902A4 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF7AC913D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x185 DUP5 PUSH2 0x18BC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x19C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x507 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xC00 EQ ISZERO PUSH2 0x1BF JUMPI PUSH2 0x1B6 DUP5 DUP5 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x507 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xC02 EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1B6 DUP5 DUP5 PUSH2 0x1955 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xC01 EQ ISZERO PUSH2 0x1F3 JUMPI PUSH2 0x1B6 DUP5 DUP5 PUSH2 0x19A4 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x100 EQ ISZERO PUSH2 0x20C JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x104 EQ ISZERO PUSH2 0x225 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1BA6 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x105 EQ ISZERO PUSH2 0x23E JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1C93 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x106 EQ ISZERO PUSH2 0x257 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1D09 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x140 EQ ISZERO PUSH2 0x270 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1D49 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x141 EQ ISZERO PUSH2 0x289 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1D89 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x142 EQ ISZERO PUSH2 0x2A2 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1DC9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x143 EQ ISZERO PUSH2 0x2BB JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1E09 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x144 EQ ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1E49 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x180 EQ ISZERO PUSH2 0x2ED JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x1E89 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x300 EQ ISZERO PUSH2 0x306 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x20FF JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x301 EQ ISZERO PUSH2 0x31F JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2148 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x302 EQ ISZERO PUSH2 0x338 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2188 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x303 EQ ISZERO PUSH2 0x351 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x21C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x304 EQ ISZERO PUSH2 0x36A JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2208 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x305 EQ ISZERO PUSH2 0x383 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2248 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x306 EQ ISZERO PUSH2 0x39C JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2288 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x340 EQ ISZERO PUSH2 0x3B5 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x22C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x341 EQ ISZERO PUSH2 0x3CE JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2308 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x342 EQ ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2348 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x343 EQ ISZERO PUSH2 0x400 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2388 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x344 EQ ISZERO PUSH2 0x419 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x23C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB00 EQ ISZERO PUSH2 0x432 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2408 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB02 EQ ISZERO PUSH2 0x44B JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2448 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF11 EQ ISZERO PUSH2 0x464 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2488 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF12 EQ ISZERO PUSH2 0x47D JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x24C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF13 EQ ISZERO PUSH2 0x496 JUMPI PUSH2 0x1B6 DUP5 PUSH2 0x2508 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A0 EQ DUP1 PUSH2 0x4B3 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A1 EQ JUMPDEST DUP1 PUSH2 0x4C5 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A2 EQ JUMPDEST DUP1 PUSH2 0x4D7 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A3 EQ JUMPDEST DUP1 PUSH2 0x4E9 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xF14 EQ JUMPDEST ISZERO PUSH2 0x4FA JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x502 PUSH2 0x2548 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF7AC913D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x589 DUP5 PUSH2 0x18BC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x59D JUMPI POP PUSH1 0x0 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x5A6 DUP4 PUSH2 0x254E JUMP JUMPDEST ISZERO PUSH2 0x5B3 JUMPI POP PUSH1 0x0 PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x100 EQ ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB5B98ED4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x614 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86C22955 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH2 0x731 SWAP2 DUP8 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x86C22955 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86C22955 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 DUP8 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x86C22955 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x710 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD NOT DUP5 AND OR PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x104 EQ ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCC92CBF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xCC92CBF7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86676D43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 NOT DUP5 AND DUP9 DUP8 AND OR AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x86676D43 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x894 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x105 EQ ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xCBC446B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xCBC446B1 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x106 EQ ISZERO PUSH2 0x9FB JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x78DDEE75 PUSH20 0x0 PUSH4 0xCAC5B495 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x140 EQ ISZERO PUSH2 0xA5A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AF47CA7 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x141 EQ ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x57907837 PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x57907837 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x142 EQ ISZERO PUSH2 0xB1A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x78C49574 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x143 EQ ISZERO PUSH2 0xB79 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C7B005D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x144 EQ ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA317CE9D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xA317CE9D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAAED4F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 NOT SWAP1 SWAP4 AND DUP8 DUP7 AND OR SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xAAED4F07 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x180 EQ ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF2F73D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0xF PUSH1 0x3C DUP3 DUP2 SHR DUP3 AND SWAP2 SWAP1 DUP6 SWAP1 SHR AND DUP1 ISZERO DUP1 PUSH2 0xD67 JUMPI POP PUSH1 0x8 DUP2 SLT ISZERO DUP1 ISZERO PUSH2 0xD67 JUMPI POP PUSH1 0x9 DUP2 SGT ISZERO JUMPDEST ISZERO PUSH2 0xD70 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xAB9779B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH6 0xFFFFFFFFFFF DUP8 AND PUSH16 0xFFFFFFFFFFFFFFFF000000000000000 PUSH1 0x3C DUP7 SWAP1 SHL AND OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0xAB9779B7 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x300 EQ ISZERO PUSH2 0xE25 JUMPI PUSH2 0xE1E DUP5 DUP4 PUSH2 0x2558 JUMP JUMPDEST SWAP1 POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x302 EQ ISZERO PUSH2 0xFBE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH20 0x0 PUSH4 0xA4652FA5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL SUB SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x575832DF DUP3 DUP6 AND DUP4 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A72B27D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP7 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x303 EQ ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xA73FA952 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x103E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1480DDB PUSH1 0xE7 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xA406ED80 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x32E9B483 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xCBA6D20C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x112C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP OR OR SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD2BE7B6D DUP3 DUP6 AND DUP4 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x304 EQ ISZERO PUSH2 0x1452 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xA73FA952 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1480DDB PUSH1 0xE7 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xA406ED80 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x32E9B483 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xCBA6D20C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x62491AF5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xC49235EA SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x135F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2968A7BD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x2968A7BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x13D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP OR OR OR OR SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x86676D43 DUP3 DUP6 AND DUP4 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC92CBF7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x305 EQ ISZERO PUSH2 0x14B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x4E439681 PUSH1 0xE1 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x9C872D02 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x306 EQ ISZERO PUSH2 0x1516 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2CA2BD16 PUSH20 0x0 PUSH4 0xF2FB62C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x340 EQ ISZERO PUSH2 0x1575 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDF3E295 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x341 EQ ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x143A8D9B PUSH1 0xE1 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFC DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x28751B36 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x342 EQ ISZERO PUSH2 0x1635 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x89365909 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x343 EQ ISZERO PUSH2 0x1694 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF604EDB8 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x344 EQ ISZERO PUSH2 0x17D7 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xA406ED80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x16FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x32E9B483 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xCBA6D20C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1775 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x178B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA317CE9D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 OR SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xA317CE9D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB00 EQ ISZERO PUSH2 0x17EF JUMPI POP PUSH1 0x0 PUSH2 0x18B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB02 EQ ISZERO PUSH2 0x1851 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x10D74C7D PUSH1 0x1 DUP5 SUB PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A0 EQ DUP1 PUSH2 0x186E JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A1 EQ JUMPDEST DUP1 PUSH2 0x1880 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A2 EQ JUMPDEST DUP1 PUSH2 0x1892 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x7A3 EQ JUMPDEST DUP1 PUSH2 0x18A4 JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0x301 EQ JUMPDEST ISZERO PUSH2 0x18B1 JUMPI POP PUSH1 0x1 PUSH2 0x18B5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18D2 DUP5 DUP5 PUSH2 0x292C JUMP JUMPDEST ISZERO PUSH2 0x194A JUMPI PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDADED5C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x507 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1962 DUP5 DUP5 PUSH2 0x292C JUMP JUMPDEST ISZERO PUSH2 0x194A JUMPI PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x28520B30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19B1 DUP5 DUP5 PUSH2 0x292C JUMP JUMPDEST ISZERO PUSH2 0x194A JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0x453F06BE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDADED5C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1A92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x507 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH20 0x0 PUSH4 0x8A911EEF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2D6E63B5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xB5B98ED4 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP4 POP AND SWAP1 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC92CBF7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA740DBC1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xA740DBC1 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SWAP7 SWAP3 AND SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF84C046 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4AE9388B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B7021CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18E504DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x568B2702 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E963A80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA317CE9D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB5B98ED4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7AC913D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xF7AC913D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26797D9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0x26797D9 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1FCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x2076 JUMPI POP PUSH20 0x0 PUSH4 0x9166A2F9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x203C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2050 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2089 JUMPI PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF2F73D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1BA1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH20 0x0 PUSH4 0x944B9AD4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x834AA4F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A72B27D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA740DBC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC92CBF7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x11CF3A22 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9485871B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAF63B2A8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1E5E6190 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x51BB3615 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6CD24DAF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA317CE9D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDADED5C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x28520B30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5F824BF9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x854DBA40 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBECDC10D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP2 JUMP JUMPDEST PUSH2 0xC00 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x944B9AD4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x259F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2D6E63B5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xB5B98ED4 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2621 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x106ACB03 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0x83565818 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x268B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x269F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x106ACB03 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 DUP6 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x83565818 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x271A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1918BC6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 NOT SWAP4 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x1918BC6F SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x279D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1918BC6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x1918BC6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x280C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2820 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ ISZERO PUSH2 0x28BB JUMPI PUSH20 0x0 PUSH4 0xA12E3511 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x288D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x28A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD OR JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF55C4D38 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x290A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x291E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0xF2FB62C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2987 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7AC913D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0xF7AC913D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCF7ECF79 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0xCF7ECF79 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2A75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x2C05 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9485871B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26797D9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP1 SWAP2 AND SWAP3 PUSH20 0x0 SWAP2 PUSH4 0x26797D9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2B6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x2C05 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4AE9388B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 SWAP2 AND SWAP1 JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x1F DUP5 AND SHR AND ISZERO ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL NUMBER 0x4E 0x49 0xE1 0x4F PUSH17 0xFA9FBAC0272CDBEF930FE6732AC6A3D0BD PUSH9 0xB881F29DA49C496473 PUSH16 0x6C634300070400330000000000000000 ",
      "sourceMap": "829:11503:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:3250;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2518:3250:2;;-1:-1:-1;;;;;2518:3250:2;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2518:3250:2;;;;;;;;;;;;;;;;6152:4860;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6152:4860:2;;-1:-1:-1;;;;;6152:4860:2;;;;;;;;;;;;-1:-1:-1;;;;;6152:4860:2;;:::i;:::-;;;;;;;;;;;;;;;;;;2518:3250;2592:4;2598:6;2834:2;-1:-1:-1;;;;;2834:16:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2834:18:2;-1:-1:-1;;;;;2815:37:2;:16;2823:7;2815;:16::i;:::-;:37;;;2811:84;;;-1:-1:-1;2875:5:2;;-1:-1:-1;2875:5:2;2868:16;;2811:84;2908:17;;;893:5;2908:17;2904:2818;;;2948:34;2970:2;2974:7;2948:21;:34::i;:::-;2941:41;;;;;;2904:2818;3003:19;;;967:5;3003:19;2999:2723;;;3045:36;3069:2;3073:7;3045:23;:36::i;2999:2723::-;3102:16;;;928:5;3102:16;3098:2624;;;3141:33;3162:2;3166:7;3141:20;:33::i;3098:2624::-;3195:18;;;1005:5;3195:18;3191:2531;;;3236:27;3260:2;3236:23;:27::i;3191:2531::-;3284:14;;;1038:5;3284:14;3280:2442;;;3321:23;3341:2;3321:19;:23::i;3280:2442::-;3365:16;;;1073:5;3365:16;3361:2361;;;3404:25;3426:2;3404:21;:25::i;3361:2361::-;3450:21;;;1113:5;3450:21;3446:2276;;;3494:30;3521:2;3494:26;:30::i;3446:2276::-;3545:19;;;1152:5;3545:19;3541:2181;;;3587:28;3612:2;3587:24;:28::i;3541:2181::-;3636:15;;;1186:5;3636:15;3632:2090;;;3674:24;3695:2;3674:20;:24::i;3632:2090::-;3719:17;;;1222:5;3719:17;3715:2007;;;3759:26;3782:2;3759:22;:26::i;3715:2007::-;3806:16;;;1257:5;3806:16;3802:1920;;;3845:25;3867:2;3845:21;:25::i;3802:1920::-;3891:14;;;1290:5;3891:14;3887:1835;;;3928:23;3948:2;3928:19;:23::i;3887:1835::-;3972:15;;;1325:5;3972:15;3968:1754;;;4010:24;4031:2;4010:20;:24::i;3968:1754::-;4055:18;;;1513:5;4055:18;4051:1671;;;4096:27;4120:2;4096:23;:27::i;4051:1671::-;4144:15;;;1547:5;4144:15;4140:1582;;;4182:24;4203:2;4182:20;:24::i;4140:1582::-;4227:18;;;1584:5;4227:18;4223:1499;;;4268:27;4292:2;4268:23;:27::i;4223:1499::-;4316:18;;;1621:5;4316:18;4312:1410;;;4357:27;4381:2;4357:23;:27::i;4312:1410::-;4405:14;;;1654:5;4405:14;4401:1321;;;4442:23;4462:2;4442:19;:23::i;4401:1321::-;4486:16;;;1689:5;4486:16;4482:1240;;;4525:25;4547:2;4525:21;:25::i;4482:1240::-;4571:21;;;1729:5;4571:21;4567:1155;;;4615:30;4642:2;4615:26;:30::i;4567:1155::-;4666:19;;;1768:5;4666:19;4662:1060;;;4708:28;4733:2;4708:24;:28::i;4662:1060::-;4757:15;;;1802:5;4757:15;4753:969;;;4795:24;4816:2;4795:20;:24::i;4753:969::-;4840:17;;;1838:5;4840:17;4836:886;;;4880:26;4903:2;4880:22;:26::i;4836:886::-;4927:16;;;1873:5;4927:16;4923:799;;;4966:25;4988:2;4966:21;:25::i;4923:799::-;5012:14;;;1906:5;5012:14;5008:714;;;5049:23;5069:2;5049:19;:23::i;5008:714::-;5093:17;;;1943:5;5093:17;5089:633;;;5133:26;5156:2;5133:22;:26::i;5089:633::-;5180:19;;;1981:5;5180:19;5176:546;;;5222:28;5247:2;5222:24;:28::i;5176:546::-;5271:20;;;1365:5;5271:20;5267:455;;;5314:29;5340:2;5314:25;:29::i;5267:455::-;5364:18;;;1402:5;5364:18;5360:362;;;5405:27;5429:2;5405:23;:27::i;5360:362::-;5453:17;;;1438:5;5453:17;5449:273;;;5493:26;5516:2;5493:22;:26::i;5449:273::-;5540:18;;;2019:5;5540:18;;:39;;-1:-1:-1;5562:17:2;;;2055:5;5562:17;5540:39;:60;;;-1:-1:-1;5583:17:2;;;2091:5;5583:17;5540:60;:81;;;-1:-1:-1;5604:17:2;;;2127:5;5604:17;5540:81;:103;;;-1:-1:-1;5625:18:2;;;1475:5;5625:18;5540:103;5536:186;;;-1:-1:-1;5703:4:2;;-1:-1:-1;5709:1:2;5695:16;;5536:186;5739:22;:20;:22::i;:::-;5732:29;;;;2518:3250;;;;;;:::o;6152:4860::-;6269:4;6503:2;-1:-1:-1;;;;;6503:16:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6503:18:2;-1:-1:-1;;;;;6484:37:2;:16;6492:7;6484;:16::i;:::-;:37;;;6480:80;;;-1:-1:-1;6544:5:2;6537:12;;6480:80;6574:22;6588:7;6574:13;:22::i;:::-;6570:65;;;-1:-1:-1;6619:5:2;6612:12;;6570:65;6649:18;;;1005:5;6649:18;6645:4339;;;6683:15;6701:2;-1:-1:-1;;;;;6701:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6701:16:2;6814:32;;;-1:-1:-1;;;6814:32:2;;;;6701:16;;-1:-1:-1;6738:110:2;;6754:2;;6814:14;;:30;;:32;;;;;6701:16;;6814:32;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6814:32:2;6771;;;-1:-1:-1;;;6771:32:2;;;;6808:38;;;;6771:14;;:30;;:32;;;;;6814;;6771;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6771:32:2;6770:33;6759:44;;6758:89;6738:15;:110::i;:::-;6731:117;;;;;6645:4339;6870:14;;;1038:5;6870:14;6866:4118;;;6900:11;6914:2;-1:-1:-1;;;;;6914:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6914:16:2;6958:12;;;-1:-1:-1;;;6958:12:2;;;;6914:16;;-1:-1:-1;6944:11:2;;-1:-1:-1;;;;;6958:10:2;;;;;:12;;;;;6914:16;;6958:12;;;;;;;6944:11;6958:10;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6958:12:2;6985:42;;;-1:-1:-1;;;6985:42:2;;-1:-1:-1;;;;;7005:5:2;;6998:12;;7015:10;;;6997:29;6985:42;;;;;;;6958:12;;-1:-1:-1;;;;;;6985:11:2;;;;;:42;;;;;-1:-1:-1;;6985:42:2;;;;;;;;-1:-1:-1;6985:11:2;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7048:4;7041:11;;;;;;6866:4118;7073:16;;;1073:5;7073:16;7069:3915;;;7105:31;;;-1:-1:-1;;;7105:31:2;;;;;;;;;;;-1:-1:-1;;;;;7105:13:2;;;;;:31;;;;;-1:-1:-1;;7105:31:2;;;;;;;-1:-1:-1;7105:13:2;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7157:4;7150:11;;;;7069:3915;7182:21;;;1113:5;7182:21;7178:3806;;;7219:2;-1:-1:-1;;;;;7219:18:2;;7244:14;:34;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7244:36:2;7219:62;;;;;;;-1:-1:-1;;;;;;7219:62:2;;;7238:42;;;-1:-1:-1;;;;;7219:62:2;;;;;;;;;;;-1:-1:-1;;7219:62:2;;;;;;;-1:-1:-1;7219:62:2;;;;;;;;;;;7178:3806;7327:19;;;1152:5;7327:19;7323:3661;;;7362:2;-1:-1:-1;;;;;7362:16:2;;7379:3;7362:21;;;;;;;;;;;;;-1:-1:-1;;;;;7362:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7323:3661;7429:15;;;1186:5;7429:15;7425:3559;;;7460:30;;;-1:-1:-1;;;7460:30:2;;;;;;;;;;;-1:-1:-1;;;;;7460:12:2;;;;;:30;;;;;-1:-1:-1;;7460:30:2;;;;;;;-1:-1:-1;7460:12:2;:30;;;;;;;;;;7425:3559;7536:17;;;1222:5;7536:17;7532:3452;;;7569:2;-1:-1:-1;;;;;7569:14:2;;7584:3;7569:19;;;;;;;;;;;;;-1:-1:-1;;;;;7569:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7532:3452;7634:16;;;1257:5;7634:16;7630:3354;;;7666:2;-1:-1:-1;;;;;7666:13:2;;7680:3;7666:18;;;;;;;;;;;;;-1:-1:-1;;;;;7666:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7630:3354;7730:14;;;1290:5;7730:14;7726:3258;;;7760:12;7775:2;-1:-1:-1;;;;;7775:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7775:16:2;7819:12;;;-1:-1:-1;;;7819:12:2;;;;7775:16;;-1:-1:-1;7805:11:2;;-1:-1:-1;;;;;7819:10:2;;;;;:12;;;;;7775:16;;7819:12;;;;;;;7805:11;7819:10;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7819:12:2;7898:17;;;-1:-1:-1;;;7898:17:2;;-1:-1:-1;;;;;7861:6:2;;7854:13;;;7872:11;;;7853:31;7898:17;;;;;;;;;7853:31;;-1:-1:-1;;;;;;7898:11:2;;;;;:17;;;;;-1:-1:-1;;7898:17:2;;;;;;;;-1:-1:-1;7898:11:2;:17;;;;;;;;;;7726:3258;7961:15;;;1325:5;7961:15;7957:3027;;;7992:12;8007:2;-1:-1:-1;;;;;8007:11:2;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8007:13:2;;-1:-1:-1;8045:11:2;8054:2;8045:11;;;;;;8085:9;;;;;8120:12;;;:46;;;8148:1;8137:7;:12;;:28;;;;;8164:1;8153:7;:12;;8137:28;8116:99;;;8193:7;8186:14;;8116:99;8228:66;;;-1:-1:-1;;;8228:66:2;;8249:21;8242:29;;8274:18;8290:2;8274:18;;;;8242:50;-1:-1:-1;;;;;8228:66:2;;;;;;;-1:-1:-1;;;;;8228:12:2;;;;;:66;;;;;-1:-1:-1;;8228:66:2;;;;;;;-1:-1:-1;8228:12:2;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8315:4;8308:11;;;;;;;7957:3027;8341:18;;;1513:5;8341:18;8337:2647;;;8382:24;8398:2;8402:3;8382:15;:24::i;:::-;8375:31;;;;8337:2647;8427:18;;;1584:5;8427:18;8423:2561;;;8461:11;8543:1;8491:14;:41;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8537:1;8491:47;-1:-1:-1;;;;;8477:62:2;8484:1;-1:-1:-1;;;;;8477:62:2;;;8476:68;8461:84;;8559:2;-1:-1:-1;;;;;8559:15:2;;8611:4;8605:3;:10;8596:4;8595:5;8576:2;-1:-1:-1;;;;;8576:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8576:16:2;8559:58;;;;;;;-1:-1:-1;;;;;;8559:58:2;;;8576:24;;;;8575:41;;;;-1:-1:-1;;;;;8559:58:2;;;;;;;;;;;;-1:-1:-1;;8559:58:2;;;;;;;-1:-1:-1;8559:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8638:4;8631:11;;;;;8423:2561;8663:18;;;1621:5;8663:18;8659:2325;;;8697:11;8779:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8779:31:2;8745;;;-1:-1:-1;;;8745:31:2;;;;:14;;:29;;:31;;;;;8779;;8745;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8745:31:2;8711;;;-1:-1:-1;;;8711:31:2;;;;:14;;:29;;:31;;;;;8745;;8711;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:65;:99;8697:113;;8824:2;-1:-1:-1;;;;;8824:15:2;;8877:4;8871:3;:10;8862:4;8861:5;8842:2;-1:-1:-1;;;;;8842:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8659:2325;8930:14;;;1654:5;8930:14;8926:2058;;;8960:11;9110:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9110:31:2;9076;;;-1:-1:-1;;;9076:31:2;;;;:14;;:29;;:31;;;;;9110;;9076;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9076:31:2;9042;;;-1:-1:-1;;;9042:31:2;;;;:14;;:29;;:31;;;;;9076;;9042;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9042:31:2;9008;;;-1:-1:-1;;;9008:31:2;;;;:14;;:29;;:31;;;;;9042;;9008;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9008:31:2;8974;;;-1:-1:-1;;;8974:31:2;;;;:14;;:29;;:31;;;;;9008;;8974;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:65;:99;:133;:167;8960:181;;9156:2;-1:-1:-1;;;;;9156:11:2;;9201:4;9195:3;:10;9186:4;9185:5;9170:2;-1:-1:-1;;;;;9170:10:2;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8926:2058;9254:16;;;1689:5;9254:16;9250:1734;;;9286:31;;;-1:-1:-1;;;9286:31:2;;;;;;;;;;;-1:-1:-1;;;;;9286:13:2;;;;;:31;;;;;-1:-1:-1;;9286:31:2;;;;;;;-1:-1:-1;9286:13:2;:31;;;;;;;;;;9250:1734;9363:21;;;1729:5;9363:21;9359:1625;;;9400:2;-1:-1:-1;;;;;9400:18:2;;9425:14;:34;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9359:1625;9508:19;;;1768:5;9508:19;9504:1480;;;9543:2;-1:-1:-1;;;;;9543:16:2;;9560:3;9543:21;;;;;;;;;;;;;-1:-1:-1;;;;;9543:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;9504:1480;9610:15;;;1802:5;9610:15;9606:1378;;;9641:30;;;-1:-1:-1;;;9641:30:2;;;;;;;;;;;-1:-1:-1;;;;;9641:12:2;;;;;:30;;;;;-1:-1:-1;;9641:30:2;;;;;;;-1:-1:-1;9641:12:2;:30;;;;;;;;;;9606:1378;9717:17;;;1838:5;9717:17;9713:1271;;;9750:2;-1:-1:-1;;;;;9750:14:2;;9765:3;9750:19;;;;;;;;;;;;;-1:-1:-1;;;;;9750:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;9713:1271;9815:16;;;1873:5;9815:16;9811:1173;;;9847:2;-1:-1:-1;;;;;9847:13:2;;9861:3;9847:18;;;;;;;;;;;;;-1:-1:-1;;;;;9847:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;9811:1173;9911:14;;;1906:5;9911:14;9907:1077;;;9941:11;9989:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9989:31:2;9955;;;-1:-1:-1;;;9955:31:2;;;;:14;;:29;;:31;;;;;9989;;9955;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9955:31:2;10048:12;;;-1:-1:-1;;;10048:12:2;;;;9955:65;;;;;-1:-1:-1;10034:11:2;;-1:-1:-1;;;;;10048:10:2;;;;;:12;;;;;9955:31;;10048:12;;;;;;;10034:11;10048:10;:12;;;;;;;;;;9907:1077;10189:17;;;1943:5;10189:17;10185:799;;;-1:-1:-1;10449:5:2;10442:12;;10185:799;10475:19;;;1981:5;10475:19;10471:513;;;10679:2;-1:-1:-1;;;;;10679:16:2;;10700:1;10696:3;:5;10679:23;;;;;;;;;;;;;-1:-1:-1;;;;;10679:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;10471:513;10815:18;;;2019:5;10815:18;;:39;;-1:-1:-1;10837:17:2;;;2055:5;10837:17;10815:39;:60;;;-1:-1:-1;10858:17:2;;;2091:5;10858:17;10815:60;:81;;;-1:-1:-1;10879:17:2;;;2127:5;10879:17;10815:81;:100;;;-1:-1:-1;10900:15:2;;;1547:5;10900:15;10815:100;10811:173;;;-1:-1:-1;10968:4:2;10960:13;;10811:173;-1:-1:-1;11000:5:2;6152:4860;;;;;;:::o;11238:105::-;11330:1;11319:12;11335:1;11318:18;;11238:105::o;876:247:4:-;956:4;962:6;988:24;1000:2;1004:7;988:11;:24::i;:::-;984:133;;;1036:4;1042:2;-1:-1:-1;;;;;1042:13:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1042:15:4;1028:30;;-1:-1:-1;1042:15:4;-1:-1:-1;1028:30:4;;984:133;-1:-1:-1;1097:5:4;;-1:-1:-1;1097:5:4;1089:17;;1129:251;1211:4;1217:6;1243:24;1255:2;1259:7;1243:11;:24::i;:::-;1239:135;;;1291:4;1297:2;-1:-1:-1;;;;;1297:15:4;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1386:310;1465:4;1471:6;1497:24;1509:2;1513:7;1497:11;:24::i;:::-;1493:197;;;1537:12;1552:13;:28;1581:2;-1:-1:-1;;;;;1581:13:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1581:15:4;1552:45;;;-1:-1:-1;;;;;;1552:45:4;;;;;;;-1:-1:-1;;;;;1552:45:4;;;;;;;;;;;;;1581:15;;1552:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1552:45:4;1619:4;;-1:-1:-1;1552:45:4;-1:-1:-1;1611:20:4;;-1:-1:-1;1611:20:4;1702:167;1768:4;1774:6;1804:4;1829:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1829:32:4;1810:16;;;-1:-1:-1;;;1810:16:4;;;;-1:-1:-1;;;;;1810:14:4;;;;;:16;;;;;1829:32;;1810:16;;;;;;;;:14;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1810:16:4;1796:66;;-1:-1:-1;1810:51:4;;-1:-1:-1;1702:167:4;;;;:::o;1875:204::-;1937:4;1943:6;1965:10;1978:2;-1:-1:-1;;;;;1978:10:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1978:12:4;2017:16;;;-1:-1:-1;;;2017:16:4;;;;1978:12;;-1:-1:-1;2000:14:4;;-1:-1:-1;;;;;2017:14:4;;;;;:16;;;;;1978:12;;2017:16;;;;;;;2000:14;2017;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2017:16:4;2052:4;;2058:13;;;-1:-1:-1;1875:204:4;;-1:-1:-1;;;1875:204:4:o;2085:128::-;2149:4;2155:6;2185:4;2191:2;-1:-1:-1;;;;;2191:12:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2191:14:4;2177:29;;-1:-1:-1;2191:14:4;-1:-1:-1;2085:128:4;;;:::o;2219:138::-;2288:4;2294:6;2324:4;2330:2;-1:-1:-1;;;;;2330:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:134;2430:4;2436:6;2466:4;2472:2;-1:-1:-1;;;;;2472:15:4;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2503:126;2566:4;2572:6;2602:4;2608:2;-1:-1:-1;;;;;2608:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2635:130;2700:4;2706:6;2736:4;2742:2;-1:-1:-1;;;;;2742:13:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:128;2835:4;2841:6;2871:4;2877:2;-1:-1:-1;;;;;2877:12:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:203;2967:4;2973:6;2995:10;3008:2;-1:-1:-1;;;;;3008:10:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3114:377;3177:4;3183:6;3205:14;3222:2;-1:-1:-1;;;;;3222:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3222:16:4;3262:18;;;-1:-1:-1;;;3262:18:4;;;;3222:16;;-1:-1:-1;3248:11:4;;-1:-1:-1;;;;;3262:16:4;;;;;:18;;;;;3222:16;;3262:18;;;;;;;3248:11;3262:16;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3262:18:4;3303:24;;;-1:-1:-1;;;3303:24:4;;;;3262:18;;-1:-1:-1;3303:14:4;;:22;;:24;;;;;3262:18;;3303:24;;;;;;;;:14;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3303:24:4;-1:-1:-1;;;;;3295:32:4;;;;;;:87;;;;;3342:14;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3342:34:4;3332:44;;-1:-1:-1;;;;;3332:49:4;;;3295:87;3291:194;;;3406:5;3413:1;3398:17;;;;;;;;3291:194;3454:4;3460:2;-1:-1:-1;;;;;3460:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3460:13:4;3446:28;;-1:-1:-1;3460:13:4;-1:-1:-1;3446:28:4;;-1:-1:-1;;3446:28:4;3497:167;3563:4;3569:6;3599:4;3624:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3670:126;3733:4;3739:6;3769:4;3775:2;-1:-1:-1;;;;;3775:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:132;3868:4;3874:6;3904:4;3910:2;-1:-1:-1;;;;;3910:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3940:132;4006:4;4012:6;4042:4;4048:2;-1:-1:-1;;;;;4048:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4078:124;4140:4;4146:6;4176:4;4182:2;-1:-1:-1;;;;;4182:10:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4208:128;4272:4;4278:6;4308:4;4314:2;-1:-1:-1;;;;;4314:12:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4342:138;4411:4;4417:6;4447:4;4453:2;-1:-1:-1;;;;;4453:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:134;4553:4;4559:6;4589:4;4595:2;-1:-1:-1;;;;;4595:15:4;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4626:126;4689:4;4695:6;4725:4;4731:2;-1:-1:-1;;;;;4731:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4758:130;4823:4;4829:6;4859:4;4865:2;-1:-1:-1;;;;;4865:13:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4894:128;4958:4;4964:6;4994:4;5000:2;-1:-1:-1;;;;;5000:12:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5028:124;5090:4;5096:6;5126:4;5132:2;-1:-1:-1;;;;;5132:10:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5158:130;5223:4;5229:6;5259:4;5265:2;-1:-1:-1;;;;;5265:13:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:134;5361:4;5367:6;5397:4;5403:2;-1:-1:-1;;;;;5403:15:4;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5434:136;5502:4;5508:6;5538:4;5544:2;-1:-1:-1;;;;;5544:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576:132;5642:4;5648:6;5678:4;5684:2;-1:-1:-1;;;;;5684:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:130;5779:4;5785:6;5815:4;5821:2;-1:-1:-1;;;;;5821:13:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5850:93;5895:4;;5850:93;:::o;11614:119:2:-;11710:5;11700:15;;;11699:26;;11614:119::o;11739:590::-;11818:4;11838:15;11875:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11875:32:2;11856:16;;;-1:-1:-1;;;11856:16:2;;;;-1:-1:-1;;;;;11856:14:2;;;;;:16;;;;;11875:32;;11856:16;;;;;;;;:14;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11856:16:2;12037:32;;;-1:-1:-1;;;12037:32:2;;;;11856:51;;;;;-1:-1:-1;12037:14:2;;:30;;:32;;;;;11856:16;;12037:32;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12037:32:2;11994;;;-1:-1:-1;;;11994:32:2;;;;12031:38;;;;11994:14;;:30;;:32;;;;;12037;;11994;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11994:32:2;12162:33;;;-1:-1:-1;;;12162:33:2;;;;11993;;11982:44;;;;11981:89;;;;;12162:14;;:31;;:33;;;;;11994:32;;12162:33;;;;;;;;:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12162:33:2;12124;;;-1:-1:-1;;;12124:33:2;;;;-1:-1:-1;;;;;12112:83:2;;;;12124:14;;:31;;:33;;;;;12162;;12124;;;;;;;:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12124:33:2;12113:44;;-1:-1:-1;;;;;12112:83:2;;12108:159;;;12223:14;:31;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12223:33:2;12211:45;12108:159;12276:2;-1:-1:-1;;;;;12276:15:2;;12292:8;12276:25;;;;;;;;;;;;;-1:-1:-1;;;;;12276:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12318:4:2;;11739:590;-1:-1:-1;;;;;;;11739:590:2:o;6175:484:4:-;6255:4;6275:16;6294:14;:34;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6294:36:4;6354:18;;;-1:-1:-1;;;6354:18:4;;;;6294:36;;-1:-1:-1;6340:11:4;;-1:-1:-1;;;;;6354:16:4;;;;;:18;;;;;6294:36;;6354:18;;;;;;;6340:11;6354:16;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6354:18:4;6394:24;;;-1:-1:-1;;;6394:24:4;;;;6354:18;;-1:-1:-1;6394:14:4;;:22;;:24;;;;;6354:18;;6394:24;;;;;;;;:14;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6394:24:4;-1:-1:-1;;;;;6387:31:4;;;;;;;6383:209;;;6447:2;-1:-1:-1;;;;;6447:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6447:19:4;6491:24;;;-1:-1:-1;;;6491:24:4;;;;6434:32;;;;;6491:14;;:22;;:24;;;;;6447:19;;6491:24;;;;;;;:14;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6491:24:4;-1:-1:-1;;;;;6484:31:4;;;;;;;6480:102;;;6548:2;-1:-1:-1;;;;;6548:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6548:19:4;6535:32;;;;;6480:102;-1:-1:-1;6644:1:4;-1:-1:-1;;;;;6611:29:4;;;6635:4;6625:14;;6611:29;6610:35;6609:42;;;-1:-1:-1;6175:484:4;;;;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2270600",
        "executionCost": "2456",
        "totalCost": "2273056"
      },
      "external": {
        "readCsr(MemoryInteractor,uint32)": "infinite",
        "writeCsr(MemoryInteractor,uint32,uint64)": "infinite"
      },
      "internal": {
        "csrIsReadOnly(uint32)": "27",
        "csrPriv(uint32)": "24",
        "writeCsrMstatus(contract MemoryInteractor,uint64)": "infinite"
      }
    },
    "methodIdentifiers": {
      "readCsr(MemoryInteractor,uint32)": "86c8572a",
      "writeCsr(MemoryInteractor,uint32,uint64)": "b6a902a4"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Felipe Argento\",\"kind\":\"dev\",\"methods\":{\"readCsr(MemoryInteractor,uint32)\":{\"details\":\"If/else should change to binary search to increase performance\",\"params\":{\"csrAddr\":\"Address of CSR in file.\",\"mi\":\"MemoryInteractor with which Step function is interacting.\"},\"returns\":{\"_0\":\"Returns the status of the operation (true for success, false otherwise).\",\"_1\":\"Register value.\"}},\"writeCsr(MemoryInteractor,uint32,uint64)\":{\"details\":\"If/else should change to binary search to increase performance\",\"params\":{\"csrAddr\":\"Address of CSR in file.\",\"mi\":\"MemoryInteractor with which Step function is interacting.\",\"val\":\"Value to be written;\"},\"returns\":{\"_0\":\"The status of the operation (true for success, false otherwise).\"}}},\"title\":\"CSR\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"readCsr(MemoryInteractor,uint32)\":{\"notice\":\"Reads the value of a CSR given its address\"},\"writeCsr(MemoryInteractor,uint32,uint64)\":{\"notice\":\"Writes a value to a CSR given its address\"}},\"notice\":\"Implements main CSR read and write logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CSR.sol\":\"CSR\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/BitsManipulationLibrary.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title Bits Manipulation Library\\n/// @author Felipe Argento / Stephen Chen\\n/// @notice Implements bit manipulation helper functions\\nlibrary BitsManipulationLibrary {\\n\\n    /// @notice Sign extend a shorter signed value to the full int32\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function int32SignExtension(int32 number, uint32 wordSize)\\n    public pure returns(int32)\\n    {\\n        uint32 uNumber = uint32(number);\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint32 mask = ((uint32(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return int32(uNumber);\\n    }\\n\\n    /// @notice Sign extend a shorter signed value to the full uint64\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function uint64SignExtension(uint64 number, uint64 wordSize)\\n    public pure returns(uint64)\\n    {\\n        uint64 uNumber = number;\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint64 mask = ((uint64(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return uNumber;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 64 bytes\\n    /// @param num number to have bytes swapped\\n    function uint64SwapEndian(uint64 num) public pure returns(uint64) {\\n        uint64 output = ((num & 0x00000000000000ff) << 56)|\\n            ((num & 0x000000000000ff00) << 40)|\\n            ((num & 0x0000000000ff0000) << 24)|\\n            ((num & 0x00000000ff000000) << 8) |\\n            ((num & 0x000000ff00000000) >> 8) |\\n            ((num & 0x0000ff0000000000) >> 24)|\\n            ((num & 0x00ff000000000000) >> 40)|\\n            ((num & 0xff00000000000000) >> 56);\\n\\n        return output;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 32 bytes\\n    /// @param num number to have bytes swapped\\n    function uint32SwapEndian(uint32 num) public pure returns(uint32) {\\n        uint32 output = ((num >> 24) & 0xff) | ((num << 8) & 0xff0000) | ((num >> 8) & 0xff00) | ((num << 24) & 0xff000000);\\n        return output;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x95b97e0ae364fb91a3fdcf8132e7b61c745c23dd4e5beb980f396c05a69bbd08\",\"license\":\"Apache-2.0\"},\"contracts/CLINT.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"./RealTimeClock.sol\\\";\\n\\n\\n/// @title CLINT\\n/// @author Felipe Argento\\n/// @notice Implements the Core Local Interruptor functionalities\\n/// @dev CLINT active addresses are 0x0200bff8(mtime) and 0x02004000(mtimecmp)\\n/// Reference: The Core of Cartesi, v1.02 - Section 3.2 - The Board\\nlibrary CLINT {\\n\\n    uint64 constant CLINT_MSIP0_ADDR = 0x02000000;\\n    uint64 constant CLINT_MTIMECMP_ADDR = 0x02004000;\\n    uint64 constant CLINT_MTIME_ADDR = 0x0200bff8;\\n\\n    /// @notice reads clint\\n    /// @param offset can be uint8, uint16, uint32 or uint64\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if read was successfull\\n    /// @return uint64 pval\\n    function clintRead(\\n        MemoryInteractor mi,\\n        uint64 offset,\\n        uint64 wordSize\\n    )\\n    public returns (bool, uint64)\\n    {\\n\\n        if (offset == CLINT_MSIP0_ADDR) {\\n            return clintReadMsip(mi, wordSize);\\n        } else if (offset == CLINT_MTIMECMP_ADDR) {\\n            return clintReadMtime(mi, wordSize);\\n        } else if (offset == CLINT_MTIME_ADDR) {\\n            return clintReadMtimecmp(mi, wordSize);\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    /// @notice write to clint\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param offset can be uint8, uint16, uint32 or uint64\\n    /// @param val to be written\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if write was successfull\\n    function clintWrite(\\n        MemoryInteractor mi,\\n        uint64 offset,\\n        uint64 val,\\n        uint64 wordSize)\\n    public returns (bool)\\n    {\\n        if (offset == CLINT_MSIP0_ADDR) {\\n            if (wordSize == 32) {\\n                if ((val & 1) != 0) {\\n                    mi.setMip(RiscVConstants.getMipMsipMask());\\n                } else {\\n                    mi.resetMip(RiscVConstants.getMipMsipMask());\\n                }\\n                return true;\\n            }\\n            return false;\\n        } else if (offset == CLINT_MTIMECMP_ADDR) {\\n            if (wordSize == 64) {\\n                mi.writeClintMtimecmp(val);\\n                mi.resetMip(RiscVConstants.getMipMsipMask());\\n                return true;\\n            }\\n            // partial mtimecmp is not supported\\n            return false;\\n        }\\n        return false;\\n    }\\n\\n    // internal functions\\n    function clintReadMsip(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 32) {\\n            if ((mi.readMip() & RiscVConstants.getMipMsipMask()) == RiscVConstants.getMipMsipMask()) {\\n                return(true, 1);\\n            } else {\\n                return (true, 0);\\n            }\\n        }\\n        return (false, 0);\\n    }\\n\\n    function clintReadMtime(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 64) {\\n            return (true, RealTimeClock.rtcCycleToTime(mi.readMcycle()));\\n        }\\n        return (false, 0);\\n    }\\n\\n    function clintReadMtimecmp(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 64) {\\n            return (true, mi.readClintMtimecmp());\\n        }\\n        return (false, 0);\\n    }\\n\\n    // getters\\n    function getClintMtimecmp() public pure returns (uint64) {\\n        return CLINT_MTIMECMP_ADDR;\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x89a1c4305fc05859156cbd73380aa63ce16a48aba24ce44d4b862b5f415d6362\",\"license\":\"Apache-2.0\"},\"contracts/CSR.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"./CSRReads.sol\\\";\\n\\n/// @title CSR\\n/// @author Felipe Argento\\n/// @notice Implements main CSR read and write logic\\nlibrary CSR {\\n\\n    //CSR addresses\\n    uint32 constant UCYCLE = 0xc00;\\n    uint32 constant UTIME = 0xc01;\\n    uint32 constant UINSTRET =  0xc02;\\n\\n    uint32 constant SSTATUS = 0x100;\\n    uint32 constant SIE = 0x104;\\n    uint32 constant STVEC = 0x105;\\n    uint32 constant SCOUNTEREN = 0x106;\\n\\n    uint32 constant SSCRATCH = 0x140;\\n    uint32 constant SEPC = 0x141;\\n    uint32 constant SCAUSE = 0x142;\\n    uint32 constant STVAL = 0x143;\\n    uint32 constant SIP = 0x144;\\n\\n    uint32 constant SATP = 0x180;\\n\\n    uint32 constant MVENDORID = 0xf11;\\n    uint32 constant MARCHID = 0xf12;\\n    uint32 constant MIMPID = 0xf13;\\n    uint32 constant MHARTID = 0xf14;\\n\\n    uint32 constant MSTATUS = 0x300;\\n    uint32 constant MISA = 0x301;\\n    uint32 constant MEDELEG = 0x302;\\n    uint32 constant MIDELEG = 0x303;\\n    uint32 constant MIE = 0x304;\\n    uint32 constant MTVEC = 0x305;\\n    uint32 constant MCOUNTEREN = 0x306;\\n\\n    uint32 constant MSCRATCH = 0x340;\\n    uint32 constant MEPC = 0x341;\\n    uint32 constant MCAUSE = 0x342;\\n    uint32 constant MTVAL = 0x343;\\n    uint32 constant MIP = 0x344;\\n\\n    uint32 constant MCYCLE = 0xb00;\\n    uint32 constant MINSTRET = 0xb02;\\n\\n    uint32 constant TSELECT = 0x7a0;\\n    uint32 constant TDATA1 = 0x7a1;\\n    uint32 constant TDATA2 = 0x7a2;\\n    uint32 constant TDATA3 = 0x7a3;\\n\\n    /// @notice Reads the value of a CSR given its address\\n    /// @dev If/else should change to binary search to increase performance\\n    /// @param mi MemoryInteractor with which Step function is interacting.\\n    /// @param csrAddr Address of CSR in file.\\n    /// @return Returns the status of the operation (true for success, false otherwise).\\n    /// @return Register value.\\n    function readCsr(MemoryInteractor mi, uint32 csrAddr)\\n    public returns (bool, uint64)\\n    {\\n        // Attemps to access a CSR without appropriate privilege level raises a\\n        // illegal instruction exception.\\n        // Reference: riscv-privileged-v1.10 - section 2.1 - page 7.\\n        if (csrPriv(csrAddr) > mi.readIflagsPrv()) {\\n            return(false, 0);\\n        }\\n        if (csrAddr == UCYCLE) {\\n            return CSRReads.readCsrCycle(mi, csrAddr);\\n        } else if (csrAddr == UINSTRET) {\\n            return CSRReads.readCsrInstret(mi, csrAddr);\\n        } else if (csrAddr == UTIME) {\\n            return CSRReads.readCsrTime(mi, csrAddr);\\n        } else if (csrAddr == SSTATUS) {\\n            return CSRReads.readCsrSstatus(mi);\\n        } else if (csrAddr == SIE) {\\n            return CSRReads.readCsrSie(mi);\\n        } else if (csrAddr == STVEC) {\\n            return CSRReads.readCsrStvec(mi);\\n        } else if (csrAddr == SCOUNTEREN) {\\n            return CSRReads.readCsrScounteren(mi);\\n        } else if (csrAddr == SSCRATCH) {\\n            return CSRReads.readCsrSscratch(mi);\\n        } else if (csrAddr == SEPC) {\\n            return CSRReads.readCsrSepc(mi);\\n        } else if (csrAddr == SCAUSE) {\\n            return CSRReads.readCsrScause(mi);\\n        } else if (csrAddr == STVAL) {\\n            return CSRReads.readCsrStval(mi);\\n        } else if (csrAddr == SIP) {\\n            return CSRReads.readCsrSip(mi);\\n        } else if (csrAddr == SATP) {\\n            return CSRReads.readCsrSatp(mi);\\n        } else if (csrAddr == MSTATUS) {\\n            return CSRReads.readCsrMstatus(mi);\\n        } else if (csrAddr == MISA) {\\n            return CSRReads.readCsrMisa(mi);\\n        } else if (csrAddr == MEDELEG) {\\n            return CSRReads.readCsrMedeleg(mi);\\n        } else if (csrAddr == MIDELEG) {\\n            return CSRReads.readCsrMideleg(mi);\\n        } else if (csrAddr == MIE) {\\n            return CSRReads.readCsrMie(mi);\\n        } else if (csrAddr == MTVEC) {\\n            return CSRReads.readCsrMtvec(mi);\\n        } else if (csrAddr == MCOUNTEREN) {\\n            return CSRReads.readCsrMcounteren(mi);\\n        } else if (csrAddr == MSCRATCH) {\\n            return CSRReads.readCsrMscratch(mi);\\n        } else if (csrAddr == MEPC) {\\n            return CSRReads.readCsrMepc(mi);\\n        } else if (csrAddr == MCAUSE) {\\n            return CSRReads.readCsrMcause(mi);\\n        } else if (csrAddr == MTVAL) {\\n            return CSRReads.readCsrMtval(mi);\\n        } else if (csrAddr == MIP) {\\n            return CSRReads.readCsrMip(mi);\\n        } else if (csrAddr == MCYCLE) {\\n            return CSRReads.readCsrMcycle(mi);\\n        } else if (csrAddr == MINSTRET) {\\n            return CSRReads.readCsrMinstret(mi);\\n        } else if (csrAddr == MVENDORID) {\\n            return CSRReads.readCsrMvendorid(mi);\\n        } else if (csrAddr == MARCHID) {\\n            return CSRReads.readCsrMarchid(mi);\\n        } else if (csrAddr == MIMPID) {\\n            return CSRReads.readCsrMimpid(mi);\\n        } else if (csrAddr == TSELECT || csrAddr == TDATA1 || csrAddr == TDATA2 || csrAddr == TDATA3 || csrAddr == MHARTID) {\\n            //All hardwired to zero\\n            return (true, 0);\\n        }\\n\\n        return CSRReads.readCsrFail();\\n    }\\n\\n    /// @notice Writes a value to a CSR given its address\\n    /// @dev If/else should change to binary search to increase performance\\n    /// @param mi MemoryInteractor with which Step function is interacting.\\n    /// @param csrAddr Address of CSR in file.\\n    /// @param val Value to be written;\\n    /// @return The status of the operation (true for success, false otherwise).\\n    function writeCsr(\\n        MemoryInteractor mi,\\n        uint32 csrAddr,\\n        uint64 val\\n    )\\n    public returns (bool)\\n    {\\n        // Attemps to access a CSR without appropriate privilege level raises a\\n        // illegal instruction exception.\\n        // Reference: riscv-privileged-v1.10 - section 2.1 - page 7.\\n        if (csrPriv(csrAddr) > mi.readIflagsPrv()) {\\n            return false;\\n        }\\n\\n        if (csrIsReadOnly(csrAddr)) {\\n            return false;\\n        }\\n\\n        if (csrAddr == SSTATUS) {\\n            uint64 cMstatus = mi.readMstatus();\\n            return writeCsrMstatus(mi, (cMstatus & ~RiscVConstants.getSstatusWMask()) | (val & RiscVConstants.getSstatusWMask()));\\n\\n        } else if (csrAddr == SIE) {\\n            uint64 mask = mi.readMideleg();\\n            uint64 cMie = mi.readMie();\\n\\n            mi.writeMie((cMie & ~mask) | (val & mask));\\n            return true;\\n        } else if (csrAddr == STVEC) {\\n            mi.writeStvec(val & uint64(~3));\\n            return true;\\n        } else if (csrAddr == SCOUNTEREN) {\\n            mi.writeScounteren(val & RiscVConstants.getScounterenRwMask());\\n            return true;\\n        } else if (csrAddr == SSCRATCH) {\\n            mi.writeSscratch(val);\\n            return true;\\n        } else if (csrAddr == SEPC) {\\n            mi.writeSepc(val & uint64(~3));\\n            return true;\\n        } else if (csrAddr == SCAUSE) {\\n            mi.writeScause(val);\\n            return true;\\n        } else if (csrAddr == STVAL) {\\n            mi.writeStval(val);\\n            return true;\\n        } else if (csrAddr == SIP) {\\n            uint64 cMask = mi.readMideleg();\\n            uint64 cMip = mi.readMip();\\n\\n            cMip = (cMip & ~cMask) | (val & cMask);\\n            mi.writeMip(cMip);\\n            return true;\\n        } else if (csrAddr == SATP) {\\n            uint64 cSatp = mi.readSatp();\\n            int mode = cSatp >> 60;\\n            int newMode = (val >> 60) & 0xf;\\n\\n            if (newMode == 0 || (newMode >= 8 && newMode <= 9)) {\\n                mode = newMode;\\n            }\\n            mi.writeSatp((val & ((uint64(1) << 44) - 1) | uint64(mode) << 60));\\n            return true;\\n\\n        } else if (csrAddr == MSTATUS) {\\n            return writeCsrMstatus(mi, val);\\n        } else if (csrAddr == MEDELEG) {\\n            uint64 mask = ((uint64(1) << (RiscVConstants.getMcauseStoreAmoPageFault() + 1)) - 1);\\n            mi.writeMedeleg((mi.readMedeleg() & ~mask) | (val & mask));\\n            return true;\\n        } else if (csrAddr == MIDELEG) {\\n            uint64 mask = RiscVConstants.getMipSsipMask() | RiscVConstants.getMipStipMask() | RiscVConstants.getMipSeipMask();\\n            mi.writeMideleg(((mi.readMideleg() & ~mask) | (val & mask)));\\n            return true;\\n        } else if (csrAddr == MIE) {\\n            uint64 mask = RiscVConstants.getMipMsipMask() | RiscVConstants.getMipMtipMask() | RiscVConstants.getMipSsipMask() | RiscVConstants.getMipStipMask() | RiscVConstants.getMipSeipMask();\\n\\n            mi.writeMie(((mi.readMie() & ~mask) | (val & mask)));\\n            return true;\\n        } else if (csrAddr == MTVEC) {\\n            mi.writeMtvec(val & uint64(~3));\\n            return true;\\n        } else if (csrAddr == MCOUNTEREN) {\\n            mi.writeMcounteren(val & RiscVConstants.getMcounterenRwMask());\\n            return true;\\n        } else if (csrAddr == MSCRATCH) {\\n            mi.writeMscratch(val);\\n            return true;\\n        } else if (csrAddr == MEPC) {\\n            mi.writeMepc(val & uint64(~3));\\n            return true;\\n        } else if (csrAddr == MCAUSE) {\\n            mi.writeMcause(val);\\n            return true;\\n        } else if (csrAddr == MTVAL) {\\n            mi.writeMtval(val);\\n            return true;\\n        } else if (csrAddr == MIP) {\\n            uint64 mask = RiscVConstants.getMipSsipMask() | RiscVConstants.getMipStipMask();\\n            uint64 cMip = mi.readMip();\\n\\n            cMip = (cMip & ~mask) | (val & mask);\\n\\n            mi.writeMip(cMip);\\n            return true;\\n        } else if (csrAddr == MCYCLE) {\\n            // We can't allow writes to mcycle because we use it to measure the progress in machine execution.\\n            // BBL enables all counters in both M- and S-modes\\n            // We instead raise an exception.\\n            return false;\\n        } else if (csrAddr == MINSTRET) {\\n            // In Spike, QEMU, and riscvemu, mcycle and minstret are the aliases for the same counter\\n            // QEMU calls exit (!) on writes to mcycle or minstret\\n            mi.writeMinstret(val-1); // The value will be incremented after the instruction is executed\\n            return true;\\n        } else if (csrAddr == TSELECT || csrAddr == TDATA1 || csrAddr == TDATA2 || csrAddr == TDATA3 || csrAddr == MISA) {\\n            // Ignore writes\\n            return (true);\\n        }\\n        return false;\\n    }\\n\\n    // Extract privilege level from CSR\\n    // Bits csr[9:8] encode the CSR's privilege level (i.e lowest privilege level\\n    // that can access that CSR.\\n    // Reference: riscv-privileged-v1.10 - section 2.1 - page 7.\\n    function csrPriv(uint32 csrAddr) internal pure returns(uint32) {\\n        return (csrAddr >> 8) & 3;\\n    }\\n\\n    // The standard RISC-V ISA sets aside a 12-bit encoding space (csr[11:0])\\n    // The top two bits (csr[11:10]) indicate whether the register is\\n    // read/write (00, 01, or 10) or read-only (11)\\n    // Reference: riscv-privileged-v1.10 - section 2.1 - page 7.\\n    function csrIsReadOnly(uint32 csrAddr) internal pure returns(bool) {\\n        return ((csrAddr & 0xc00) == 0xc00);\\n    }\\n\\n    function writeCsrMstatus(MemoryInteractor mi, uint64 val)\\n    internal returns(bool)\\n    {\\n        uint64 cMstatus = mi.readMstatus() & RiscVConstants.getMstatusRMask();\\n        // Modifiy  only bits that can be written to\\n        cMstatus = (cMstatus & ~RiscVConstants.getMstatusWMask()) | (val & RiscVConstants.getMstatusWMask());\\n        //Update the SD bit\\n        if ((cMstatus & RiscVConstants.getMstatusFsMask()) == RiscVConstants.getMstatusFsMask()) {\\n            cMstatus |= RiscVConstants.getMstatusSdMask();\\n        }\\n        mi.writeMstatus(cMstatus);\\n        return true;\\n    }\\n\\n}\\n\\n\",\"keccak256\":\"0x49fc81328191299fd24ac63e015d933af469067768a0cf777d3b4b9396e18617\",\"license\":\"Apache-2.0\"},\"contracts/CSRReads.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"./RiscVDecoder.sol\\\";\\nimport \\\"./RealTimeClock.sol\\\";\\n\\n/// @title CSRReads\\n/// @author Felipe Argento\\n/// @notice Implements CSR read logic\\nlibrary CSRReads {\\n    function readCsrCycle(MemoryInteractor mi, uint32 csrAddr)\\n    internal returns(bool, uint64)\\n    {\\n        if (rdcounteren(mi, csrAddr)) {\\n            return (true, mi.readMcycle());\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    function readCsrInstret(MemoryInteractor mi, uint32 csrAddr)\\n    internal returns(bool, uint64)\\n    {\\n        if (rdcounteren(mi, csrAddr)) {\\n            return (true, mi.readMinstret());\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    function readCsrTime(MemoryInteractor mi, uint32 csrAddr)\\n    internal returns(bool, uint64)\\n    {\\n        if (rdcounteren(mi, csrAddr)) {\\n            uint64 mtime = RealTimeClock.rtcCycleToTime(mi.readMcycle());\\n            return (true, mtime);\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    function readCsrSstatus(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMstatus() & RiscVConstants.getSstatusRMask());\\n    }\\n\\n    function readCsrSie(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        uint64 mie = mi.readMie();\\n        uint64 mideleg = mi.readMideleg();\\n\\n        return (true, mie & mideleg);\\n    }\\n\\n    function readCsrStvec(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readStvec());\\n    }\\n\\n    function readCsrScounteren(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readScounteren());\\n    }\\n\\n    function readCsrSscratch(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readSscratch());\\n    }\\n\\n    function readCsrSepc(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readSepc());\\n    }\\n\\n    function readCsrScause(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readScause());\\n    }\\n\\n    function readCsrStval(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readStval());\\n    }\\n\\n    function readCsrSip(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        uint64 mip = mi.readMip();\\n        uint64 mideleg = mi.readMideleg();\\n        return (true, mip & mideleg);\\n    }\\n\\n    function readCsrSatp(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        uint64 mstatus = mi.readMstatus();\\n        uint64 priv = mi.readIflagsPrv();\\n\\n        if (priv == RiscVConstants.getPrvS() && (mstatus & RiscVConstants.getMstatusTvmMask() != 0)) {\\n            return (false, 0);\\n        } else {\\n            return (true, mi.readSatp());\\n        }\\n    }\\n\\n    function readCsrMstatus(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMstatus() & RiscVConstants.getMstatusRMask());\\n    }\\n\\n    function readCsrMisa(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMisa());\\n    }\\n\\n    function readCsrMedeleg(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMedeleg());\\n    }\\n\\n    function readCsrMideleg(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMideleg());\\n    }\\n\\n    function readCsrMie(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMie());\\n    }\\n\\n    function readCsrMtvec(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMtvec());\\n    }\\n\\n    function readCsrMcounteren(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMcounteren());\\n    }\\n\\n    function readCsrMscratch(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMscratch());\\n    }\\n\\n    function readCsrMepc(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMepc());\\n    }\\n\\n    function readCsrMcause(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMcause());\\n    }\\n\\n    function readCsrMtval(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMtval());\\n    }\\n\\n    function readCsrMip(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMip());\\n    }\\n\\n    function readCsrMcycle(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMcycle());\\n    }\\n\\n    function readCsrMinstret(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMinstret());\\n    }\\n\\n    function readCsrMvendorid(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMvendorid());\\n    }\\n\\n    function readCsrMarchid(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMarchid());\\n    }\\n\\n    function readCsrMimpid(MemoryInteractor mi)\\n    internal returns(bool, uint64)\\n    {\\n        return (true, mi.readMimpid());\\n    }\\n\\n    function readCsrFail() internal pure returns(bool, uint64) {\\n        return (false, 0);\\n    }\\n\\n    // Check if counter is enabled. mcounteren control the availability of the\\n    // hardware performance monitoring counter to the next-lowest priv level.\\n    // Reference: riscv-privileged-v1.10 - section 3.1.17 - page 32.\\n    function rdcounteren(MemoryInteractor mi, uint32 csrAddr)\\n    internal returns (bool)\\n    {\\n        uint64 counteren = RiscVConstants.getMcounterenRwMask();\\n        uint64 priv = mi.readIflagsPrv();\\n\\n        if (priv < RiscVConstants.getPrvM()) {\\n            counteren &= mi.readMcounteren();\\n            if (priv < RiscVConstants.getPrvS()) {\\n                counteren &= mi.readScounteren();\\n            }\\n        }\\n        return (((counteren >> (csrAddr & 0x1f)) & 1) != 0);\\n    }\\n}\\n\",\"keccak256\":\"0x2382759c229a1575464520afa5d2c5a3abe2c5d527913c93fb797288598d5512\",\"license\":\"Apache-2.0\"},\"contracts/HTIF.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n// @title HTIF\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\n\\n\\n/// @title HTIF\\n/// @author Felipe Argento\\n/// @notice Host-Target-Interface (HTIF) mediates communcation with external world.\\n/// @dev Its active addresses are 0x40000000(tohost) and 0x40000008(from host)\\n/// Reference: The Core of Cartesi, v1.02 - Section 3.2 - The Board\\nlibrary HTIF {\\n\\n    uint64 constant HTIF_TOHOST_ADDR_CONST = 0x40008000;\\n    uint64 constant HTIF_FROMHOST_ADDR_CONST = 0x40008008;\\n    uint64 constant HTIF_IYIELD_ADDR_CONST = 0x40008020;\\n\\n    // [c++] enum HTIF_devices\\n    uint64 constant HTIF_DEVICE_HALT = 0;        //< Used to halt machine\\n    uint64 constant HTIF_DEVICE_CONSOLE = 1;     //< Used for console input and output\\n    uint64 constant HTIF_DEVICE_YIELD = 2;       //< Used to yield control back to host\\n\\n    // [c++] enum HTIF_commands\\n    uint64 constant HTIF_HALT_HALT = 0;\\n    uint64 constant HTIF_CONSOLE_GETCHAR = 0;\\n    uint64 constant HTIF_CONSOLE_PUTCHAR = 1;\\n    uint64 constant HTIF_YIELD_PROGRESS = 0;\\n    uint64 constant HTIF_YIELD_ROLLUP = 1;\\n\\n    /// @notice reads htif\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param addr address to read from\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if read was successfull\\n    /// @return uint64 pval\\n    function htifRead(\\n        MemoryInteractor mi,\\n        uint64 addr,\\n        uint64 wordSize\\n    )\\n    public returns (bool, uint64)\\n    {\\n        // HTIF reads must be aligned and 8 bytes\\n        if (wordSize != 64 || (addr & 7) != 0) {\\n            return (false, 0);\\n        }\\n\\n        if (addr == HTIF_TOHOST_ADDR_CONST) {\\n            return (true, mi.readHtifTohost());\\n        } else if (addr == HTIF_FROMHOST_ADDR_CONST) {\\n            return (true, mi.readHtifFromhost());\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    /// @notice write htif\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param addr address to read from\\n    /// @param val value to be written\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if write was successfull\\n    function htifWrite(\\n        MemoryInteractor mi,\\n        uint64 addr,\\n        uint64 val,\\n        uint64 wordSize\\n    )\\n    public returns (bool)\\n    {\\n        // HTIF writes must be aligned and 8 bytes\\n        if (wordSize != 64 || (addr & 7) != 0) {\\n            return false;\\n        }\\n        if (addr == HTIF_TOHOST_ADDR_CONST) {\\n            return htifWriteTohost(mi, val);\\n        } else if (addr == HTIF_FROMHOST_ADDR_CONST) {\\n            mi.writeHtifFromhost(val);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    // Internal functions\\n    function htifWriteFromhost(MemoryInteractor mi, uint64 val)\\n    internal returns (bool)\\n    {\\n        mi.writeHtifFromhost(val);\\n        // TO-DO: check if h is interactive? reset from host? pollConsole?\\n        return true;\\n    }\\n\\n    function htifWriteTohost(MemoryInteractor mi, uint64 tohost)\\n    internal returns (bool)\\n    {\\n        uint32 device = uint32(tohost >> 56);\\n        uint32 cmd = uint32((tohost >> 48) & 0xff);\\n        uint64 payload = uint32((tohost & (~(uint256(1) >> 16))));\\n\\n        mi.writeHtifTohost(tohost);\\n\\n        if (device == HTIF_DEVICE_HALT) {\\n            return htifHalt(\\n                mi,\\n                cmd,\\n                payload);\\n        } else if (device == HTIF_DEVICE_CONSOLE) {\\n            return htifConsole(\\n                mi,\\n                cmd,\\n                payload);\\n        } else if (device == HTIF_DEVICE_YIELD) {\\n            return htifYield(\\n                mi,\\n                cmd,\\n                payload);\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    function htifHalt(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        if (cmd == HTIF_HALT_HALT && ((payload & 1) == 1) ) {\\n            //set iflags to halted\\n            mi.setIflagsH(true);\\n        }\\n        return true;\\n    }\\n\\n    function htifYield(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        // If yield command is enabled, yield\\n        if ((mi.readHtifIYield() >> cmd) & 1 == 1) {\\n            mi.setIflagsY(true);\\n            mi.writeHtifFromhost((HTIF_DEVICE_YIELD << 56) | cmd << 48);\\n        }\\n\\n        return true;\\n    }\\n\\n    function htifConsole(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        if (cmd == HTIF_CONSOLE_PUTCHAR) {\\n            htifPutchar(mi);\\n        } else if (cmd == HTIF_CONSOLE_GETCHAR) {\\n            htifGetchar(mi);\\n        } else {\\n            // Unknown HTIF console commands are silently ignored\\n            return true;\\n        }\\n    }\\n\\n    function htifPutchar(MemoryInteractor mi) internal\\n    returns (bool)\\n    {\\n        // TO-DO: what to do in the blockchain? Generate event?\\n        mi.writeHtifFromhost((HTIF_DEVICE_CONSOLE << 56) | uint64(HTIF_CONSOLE_PUTCHAR) << 48);\\n        return true;\\n    }\\n\\n    function htifGetchar(MemoryInteractor mi) internal\\n    returns (bool)\\n    {\\n        mi.writeHtifFromhost((HTIF_DEVICE_CONSOLE << 56) | uint64(HTIF_CONSOLE_GETCHAR) << 48);\\n        return true;\\n    }\\n\\n    // getters\\n    function getHtifToHostAddr() public pure returns (uint64) {\\n        return HTIF_TOHOST_ADDR_CONST;\\n    }\\n\\n    function getHtifFromHostAddr() public pure returns (uint64) {\\n        return HTIF_FROMHOST_ADDR_CONST;\\n    }\\n\\n    function getHtifIYieldAddr() public pure returns (uint64) {\\n        return HTIF_IYIELD_ADDR_CONST;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x269d377ff4e5c3d0c65bb18d949f249c7e56ab2c208d8fb3f9376ac4d0b5f8f8\",\"license\":\"Apache-2.0\"},\"contracts/MemoryInteractor.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n/// @title MemoryInteractor.sol\\npragma solidity ^0.7.0;\\n\\nimport \\\"./ShadowAddresses.sol\\\";\\nimport \\\"./HTIF.sol\\\";\\nimport \\\"./CLINT.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"@cartesi/util/contracts/BitsManipulationLibrary.sol\\\";\\n\\n/// @title MemoryInteractor\\n/// @author Felipe Argento\\n/// @notice Bridge between Memory Manager and Step\\n/// @dev Every read performed by mi.memoryRead or mi.write should be followed by an\\n/// @dev endianess swap from little endian to big endian. This is the case because\\n/// @dev EVM is big endian but RiscV is little endian.\\n/// @dev Reference: riscv-spec-v2.2.pdf - Preface to Version 2.0\\n/// @dev Reference: Ethereum yellowpaper - Version 69351d5\\n/// @dev    Appendix H. Virtual Machine Specification\\ncontract MemoryInteractor {\\n\\n    uint256 rwIndex; // read write index\\n    uint64[] rwPositions; // read write positions\\n    bytes8[] rwValues; // read write values\\n    bool[] isRead; // true if access is read, false if its write\\n\\n    function initializeMemory(\\n        uint64[] memory _rwPositions,\\n        bytes8[] memory _rwValues,\\n        bool[] memory _isRead\\n    ) virtual public\\n    {\\n        require(_rwPositions.length == _rwValues.length, \\\"Read/write arrays are not the same size\\\");\\n        require(_rwPositions.length == _isRead.length, \\\"Read/write arrays are not the same size\\\");\\n        rwIndex = 0;\\n        rwPositions = _rwPositions;\\n        rwValues = _rwValues;\\n        isRead = _isRead;\\n    }\\n\\n    function getRWIndex() public view returns (uint256) {\\n        return rwIndex;\\n    }\\n    // Reads\\n    function readX(uint64 registerIndex) public returns (uint64) {\\n        return memoryRead(registerIndex * 8);\\n    }\\n\\n    function readClintMtimecmp() public returns (uint64) {\\n        return memoryRead(CLINT.getClintMtimecmp());\\n    }\\n\\n    function readHtifFromhost() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifFromHostAddr());\\n    }\\n\\n    function readHtifTohost() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifToHostAddr());\\n    }\\n\\n    function readHtifIYield() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifIYieldAddr());\\n    }\\n\\n    function readMie() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMie());\\n    }\\n\\n    function readMcause() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcause());\\n    }\\n\\n    function readMinstret() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMinstret());\\n    }\\n\\n    function readMcycle() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcycle());\\n    }\\n\\n    function readMcounteren() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcounteren());\\n    }\\n\\n    function readMepc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMepc());\\n    }\\n\\n    function readMip() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMip());\\n    }\\n\\n    function readMtval() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMtval());\\n    }\\n\\n    function readMvendorid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMvendorid());\\n    }\\n\\n    function readMarchid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMarchid());\\n    }\\n\\n    function readMimpid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMimpid());\\n    }\\n\\n    function readMscratch() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMscratch());\\n    }\\n\\n    function readSatp() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSatp());\\n    }\\n\\n    function readScause() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getScause());\\n    }\\n\\n    function readSepc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSepc());\\n    }\\n\\n    function readScounteren() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getScounteren());\\n    }\\n\\n    function readStval() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getStval());\\n    }\\n\\n    function readMideleg() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMideleg());\\n    }\\n\\n    function readMedeleg() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMedeleg());\\n    }\\n\\n    function readMtvec() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMtvec());\\n    }\\n\\n    function readIlrsc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getIlrsc());\\n    }\\n\\n    function readPc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getPc());\\n    }\\n\\n    function readSscratch() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSscratch());\\n    }\\n\\n    function readStvec() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getStvec());\\n    }\\n\\n    function readMstatus() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMstatus());\\n    }\\n\\n    function readMisa() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMisa());\\n    }\\n\\n    function readIflags() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getIflags());\\n    }\\n\\n    function readIflagsPrv() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsPrvMask()) >> RiscVConstants.getIflagsPrvShift();\\n    }\\n\\n    function readIflagsH() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsHMask()) >> RiscVConstants.getIflagsHShift();\\n    }\\n\\n    function readIflagsY() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsYMask()) >> RiscVConstants.getIflagsYShift();\\n    }\\n\\n    function readMemory(uint64 paddr, uint64 wordSize) public returns (uint64) {\\n        // get relative address from unaligned paddr\\n        uint64 closestStartAddr = paddr & uint64(~7);\\n        uint64 relAddr = paddr - closestStartAddr;\\n\\n        // value just like its on MM, without endianess swap\\n        uint64 val = pureMemoryRead(closestStartAddr);\\n\\n        // mask to clean a piece of the value that was on memory\\n        uint64 valueMask = BitsManipulationLibrary.uint64SwapEndian(((uint64(2) ** wordSize) - 1) << relAddr*8);\\n        val = BitsManipulationLibrary.uint64SwapEndian(val & valueMask) >> relAddr*8;\\n        return val;\\n    }\\n\\n    // Sets\\n    function setPriv(uint64 newPriv) public {\\n        writeIflagsPrv(newPriv);\\n        writeIlrsc(uint64(-1)); // invalidate reserved address\\n    }\\n\\n    function setIflagsI(bool idle) public {\\n        uint64 iflags = readIflags();\\n\\n        if (idle) {\\n            iflags = (iflags | RiscVConstants.getIflagsIMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsIMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function setMip(uint64 mask) public {\\n        uint64 mip = readMip();\\n        mip |= mask;\\n\\n        writeMip(mip);\\n\\n        setIflagsI(false);\\n    }\\n\\n    function resetMip(uint64 mask) public {\\n        uint64 mip = readMip();\\n        mip &= ~mask;\\n        writeMip(mip);\\n    }\\n\\n    // Writes\\n    function writeMie(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMie(), value);\\n    }\\n\\n    function writeStvec(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getStvec(), value);\\n    }\\n\\n    function writeSscratch(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSscratch(), value);\\n    }\\n\\n    function writeMip(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMip(), value);\\n    }\\n\\n    function writeSatp(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSatp(), value);\\n    }\\n\\n    function writeMedeleg(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMedeleg(), value);\\n    }\\n\\n    function writeMideleg(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMideleg(), value);\\n    }\\n\\n    function writeMtvec(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMtvec(), value);\\n    }\\n\\n    function writeMcounteren(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcounteren(), value);\\n    }\\n\\n    function writeMcycle(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcycle(), value);\\n    }\\n\\n    function writeMinstret(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMinstret(), value);\\n    }\\n\\n    function writeMscratch(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMscratch(), value);\\n    }\\n\\n    function writeScounteren(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getScounteren(), value);\\n    }\\n\\n    function writeScause(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getScause(), value);\\n    }\\n\\n    function writeSepc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSepc(), value);\\n    }\\n\\n    function writeStval(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getStval(), value);\\n    }\\n\\n    function writeMstatus(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMstatus(), value);\\n    }\\n\\n    function writeMcause(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcause(), value);\\n    }\\n\\n    function writeMepc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMepc(), value);\\n    }\\n\\n    function writeMtval(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMtval(), value);\\n    }\\n\\n    function writePc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getPc(), value);\\n    }\\n\\n    function writeIlrsc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getIlrsc(), value);\\n    }\\n\\n    function writeClintMtimecmp(uint64 value) public {\\n        memoryWrite(CLINT.getClintMtimecmp(), value);\\n    }\\n\\n    function writeHtifFromhost(uint64 value) public {\\n        memoryWrite(HTIF.getHtifFromHostAddr(), value);\\n    }\\n\\n    function writeHtifTohost(uint64 value) public {\\n        memoryWrite(HTIF.getHtifToHostAddr(), value);\\n    }\\n\\n    function setIflagsH(bool halt) public {\\n        uint64 iflags = readIflags();\\n\\n        if (halt) {\\n            iflags = (iflags | RiscVConstants.getIflagsHMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsHMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function setIflagsY(bool isYield) public {\\n        uint64 iflags = readIflags();\\n\\n        if (isYield) {\\n            iflags = (iflags | RiscVConstants.getIflagsYMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsYMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function writeIflagsPrv(uint64 newPriv) public {\\n        uint64 iflags = readIflags();\\n\\n        // Clears bits 3 and 2 of iflags and use or to set new value\\n        iflags = (iflags & (~RiscVConstants.getIflagsPrvMask())) | (newPriv << RiscVConstants.getIflagsPrvShift());\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function writeMemory(\\n        uint64 paddr,\\n        uint64 value,\\n        uint64 wordSize\\n    ) public\\n    {\\n        uint64 numberOfBytes = wordSize / 8;\\n\\n        if (numberOfBytes == 8) {\\n            memoryWrite(paddr, value);\\n        } else {\\n            // get relative address from unaligned paddr\\n            uint64 closestStartAddr = paddr & uint64(~7);\\n            uint64 relAddr = paddr - closestStartAddr;\\n\\n            // oldvalue just like its on MM, without endianess swap\\n            uint64 oldVal = pureMemoryRead(closestStartAddr);\\n\\n            // Mask to clean a piece of the value that was on memory\\n            uint64 valueMask = BitsManipulationLibrary.uint64SwapEndian(((uint64(2) ** wordSize) - 1) << relAddr*8);\\n\\n            // value is big endian, need to swap before further operation\\n            uint64 valueSwap = BitsManipulationLibrary.uint64SwapEndian(value & ((uint64(2) ** wordSize) - 1));\\n\\n            uint64 newvalue = ((oldVal & ~valueMask) | (valueSwap >> relAddr*8));\\n\\n            newvalue = BitsManipulationLibrary.uint64SwapEndian(newvalue);\\n            memoryWrite(closestStartAddr, newvalue);\\n        }\\n    }\\n\\n    function writeX(uint64 registerindex, uint64 value) public {\\n        memoryWrite(registerindex * 8, value);\\n    }\\n\\n    // Internal functions\\n    function memoryRead(uint64 _readAddress) public returns (uint64) {\\n        return BitsManipulationLibrary.uint64SwapEndian(\\n            uint64(memoryAccessManager(_readAddress, true))\\n        );\\n    }\\n\\n    function memoryWrite(uint64 _writeAddress, uint64 _value) virtual public {\\n        bytes8 bytesvalue = bytes8(BitsManipulationLibrary.uint64SwapEndian(_value));\\n        require(memoryAccessManager(_writeAddress, false) == bytesvalue, \\\"Written value does not match\\\");\\n    }\\n\\n    // Memory Write without endianess swap\\n    function pureMemoryWrite(uint64 _writeAddress, uint64 _value) virtual internal {\\n        require(\\n            memoryAccessManager(_writeAddress, false) == bytes8(_value),\\n            \\\"Written value does not match\\\"\\n        );\\n    }\\n\\n    // Memory Read without endianess swap\\n    function pureMemoryRead(uint64 _readAddress) internal returns (uint64) {\\n        return uint64(memoryAccessManager(_readAddress, true));\\n    }\\n\\n   // Private functions\\n\\n    // takes care of read/write access\\n    function memoryAccessManager(uint64 _address, bool _accessIsRead) internal virtual returns (bytes8) {\\n        require(isRead[rwIndex] == _accessIsRead, \\\"Access was not the correct type\\\");\\n\\n        uint64 position = rwPositions[rwIndex];\\n        bytes8 value = rwValues[rwIndex];\\n        rwIndex++;\\n\\n        require((position & 7) == 0, \\\"Position is not aligned\\\");\\n        require(position == _address, \\\"Position and read address do not match\\\");\\n\\n        return value;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x172ace0eab16d875b5dc342bf9fd15aeca8a493a4e7b0ab6b1667ae22361e78f\",\"license\":\"Apache-2.0\"},\"contracts/RealTimeClock.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n/// @title RealTimeClock\\npragma solidity ^0.7.0;\\n\\n/// @title RealTimeClock\\n/// @author Felipe Argento\\n/// @notice Real Time clock simulator\\nlibrary RealTimeClock {\\n    uint64 constant RTC_FREQ_DIV = 100;\\n    \\n    /// @notice Converts from cycle count to time count\\n    /// @param cycle Cycle count\\n    /// @return Time count\\n    function rtcCycleToTime(uint64 cycle) public pure returns (uint64) {\\n        return cycle / RTC_FREQ_DIV;\\n    }\\n\\n    /// @notice Converts from time count to cycle count\\n    /// @param  time Time count\\n    /// @return Cycle count\\n    function rtcTimeToCycle(uint64 time) public pure returns (uint64) {\\n        return time * RTC_FREQ_DIV;\\n    }\\n}\\n\",\"keccak256\":\"0x07a038d80a3f50c9cb153f63ff8d251a5704a2cd1c74863c9f5aeeb0aee247fd\",\"license\":\"Apache-2.0\"},\"contracts/RiscVConstants.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title RiscVConstants\\n/// @author Felipe Argento\\n/// @notice Defines getters for important constants\\nlibrary RiscVConstants {\\n    //iflags shifts\\n    function getIflagsHShift()  public pure returns(uint64) {return 0;}\\n    function getIflagsYShift()  public pure returns(uint64) {return 1;}\\n    function getIflagsIShift()  public pure returns(uint64) {return 2;}\\n    function getIflagsPrvShift()  public pure returns(uint64) {return 3;}\\n\\n    //iflags masks\\n    function getIflagsHMask()  public pure returns(uint64) {return uint64(1) << getIflagsHShift();}\\n    function getIflagsYMask()  public pure returns(uint64) {return uint64(1) << getIflagsYShift();}\\n    function getIflagsIMask()  public pure returns(uint64) {return uint64(1) << getIflagsIShift();}\\n    function getIflagsPrvMask()  public pure returns(uint64) {return uint64(3) << getIflagsPrvShift();}\\n\\n    //general purpose\\n    function getXlen() public pure returns(uint64) {return 64;}\\n    function getMxl()  public pure returns(uint64) {return 2;}\\n\\n    //privilege levels\\n    function getPrvU() public pure returns(uint64) {return 0;}\\n    function getPrvS() public pure returns(uint64) {return 1;}\\n    function getPrvH() public pure returns(uint64) {return 2;}\\n    function getPrvM() public pure returns(uint64) {return 3;}\\n\\n    //mstatus shifts\\n    function getMstatusUieShift()  public pure returns(uint64) {return 0;}\\n    function getMstatusSieShift()  public pure returns(uint64) {return 1;}\\n    function getMstatusHieShift()  public pure returns(uint64) {return 2;}\\n    function getMstatusMieShift()  public pure returns(uint64) {return 3;}\\n    function getMstatusUpieShift() public pure returns(uint64) {return 4;}\\n    function getMstatusSpieShift() public pure returns(uint64) {return 5;}\\n    function getMstatusMpieShift() public pure returns(uint64) {return 7;}\\n    function getMstatusSppShift()  public pure returns(uint64) {return 8;}\\n    function getMstatusMppShift()  public pure returns(uint64) {return 11;}\\n    function getMstatusFsShift()   public pure returns(uint64) {return 13;}\\n\\n    function getMstatusXsShift()   public pure returns(uint64) {return 15;}\\n    function getMstatusMprvShift() public pure returns(uint64) {return 17;}\\n    function getMstatusSumShift()  public pure returns(uint64) {return 18;}\\n    function getMstatusMxrShift()  public pure returns(uint64) {return 19;}\\n    function getMstatusTvmShift()  public pure returns(uint64) {return 20;}\\n    function getMstatusTwShift()   public pure returns(uint64) {return 21;}\\n    function getMstatusTsrShift()  public pure returns(uint64) {return 22;}\\n\\n\\n    function getMstatusUxlShift()  public pure returns(uint64) {return 32;}\\n    function getMstatusSxlShift()  public pure returns(uint64) {return 34;}\\n\\n    function getMstatusSdShift()   public pure returns(uint64) {return getXlen() - 1;}\\n\\n    //mstatus masks\\n    function getMstatusUieMask()  public pure returns(uint64) {return (uint64(1) << getMstatusUieShift());}\\n    function getMstatusSieMask()  public pure returns(uint64) {return uint64(1) << getMstatusSieShift();}\\n    function getMstatusMieMask()  public pure returns(uint64) {return uint64(1) << getMstatusMieShift();}\\n    function getMstatusUpieMask() public pure returns(uint64) {return uint64(1) << getMstatusUpieShift();}\\n    function getMstatusSpieMask() public pure returns(uint64) {return uint64(1) << getMstatusSpieShift();}\\n    function getMstatusMpieMask() public pure returns(uint64) {return uint64(1) << getMstatusMpieShift();}\\n    function getMstatusSppMask()  public pure returns(uint64) {return uint64(1) << getMstatusSppShift();}\\n    function getMstatusMppMask()  public pure returns(uint64) {return uint64(3) << getMstatusMppShift();}\\n    function getMstatusFsMask()   public pure returns(uint64) {return uint64(3) << getMstatusFsShift();}\\n    function getMstatusXsMask()   public pure returns(uint64) {return uint64(3) << getMstatusXsShift();}\\n    function getMstatusMprvMask() public pure returns(uint64) {return uint64(1) << getMstatusMprvShift();}\\n    function getMstatusSumMask()  public pure returns(uint64) {return uint64(1) << getMstatusSumShift();}\\n    function getMstatusMxrMask()  public pure returns(uint64) {return uint64(1) << getMstatusMxrShift();}\\n    function getMstatusTvmMask()  public pure returns(uint64) {return uint64(1) << getMstatusTvmShift();}\\n    function getMstatusTwMask()   public pure returns(uint64) {return uint64(1) << getMstatusTwShift();}\\n    function getMstatusTsrMask()  public pure returns(uint64) {return uint64(1) << getMstatusTsrShift();}\\n\\n    function getMstatusUxlMask()  public pure returns(uint64) {return uint64(3) << getMstatusUxlShift();}\\n    function getMstatusSxlMask()  public pure returns(uint64) {return uint64(3) << getMstatusSxlShift();}\\n    function getMstatusSdMask()   public pure returns(uint64) {return uint64(1) << getMstatusSdShift();}\\n\\n    // mstatus read/writes\\n    function getMstatusWMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusMieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusMpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusMppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusMprvMask() |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusTvmMask()  |\\n            getMstatusTwMask()   |\\n            getMstatusTsrMask()\\n        );\\n    }\\n\\n    function getMstatusRMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusMieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusMpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusMppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusMprvMask() |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusTvmMask()  |\\n            getMstatusTwMask()   |\\n            getMstatusTsrMask()  |\\n            getMstatusUxlMask()  |\\n            getMstatusSxlMask()  |\\n            getMstatusSdMask()\\n        );\\n    }\\n\\n    // sstatus read/writes\\n    function getSstatusWMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()\\n        );\\n    }\\n\\n    function getSstatusRMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusUxlMask()  |\\n            getMstatusSdMask()\\n        );\\n    }\\n\\n    // mcause for exceptions\\n    function getMcauseInsnAddressMisaligned() public pure returns(uint64) {return 0x0;} ///< instruction address misaligned\\n    function getMcauseInsnAccessFault() public pure returns(uint64) {return 0x1;} ///< instruction access fault\\n    function getMcauseIllegalInsn() public pure returns(uint64) {return 0x2;} ///< illegal instruction\\n    function getMcauseBreakpoint() public pure returns(uint64) {return 0x3;} ///< breakpoint\\n    function getMcauseLoadAddressMisaligned() public pure returns(uint64) {return 0x4;} ///< load address misaligned\\n    function getMcauseLoadAccessFault() public pure returns(uint64) {return 0x5;} ///< load access fault\\n    function getMcauseStoreAmoAddressMisaligned() public pure returns(uint64) {return 0x6;} ///< store/amo address misaligned\\n    function getMcauseStoreAmoAccessFault() public pure returns(uint64) {return 0x7;} ///< store/amo access fault\\n    ///< environment call (+0: from u-mode, +1: from s-mode, +3: from m-mode)\\n    function getMcauseEcallBase() public pure returns(uint64) { return 0x8;}\\n    function getMcauseFetchPageFault() public pure returns(uint64) {return 0xc;} ///< instruction page fault\\n    function getMcauseLoadPageFault() public pure returns(uint64) {return 0xd;} ///< load page fault\\n    function getMcauseStoreAmoPageFault() public pure returns(uint64) {return 0xf;} ///< store/amo page fault\\n\\n    function getMcauseInterruptFlag() public pure returns(uint64) {return uint64(1) << (getXlen() - 1);} ///< interrupt flag\\n\\n    // mcounteren constants\\n    function getMcounterenCyShift() public pure returns(uint64) {return 0;}\\n    function getMcounterenTmShift() public pure returns(uint64) {return 1;}\\n    function getMcounterenIrShift() public pure returns(uint64) {return 2;}\\n\\n    function getMcounterenCyMask() public pure returns(uint64) {return uint64(1) << getMcounterenCyShift();}\\n    function getMcounterenTmMask() public pure returns(uint64) {return uint64(1) << getMcounterenTmShift();}\\n    function getMcounterenIrMask() public pure returns(uint64) {return uint64(1) << getMcounterenIrShift();}\\n\\n    function getMcounterenRwMask() public pure returns(uint64) {return getMcounterenCyMask() | getMcounterenTmMask() | getMcounterenIrMask();}\\n    function getScounterenRwMask() public pure returns(uint64) {return getMcounterenRwMask();}\\n\\n    //paging constants\\n    function getPgShift() public pure returns(uint64) {return 12;}\\n    function getPgMask()  public pure returns(uint64) {((uint64(1) << getPgShift()) - 1);}\\n\\n    function getPteVMask() public pure returns(uint64) {return (1 << 0);}\\n    function getPteUMask() public pure returns(uint64) {return (1 << 4);}\\n    function getPteAMask() public pure returns(uint64) {return (1 << 6);}\\n    function getPteDMask() public pure returns(uint64) {return (1 << 7);}\\n\\n    function getPteXwrReadShift() public pure returns(uint64) {return 0;}\\n    function getPteXwrWriteShift() public pure returns(uint64) {return 1;}\\n    function getPteXwrCodeShift() public pure returns(uint64) {return 2;}\\n\\n    // page masks\\n    function getPageNumberShift() public pure returns(uint64) {return 12;}\\n\\n    function getPageOffsetMask() public pure returns(uint64) {return ((uint64(1) << getPageNumberShift()) - 1);}\\n\\n    // mip shifts:\\n    function getMipUsipShift() public pure returns(uint64) {return 0;}\\n    function getMipSsipShift() public pure returns(uint64) {return 1;}\\n    function getMipMsipShift() public pure returns(uint64) {return 3;}\\n    function getMipUtipShift() public pure returns(uint64) {return 4;}\\n    function getMipStipShift() public pure returns(uint64) {return 5;}\\n    function getMipMtipShift() public pure returns(uint64) {return 7;}\\n    function getMipUeipShift() public pure returns(uint64) {return 8;}\\n    function getMipSeipShift() public pure returns(uint64) {return 9;}\\n    function getMipMeipShift() public pure returns(uint64) {return 11;}\\n\\n    function getMipUsipMask() public pure returns(uint64) {return uint64(1) << getMipUsipShift();}\\n    function getMipSsipMask() public pure returns(uint64) {return uint64(1) << getMipSsipShift();}\\n    function getMipMsipMask() public pure returns(uint64) {return uint64(1) << getMipMsipShift();}\\n    function getMipUtipMask() public pure returns(uint64) {return uint64(1) << getMipUtipShift();}\\n    function getMipStipMask() public pure returns(uint64) {return uint64(1) << getMipStipShift();}\\n    function getMipMtipMask() public pure returns(uint64) {return uint64(1) << getMipMtipShift();}\\n    function getMipUeipMask() public pure returns(uint64) {return uint64(1) << getMipUeipShift();}\\n    function getMipSeipMask() public pure returns(uint64) {return uint64(1) << getMipSeipShift();}\\n    function getMipMeipMask() public pure returns(uint64) {return uint64(1) << getMipMeipShift();}\\n}\\n\",\"keccak256\":\"0xfd9070a43036eb37831d90fd3770640225fe8fd31e0dbe93034b247933b9a9c1\",\"license\":\"Apache-2.0\"},\"contracts/RiscVDecoder.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n// @title RiscVDecoder\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/BitsManipulationLibrary.sol\\\";\\n\\n/// @title RiscVDecoder\\n/// @author Felipe Argento\\n/// @notice Contract responsible for decoding the riscv's instructions\\n//      It applies different bitwise operations and masks to reach\\n//      specific positions and use that positions to identify the\\n//      correct function to be executed\\nlibrary RiscVDecoder {\\n    /// @notice Get the instruction's RD\\n    /// @param insn Instruction\\n    function insnRd(uint32 insn) public pure returns(uint32) {\\n        return (insn >> 7) & 0x1F;\\n    }\\n\\n    /// @notice Get the instruction's RS1\\n    /// @param insn Instruction\\n    function insnRs1(uint32 insn) public pure returns(uint32) {\\n        return (insn >> 15) & 0x1F;\\n    }\\n\\n    /// @notice Get the instruction's RS2\\n    /// @param insn Instruction\\n    function insnRs2(uint32 insn) public pure returns(uint32) {\\n        return (insn >> 20) & 0x1F;\\n    }\\n\\n    /// @notice Get the I-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnIImm(uint32 insn) public pure returns(int32) {\\n        return int32(insn) >> 20;\\n    }\\n\\n    /// @notice Get the I-type instruction's unsigned immediate value\\n    /// @param insn Instruction\\n    function insnIUimm(uint32 insn) public pure returns(uint32) {\\n        return insn >> 20;\\n    }\\n\\n    /// @notice Get the U-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnUImm(uint32 insn) public pure returns(int32) {\\n        return int32(insn & 0xfffff000);\\n    }\\n\\n    /// @notice Get the B-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnBImm(uint32 insn) public pure returns(int32) {\\n        int32 imm = int32(\\n            ((insn >> (31 - 12)) & (1 << 12)) |\\n            ((insn >> (25 - 5)) & 0x7e0) |\\n            ((insn >> (8 - 1)) & 0x1e) |\\n            ((insn << (11 - 7)) & (1 << 11))\\n        );\\n        return BitsManipulationLibrary.int32SignExtension(imm, 13);\\n    }\\n\\n    /// @notice Get the J-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnJImm(uint32 insn) public pure returns(int32) {\\n        int32 imm = int32(\\n            ((insn >> (31 - 20)) & (1 << 20)) |\\n            ((insn >> (21 - 1)) & 0x7fe) |\\n            ((insn >> (20 - 11)) & (1 << 11)) |\\n            (insn & 0xff000)\\n        );\\n        return BitsManipulationLibrary.int32SignExtension(imm, 21);\\n    }\\n\\n    /// @notice Get the S-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnSImm(uint32 insn) public pure returns(int32) {\\n        int32 imm = int32(((insn & 0xfe000000) >> (25 - 5)) | ((insn >> 7) & 0x1F));\\n        return BitsManipulationLibrary.int32SignExtension(imm, 12);\\n    }\\n\\n    /// @notice Get the instruction's opcode field\\n    /// @param insn Instruction\\n    function insnOpcode(uint32 insn) public pure returns (uint32) {\\n        return insn & 0x7F;\\n    }\\n\\n    /// @notice Get the instruction's funct3 field\\n    /// @param insn Instruction\\n    function insnFunct3(uint32 insn) public pure returns (uint32) {\\n        return (insn >> 12) & 0x07;\\n    }\\n\\n    /// @notice Get the concatenation of instruction's funct3 and funct7 fields\\n    /// @param insn Instruction\\n    function insnFunct3Funct7(uint32 insn) public pure returns (uint32) {\\n        return ((insn >> 5) & 0x380) | (insn >> 25);\\n    }\\n\\n    /// @notice Get the concatenation of instruction's funct3 and funct5 fields\\n    /// @param insn Instruction\\n    function insnFunct3Funct5(uint32 insn) public pure returns (uint32) {\\n        return ((insn >> 7) & 0xE0) | (insn >> 27);\\n    }\\n\\n    /// @notice Get the instruction's funct7 field\\n    /// @param insn Instruction\\n    function insnFunct7(uint32 insn) public pure returns (uint32) {\\n        return (insn >> 25) & 0x7F;\\n    }\\n\\n    /// @notice Get the instruction's funct6 field\\n    /// @param insn Instruction\\n    function insnFunct6(uint32 insn) public pure returns (uint32) {\\n        return (insn >> 26) & 0x3F;\\n    }\\n}\\n\",\"keccak256\":\"0xd908b1ffb6386732728562ea6cc57d5ffe71dc2134e8b0f79857882c8a3eac3c\",\"license\":\"Apache-2.0\"},\"contracts/ShadowAddresses.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\n\\n/// @title ShadowAddresses\\n/// @author Felipe Argento\\n/// @notice Defines the processor state. Memory-mapped to the lowest 512 bytes in pm\\n/// @dev Defined on Cartesi techpaper version 1.02 - Section 3 - table 2 \\n/// Source: https://cartesi.io/cartesi_whitepaper.pdf \\nlibrary ShadowAddresses {\\n    uint64 constant PC         = 0x100;\\n    uint64 constant MVENDORID  = 0x108;\\n    uint64 constant MARCHID    = 0x110;\\n    uint64 constant MIMPID     = 0x118;\\n    uint64 constant MCYCLE     = 0x120;\\n    uint64 constant MINSTRET   = 0x128;\\n    uint64 constant MSTATUS    = 0x130;\\n    uint64 constant MTVEC      = 0x138;\\n    uint64 constant MSCRATCH   = 0x140;\\n    uint64 constant MEPC       = 0x148;\\n    uint64 constant MCAUSE     = 0x150;\\n    uint64 constant MTVAL      = 0x158;\\n    uint64 constant MISA       = 0x160;\\n    uint64 constant MIE        = 0x168;\\n    uint64 constant MIP        = 0x170;\\n    uint64 constant MEDELEG    = 0x178;\\n    uint64 constant MIDELEG    = 0x180;\\n    uint64 constant MCOUNTEREN = 0x188;\\n    uint64 constant STVEC      = 0x190;\\n    uint64 constant SSCRATCH   = 0x198;\\n    uint64 constant SEPC       = 0x1a0;\\n    uint64 constant SCAUSE     = 0x1a8;\\n    uint64 constant STVAL      = 0x1b0;\\n    uint64 constant SATP       = 0x1b8;\\n    uint64 constant SCOUNTEREN = 0x1c0;\\n    uint64 constant ILRSC      = 0x1c8;\\n    uint64 constant IFLAGS     = 0x1d0;\\n\\n    //getters - contracts cant access constants directly\\n    function getPc()         public pure returns(uint64) {return PC;}\\n    function getMvendorid()  public pure returns(uint64) {return MVENDORID;}\\n    function getMarchid()    public pure returns(uint64) {return MARCHID;}\\n    function getMimpid()     public pure returns(uint64) {return MIMPID;}\\n    function getMcycle()     public pure returns(uint64) {return MCYCLE;}\\n    function getMinstret()   public pure returns(uint64) {return MINSTRET;}\\n    function getMstatus()    public pure returns(uint64) {return MSTATUS;}\\n    function getMtvec()      public pure returns(uint64) {return MTVEC;}\\n    function getMscratch()   public pure returns(uint64) {return MSCRATCH;}\\n    function getMepc()       public pure returns(uint64) {return MEPC;}\\n    function getMcause()     public pure returns(uint64) {return MCAUSE;}\\n    function getMtval()      public pure returns(uint64) {return MTVAL;}\\n    function getMisa()       public pure returns(uint64) {return MISA;}\\n    function getMie()        public pure returns(uint64) {return MIE;}\\n    function getMip()        public pure returns(uint64) {return MIP;}\\n    function getMedeleg()    public pure returns(uint64) {return MEDELEG;}\\n    function getMideleg()    public pure returns(uint64) {return MIDELEG;}\\n    function getMcounteren() public pure returns(uint64) {return MCOUNTEREN;}\\n    function getStvec()      public pure returns(uint64) {return STVEC;}\\n    function getSscratch()   public pure returns(uint64) {return SSCRATCH;}\\n    function getSepc()       public pure returns(uint64) {return SEPC;}\\n    function getScause()     public pure returns(uint64) {return SCAUSE;}\\n    function getStval()      public pure returns(uint64) {return STVAL;}\\n    function getSatp()       public pure returns(uint64) {return SATP;}\\n    function getScounteren() public pure returns(uint64) {return SCOUNTEREN;}\\n    function getIlrsc()      public pure returns(uint64) {return ILRSC;}\\n    function getIflags()     public pure returns(uint64) {return IFLAGS;}\\n}\\n\",\"keccak256\":\"0xbfd187bab76a2802de777406cdddc9fe0cbf79ab8cb6f76075da7db664a9e9ae\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "readCsr(MemoryInteractor,uint32)": {
        "notice": "Reads the value of a CSR given its address"
      },
      "writeCsr(MemoryInteractor,uint32,uint64)": {
        "notice": "Writes a value to a CSR given its address"
      }
    },
    "notice": "Implements main CSR read and write logic",
    "version": 1
  }
}