{
  "contractName": "TestMemoryInteractor",
  "sourceName": "contracts/TestMemoryInteractor.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_exitCode",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_halt",
          "type": "bool"
        }
      ],
      "name": "HTIFExit",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_writeAddress",
          "type": "uint64"
        },
        {
          "internalType": "bytes8",
          "name": "_value",
          "type": "bytes8"
        }
      ],
      "name": "externalPureMemoryWrite",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRWIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "htifExit",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64[]",
          "name": "_rwPositions",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes8[]",
          "name": "_rwValues",
          "type": "bytes8[]"
        },
        {
          "internalType": "bool[]",
          "name": "_isRead",
          "type": "bool[]"
        }
      ],
      "name": "initializeMemory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_readAddress",
          "type": "uint64"
        }
      ],
      "name": "memoryRead",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_writeAddress",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_value",
          "type": "uint64"
        }
      ],
      "name": "memoryWrite",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readClintMtimecmp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifFromhost",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifIYield",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifTohost",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflags",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsH",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsPrv",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIlrsc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMarchid",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMcause",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMcounteren",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMcycle",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMedeleg",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "paddr",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "wordSize",
          "type": "uint64"
        }
      ],
      "name": "readMemory",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMepc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMideleg",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMie",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMimpid",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMinstret",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMip",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMisa",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMscratch",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMstatus",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMtval",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMtvec",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMvendorid",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readPc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readSatp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readScause",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readScounteren",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readSepc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readSscratch",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readStval",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readStvec",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "registerIndex",
          "type": "uint64"
        }
      ],
      "name": "readX",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "mask",
          "type": "uint64"
        }
      ],
      "name": "resetMip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "halt",
          "type": "bool"
        }
      ],
      "name": "setIflagsH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "idle",
          "type": "bool"
        }
      ],
      "name": "setIflagsI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isYield",
          "type": "bool"
        }
      ],
      "name": "setIflagsY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "mask",
          "type": "uint64"
        }
      ],
      "name": "setMip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newPriv",
          "type": "uint64"
        }
      ],
      "name": "setPriv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeClintMtimecmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeHtifFromhost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeHtifTohost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newPriv",
          "type": "uint64"
        }
      ],
      "name": "writeIflagsPrv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeIlrsc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMcause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMcounteren",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMcycle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMedeleg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "paddr",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "wordSize",
          "type": "uint64"
        }
      ],
      "name": "writeMemory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMepc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMideleg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMie",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMinstret",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMscratch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMstatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMtval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMtvec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writePc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeSatp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeScause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeScounteren",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeSepc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeSscratch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeStval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeStvec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "registerindex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50612bdc806100206000396000f3fe608060405234801561001057600080fd5b50600436106104545760003560e01c8063834aa4f611610241578063becdc10d1161013b578063dd5c4a14116100c3578063f7ac913d11610087578063f7ac913d14610c91578063f991158714610c99578063fa644af514610cbf578063fbdb975d14610ce5578063fd295abe14610d0b57610454565b8063dd5c4a1414610bf1578063f21d94f814610c17578063f2cf6ceb14610c3d578063f55c4d3814610c45578063f604edb814610c6b57610454565b8063cecdae531161010a578063cecdae5314610b8d578063cf18743014610bb3578063d2be7b6d14610bbb578063d40d17c514610be1578063daded5c214610be957610454565b8063becdc10d14610b4f578063c133b7ff14610b57578063cbc446b114610b5f578063cc92cbf714610b8557610454565b80639c872d02116101c9578063aaed4f071161018d578063aaed4f0714610acd578063ab9779b714610af3578063af63b2a814610b19578063b2325aef14610b21578063b5b98ed414610b4757610454565b80639c872d02146108cd578063a317ce9d146108f3578063a47594df146108fb578063a740dbc114610aa6578063a7458b9514610aae57610454565b80638e32f35e116102105780638e32f35e146108615780639485871b1461088f578063968644f0146108975780639b7021ce1461089f5780639c7b005d146108a757610454565b8063834aa4f614610805578063854dba401461080d57806386676d4314610815578063893659091461083b57610454565b806354749af3116103525780635f824bf9116102da5780636cd24daf1161029e5780636cd24daf1461077b5780636dc95c2e146107835780636f6c0e7d146107b157806378c49574146107b957806378ddee75146107df57610454565b80635f824bf9146107355780636232e59c1461073d5780636475e34214610763578063650ca32b1461076b5780636a72b27d1461077357610454565b80635790783711610321578063579078371461069c5780635af47ca7146106c25780635d914c0d146106e85780635dadd78a146107075780635e5ca6521461070f57610454565b806354749af314610612578063568b2702146106385780635729e4a614610640578063575832df1461067657610454565b806328520b30116103e05780633a48bb56116103a45780633a48bb561461058f57806345057ed7146105ae5780634ae9388b146105d457806350cec2d5146105dc57806351bb36151461060a57610454565b806328520b301461052b57806328751b36146105335780632ca2bd16146105595780632e963a801461057f57806334970f181461058757610454565b806311cf3a221161042757806311cf3a22146104e557806315dd9c06146104ed57806318e504db146105135780631bf2f73d1461051b5780631e5e61901461052357610454565b8063080aa5d1146104595780630df3e295146104735780630f84c0461461049b57806310d74c7d146104bf575b600080fd5b610461610d43565b60408051918252519081900360200190f35b6104996004803603602081101561048957600080fd5b50356001600160401b0316610d49565b005b6104a3610dc5565b604080516001600160401b039092168252519081900360200190f35b610499600480360360208110156104d557600080fd5b50356001600160401b0316610e44565b6104a3610e8b565b6104996004803603602081101561050357600080fd5b50356001600160401b0316610ed4565b6104a3610ef0565b6104a3610f39565b6104a3610f82565b6104a3610fcb565b6104996004803603602081101561054957600080fd5b50356001600160401b0316611014565b6104996004803603602081101561056f57600080fd5b50356001600160401b031661105b565b6104a36110a2565b6104a36110eb565b610499600480360360208110156105a557600080fd5b50351515611134565b610499600480360360208110156105c457600080fd5b50356001600160401b0316611276565b6104a3611297565b6104a3600480360360408110156105f257600080fd5b506001600160401b03813581169160200135166112e0565b6104a3611456565b6104996004803603602081101561062857600080fd5b50356001600160401b031661149f565b6104a36114b3565b6104996004803603604081101561065657600080fd5b5080356001600160401b031690602001356001600160c01b0319166114fc565b6104996004803603602081101561068c57600080fd5b50356001600160401b0316611531565b610499600480360360208110156106b257600080fd5b50356001600160401b0316611578565b610499600480360360208110156106d857600080fd5b50356001600160401b03166115bf565b610499600480360360208110156106fe57600080fd5b50351515611606565b6104a36116a0565b6104996004803603602081101561072557600080fd5b50356001600160401b03166116e9565b6104a3611730565b6104a36004803603602081101561075357600080fd5b50356001600160401b0316611779565b6104a361178d565b6104a36117d6565b6104a361181f565b6104a3611868565b6104996004803603604081101561079957600080fd5b506001600160401b03813581169160200135166118b1565b6104a36118be565b610499600480360360208110156107cf57600080fd5b50356001600160401b0316611907565b610499600480360360208110156107f557600080fd5b50356001600160401b031661194e565b6104a3611995565b6104a36119de565b6104996004803603602081101561082b57600080fd5b50356001600160401b0316611a27565b6104996004803603602081101561085157600080fd5b50356001600160401b0316611a6e565b6104996004803603604081101561087757600080fd5b506001600160401b0381358116916020013516611ab5565b6104a3611b70565b6104a3611bb9565b6104a3611d0f565b610499600480360360208110156108bd57600080fd5b50356001600160401b0316611d58565b610499600480360360208110156108e357600080fd5b50356001600160401b0316611d9f565b6104a3611de6565b6104996004803603606081101561091157600080fd5b81019060208101813564010000000081111561092c57600080fd5b82018360208201111561093e57600080fd5b8035906020019184602083028401116401000000008311171561096057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156109b057600080fd5b8201836020820111156109c257600080fd5b803590602001918460208302840111640100000000831117156109e457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610a3457600080fd5b820183602082011115610a4657600080fd5b80359060200191846020830284011164010000000083111715610a6857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611e2f945050505050565b6104a3611e34565b61049960048036036020811015610ac457600080fd5b50351515611e7d565b61049960048036036020811015610ae357600080fd5b50356001600160401b0316611f17565b61049960048036036020811015610b0957600080fd5b50356001600160401b0316611f5e565b6104a3611fa5565b61049960048036036020811015610b3757600080fd5b50356001600160401b0316611fee565b6104a3612035565b6104a361207e565b6104a36120c7565b61049960048036036020811015610b7557600080fd5b50356001600160401b0316612110565b6104a3612157565b61049960048036036020811015610ba357600080fd5b50356001600160401b03166121a0565b6104a36122ff565b61049960048036036020811015610bd157600080fd5b50356001600160401b0316612422565b6104a3612469565b6104a3612532565b61049960048036036020811015610c0757600080fd5b50356001600160401b031661257b565b61049960048036036020811015610c2d57600080fd5b50356001600160401b03166125c2565b6104a3612609565b61049960048036036020811015610c5b57600080fd5b50356001600160401b0316612652565b61049960048036036020811015610c8157600080fd5b50356001600160401b0316612699565b6104a36126e0565b61049960048036036020811015610caf57600080fd5b50356001600160401b03166127a9565b6104a360048036036020811015610cd557600080fd5b50356001600160401b03166127f0565b61049960048036036020811015610cfb57600080fd5b50356001600160401b0316612889565b61049960048036036060811015610d2157600080fd5b506001600160401b0381358116916020810135821691604090910135166128d0565b60005490565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b505af4158015610da4573d6000803e3d6000fd5b505050506040513d6020811015610dba57600080fd5b505182611ab5565b50565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505af4158015610e22573d6000803e3d6000fd5b505050506040513d6020811015610e3857600080fd5b50516127f0565b905090565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610ede611de6565b8219169050610eec81611f17565b5050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b600061113e6120c7565b905081156111bc5773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b505af415801561119e573d6000803e3d6000fd5b505050506040513d60208110156111b457600080fd5b50511761122f565b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b15801561120057600080fd5b505af4158015611214573d6000803e3d6000fd5b505050506040513d602081101561122a57600080fd5b505119165b610eec73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000611280611de6565b8217905061128d81611f17565b610eec6000611606565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b60006007198316808403826112f483612b18565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561138057600080fd5b505af4158015611394573d6000803e3d6000fd5b505050506040513d60208110156113aa57600080fd5b50516040805163bf1924c560e01b81526001600160401b03858416811660048301529151929350600886029091169173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b15801561141457600080fd5b505af4158015611428573d6000803e3d6000fd5b505050506040513d602081101561143e57600080fd5b50516001600160401b0316901c979650505050505050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6114a8816121a0565b610dc26000196125c2565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6001600160401b03919091166000908152600460205260409020805467ffffffffffffffff191660c09290921c919091179055565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b60006116106120c7565b9050811561165c5773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63693549ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63693549ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561120057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6392f5aa226040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000611787826008026127f0565b92915050565b6000610e3f73__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610eec8260080282611ab5565b6000610e3f73__$96c0387300a4d16af366df01fc33f52e50$__636299ea3f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__634a4c35106040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63c585eede6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5836040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b158015611b0f57600080fd5b505af4158015611b23573d6000803e3d6000fd5b505050506040513d6020811015611b3957600080fd5b50516001600160401b039384166000908152600460205260409020805467ffffffffffffffff191694909116939093179092555050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63656b151f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bff57600080fd5b505af4158015611c13573d6000803e3d6000fd5b505050506040513d6020811015611c2957600080fd5b50516040805163fd198e5560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163fd198e55916004808301926020929190829003018186803b158015611c8257600080fd5b505af4158015611c96573d6000803e3d6000fd5b505050506040513d6020811015611cac57600080fd5b505160408051632ffdabc560e01b81529051611cfe9173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc591600480820192602092909190829003018186803b158015610e0e57600080fd5b166001600160401b0316901c905090565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000611e876120c7565b90508115611ed35773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b15801561120057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63929127db6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b60006121aa6120c7565b905073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b1580156121f057600080fd5b505af4158015612204573d6000803e3d6000fd5b505050506040513d602081101561221a57600080fd5b50516040805163317d2bb560e01b815290516001600160401b0385811693169290921b9173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b15801561227957600080fd5b505af415801561228d573d6000803e3d6000fd5b505050506040513d60208110156122a357600080fd5b505160408051632ffdabc560e01b815290519119939093169190911791610eec9173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc5916004808301926020929190829003018186803b158015610d9057600080fd5b63400080006000908152600460208181527f1f90ff9d73e8a6c31aa68ce092ee24c1fc49bc29c8525b76e90c710641779cea546040805163bf1924c560e01b81526001600160401b0390921693820184905251849273__$184ef4a65c614d890e6225597d290b0ed9$__9263bf1924c59260248083019392829003018186803b15801561238b57600080fd5b505af415801561239f573d6000803e3d6000fd5b505050506040513d60208110156123b557600080fd5b505160005460408051918252657fffffffffff600184811c919091166020840181905281851691821484840181905292519496509194509290917f23a6dbf84a188125a7e041cf278e49ebf25abc3565d481f0728681181a01b1d4919081900360600190a1935050505090565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e89d408d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124af57600080fd5b505af41580156124c3573d6000803e3d6000fd5b505050506040513d60208110156124d957600080fd5b50516040805163e697ace960e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163e697ace9916004808301926020929190829003018186803b158015611c8257600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b15801561272657600080fd5b505af415801561273a573d6000803e3d6000fd5b505050506040513d602081101561275057600080fd5b50516040805163317d2bb560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b158015611c8257600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5612817846001612b2e565b60c01c6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561285757600080fd5b505af415801561286b573d6000803e3d6000fd5b505050506040513d602081101561288157600080fd5b505192915050565b610dc273__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600060086001600160401b038316049050806001600160401b031660081415612902576128fd8484611ab5565b612b12565b6007198416808503600061291583612b18565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b1580156129a157600080fd5b505af41580156129b5573d6000803e3d6000fd5b505050506040513d60208110156129cb57600080fd5b50516040805163bf1924c560e01b81526001600160401b0389811660020a600019018b16166004820152905191925060009173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612a3857600080fd5b505af4158015612a4c573d6000803e3d6000fd5b505050506040513d6020811015612a6257600080fd5b50516040805163bf1924c560e01b81526001600160401b038084166008890282161c861988161790811660048301529151929350909173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612ad357600080fd5b505af4158015612ae7573d6000803e3d6000fd5b505050506040513d6020811015612afd57600080fd5b50519050612b0b8682611ab5565b5050505050505b50505050565b6000612b25826001612b2e565b60c01c92915050565b60006007831615612b86576040805162461bcd60e51b815260206004820152601760248201527f506f736974696f6e206973206e6f7420616c69676e6564000000000000000000604482015290519081900360640190fd5b50506001600160401b031660009081526004602052604090205460c01b9056fea2646970667358221220fc4b70487edc0232bcbb911620d64372969744e69b90a5a67fe850c904644a4b64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106104545760003560e01c8063834aa4f611610241578063becdc10d1161013b578063dd5c4a14116100c3578063f7ac913d11610087578063f7ac913d14610c91578063f991158714610c99578063fa644af514610cbf578063fbdb975d14610ce5578063fd295abe14610d0b57610454565b8063dd5c4a1414610bf1578063f21d94f814610c17578063f2cf6ceb14610c3d578063f55c4d3814610c45578063f604edb814610c6b57610454565b8063cecdae531161010a578063cecdae5314610b8d578063cf18743014610bb3578063d2be7b6d14610bbb578063d40d17c514610be1578063daded5c214610be957610454565b8063becdc10d14610b4f578063c133b7ff14610b57578063cbc446b114610b5f578063cc92cbf714610b8557610454565b80639c872d02116101c9578063aaed4f071161018d578063aaed4f0714610acd578063ab9779b714610af3578063af63b2a814610b19578063b2325aef14610b21578063b5b98ed414610b4757610454565b80639c872d02146108cd578063a317ce9d146108f3578063a47594df146108fb578063a740dbc114610aa6578063a7458b9514610aae57610454565b80638e32f35e116102105780638e32f35e146108615780639485871b1461088f578063968644f0146108975780639b7021ce1461089f5780639c7b005d146108a757610454565b8063834aa4f614610805578063854dba401461080d57806386676d4314610815578063893659091461083b57610454565b806354749af3116103525780635f824bf9116102da5780636cd24daf1161029e5780636cd24daf1461077b5780636dc95c2e146107835780636f6c0e7d146107b157806378c49574146107b957806378ddee75146107df57610454565b80635f824bf9146107355780636232e59c1461073d5780636475e34214610763578063650ca32b1461076b5780636a72b27d1461077357610454565b80635790783711610321578063579078371461069c5780635af47ca7146106c25780635d914c0d146106e85780635dadd78a146107075780635e5ca6521461070f57610454565b806354749af314610612578063568b2702146106385780635729e4a614610640578063575832df1461067657610454565b806328520b30116103e05780633a48bb56116103a45780633a48bb561461058f57806345057ed7146105ae5780634ae9388b146105d457806350cec2d5146105dc57806351bb36151461060a57610454565b806328520b301461052b57806328751b36146105335780632ca2bd16146105595780632e963a801461057f57806334970f181461058757610454565b806311cf3a221161042757806311cf3a22146104e557806315dd9c06146104ed57806318e504db146105135780631bf2f73d1461051b5780631e5e61901461052357610454565b8063080aa5d1146104595780630df3e295146104735780630f84c0461461049b57806310d74c7d146104bf575b600080fd5b610461610d43565b60408051918252519081900360200190f35b6104996004803603602081101561048957600080fd5b50356001600160401b0316610d49565b005b6104a3610dc5565b604080516001600160401b039092168252519081900360200190f35b610499600480360360208110156104d557600080fd5b50356001600160401b0316610e44565b6104a3610e8b565b6104996004803603602081101561050357600080fd5b50356001600160401b0316610ed4565b6104a3610ef0565b6104a3610f39565b6104a3610f82565b6104a3610fcb565b6104996004803603602081101561054957600080fd5b50356001600160401b0316611014565b6104996004803603602081101561056f57600080fd5b50356001600160401b031661105b565b6104a36110a2565b6104a36110eb565b610499600480360360208110156105a557600080fd5b50351515611134565b610499600480360360208110156105c457600080fd5b50356001600160401b0316611276565b6104a3611297565b6104a3600480360360408110156105f257600080fd5b506001600160401b03813581169160200135166112e0565b6104a3611456565b6104996004803603602081101561062857600080fd5b50356001600160401b031661149f565b6104a36114b3565b6104996004803603604081101561065657600080fd5b5080356001600160401b031690602001356001600160c01b0319166114fc565b6104996004803603602081101561068c57600080fd5b50356001600160401b0316611531565b610499600480360360208110156106b257600080fd5b50356001600160401b0316611578565b610499600480360360208110156106d857600080fd5b50356001600160401b03166115bf565b610499600480360360208110156106fe57600080fd5b50351515611606565b6104a36116a0565b6104996004803603602081101561072557600080fd5b50356001600160401b03166116e9565b6104a3611730565b6104a36004803603602081101561075357600080fd5b50356001600160401b0316611779565b6104a361178d565b6104a36117d6565b6104a361181f565b6104a3611868565b6104996004803603604081101561079957600080fd5b506001600160401b03813581169160200135166118b1565b6104a36118be565b610499600480360360208110156107cf57600080fd5b50356001600160401b0316611907565b610499600480360360208110156107f557600080fd5b50356001600160401b031661194e565b6104a3611995565b6104a36119de565b6104996004803603602081101561082b57600080fd5b50356001600160401b0316611a27565b6104996004803603602081101561085157600080fd5b50356001600160401b0316611a6e565b6104996004803603604081101561087757600080fd5b506001600160401b0381358116916020013516611ab5565b6104a3611b70565b6104a3611bb9565b6104a3611d0f565b610499600480360360208110156108bd57600080fd5b50356001600160401b0316611d58565b610499600480360360208110156108e357600080fd5b50356001600160401b0316611d9f565b6104a3611de6565b6104996004803603606081101561091157600080fd5b81019060208101813564010000000081111561092c57600080fd5b82018360208201111561093e57600080fd5b8035906020019184602083028401116401000000008311171561096057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156109b057600080fd5b8201836020820111156109c257600080fd5b803590602001918460208302840111640100000000831117156109e457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610a3457600080fd5b820183602082011115610a4657600080fd5b80359060200191846020830284011164010000000083111715610a6857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611e2f945050505050565b6104a3611e34565b61049960048036036020811015610ac457600080fd5b50351515611e7d565b61049960048036036020811015610ae357600080fd5b50356001600160401b0316611f17565b61049960048036036020811015610b0957600080fd5b50356001600160401b0316611f5e565b6104a3611fa5565b61049960048036036020811015610b3757600080fd5b50356001600160401b0316611fee565b6104a3612035565b6104a361207e565b6104a36120c7565b61049960048036036020811015610b7557600080fd5b50356001600160401b0316612110565b6104a3612157565b61049960048036036020811015610ba357600080fd5b50356001600160401b03166121a0565b6104a36122ff565b61049960048036036020811015610bd157600080fd5b50356001600160401b0316612422565b6104a3612469565b6104a3612532565b61049960048036036020811015610c0757600080fd5b50356001600160401b031661257b565b61049960048036036020811015610c2d57600080fd5b50356001600160401b03166125c2565b6104a3612609565b61049960048036036020811015610c5b57600080fd5b50356001600160401b0316612652565b61049960048036036020811015610c8157600080fd5b50356001600160401b0316612699565b6104a36126e0565b61049960048036036020811015610caf57600080fd5b50356001600160401b03166127a9565b6104a360048036036020811015610cd557600080fd5b50356001600160401b03166127f0565b61049960048036036020811015610cfb57600080fd5b50356001600160401b0316612889565b61049960048036036060811015610d2157600080fd5b506001600160401b0381358116916020810135821691604090910135166128d0565b60005490565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b505af4158015610da4573d6000803e3d6000fd5b505050506040513d6020811015610dba57600080fd5b505182611ab5565b50565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505af4158015610e22573d6000803e3d6000fd5b505050506040513d6020811015610e3857600080fd5b50516127f0565b905090565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610ede611de6565b8219169050610eec81611f17565b5050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b600061113e6120c7565b905081156111bc5773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b505af415801561119e573d6000803e3d6000fd5b505050506040513d60208110156111b457600080fd5b50511761122f565b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b15801561120057600080fd5b505af4158015611214573d6000803e3d6000fd5b505050506040513d602081101561122a57600080fd5b505119165b610eec73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000611280611de6565b8217905061128d81611f17565b610eec6000611606565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b60006007198316808403826112f483612b18565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561138057600080fd5b505af4158015611394573d6000803e3d6000fd5b505050506040513d60208110156113aa57600080fd5b50516040805163bf1924c560e01b81526001600160401b03858416811660048301529151929350600886029091169173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b15801561141457600080fd5b505af4158015611428573d6000803e3d6000fd5b505050506040513d602081101561143e57600080fd5b50516001600160401b0316901c979650505050505050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6114a8816121a0565b610dc26000196125c2565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6001600160401b03919091166000908152600460205260409020805467ffffffffffffffff191660c09290921c919091179055565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b60006116106120c7565b9050811561165c5773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63693549ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63693549ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561120057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6392f5aa226040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000611787826008026127f0565b92915050565b6000610e3f73__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610eec8260080282611ab5565b6000610e3f73__$96c0387300a4d16af366df01fc33f52e50$__636299ea3f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__634a4c35106040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63c585eede6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5836040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b158015611b0f57600080fd5b505af4158015611b23573d6000803e3d6000fd5b505050506040513d6020811015611b3957600080fd5b50516001600160401b039384166000908152600460205260409020805467ffffffffffffffff191694909116939093179092555050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63656b151f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bff57600080fd5b505af4158015611c13573d6000803e3d6000fd5b505050506040513d6020811015611c2957600080fd5b50516040805163fd198e5560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163fd198e55916004808301926020929190829003018186803b158015611c8257600080fd5b505af4158015611c96573d6000803e3d6000fd5b505050506040513d6020811015611cac57600080fd5b505160408051632ffdabc560e01b81529051611cfe9173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc591600480820192602092909190829003018186803b158015610e0e57600080fd5b166001600160401b0316901c905090565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505050565b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000611e876120c7565b90508115611ed35773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b15801561120057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63929127db6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b60006121aa6120c7565b905073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b1580156121f057600080fd5b505af4158015612204573d6000803e3d6000fd5b505050506040513d602081101561221a57600080fd5b50516040805163317d2bb560e01b815290516001600160401b0385811693169290921b9173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b15801561227957600080fd5b505af415801561228d573d6000803e3d6000fd5b505050506040513d60208110156122a357600080fd5b505160408051632ffdabc560e01b815290519119939093169190911791610eec9173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc5916004808301926020929190829003018186803b158015610d9057600080fd5b63400080006000908152600460208181527f1f90ff9d73e8a6c31aa68ce092ee24c1fc49bc29c8525b76e90c710641779cea546040805163bf1924c560e01b81526001600160401b0390921693820184905251849273__$184ef4a65c614d890e6225597d290b0ed9$__9263bf1924c59260248083019392829003018186803b15801561238b57600080fd5b505af415801561239f573d6000803e3d6000fd5b505050506040513d60208110156123b557600080fd5b505160005460408051918252657fffffffffff600184811c919091166020840181905281851691821484840181905292519496509194509290917f23a6dbf84a188125a7e041cf278e49ebf25abc3565d481f0728681181a01b1d4919081900360600190a1935050505090565b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e89d408d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124af57600080fd5b505af41580156124c3573d6000803e3d6000fd5b505050506040513d60208110156124d957600080fd5b50516040805163e697ace960e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163e697ace9916004808301926020929190829003018186803b158015611c8257600080fd5b6000610e3f73__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b6000610e3f73__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b15801561272657600080fd5b505af415801561273a573d6000803e3d6000fd5b505050506040513d602081101561275057600080fd5b50516040805163317d2bb560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b158015611c8257600080fd5b610dc273__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5612817846001612b2e565b60c01c6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561285757600080fd5b505af415801561286b573d6000803e3d6000fd5b505050506040513d602081101561288157600080fd5b505192915050565b610dc273__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9057600080fd5b600060086001600160401b038316049050806001600160401b031660081415612902576128fd8484611ab5565b612b12565b6007198416808503600061291583612b18565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b1580156129a157600080fd5b505af41580156129b5573d6000803e3d6000fd5b505050506040513d60208110156129cb57600080fd5b50516040805163bf1924c560e01b81526001600160401b0389811660020a600019018b16166004820152905191925060009173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612a3857600080fd5b505af4158015612a4c573d6000803e3d6000fd5b505050506040513d6020811015612a6257600080fd5b50516040805163bf1924c560e01b81526001600160401b038084166008890282161c861988161790811660048301529151929350909173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612ad357600080fd5b505af4158015612ae7573d6000803e3d6000fd5b505050506040513d6020811015612afd57600080fd5b50519050612b0b8682611ab5565b5050505050505b50505050565b6000612b25826001612b2e565b60c01c92915050565b60006007831615612b86576040805162461bcd60e51b815260206004820152601760248201527f506f736974696f6e206973206e6f7420616c69676e6564000000000000000000604482015290519081900360640190fd5b50506001600160401b031660009081526004602052604090205460c01b9056fea2646970667358221220fc4b70487edc0232bcbb911620d64372969744e69b90a5a67fe850c904644a4b64736f6c63430007040033",
  "linkReferences": {
    "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
      "BitsManipulationLibrary": [
        {
          "length": 20,
          "start": 4890
        },
        {
          "length": 20,
          "start": 5115
        },
        {
          "length": 20,
          "start": 6873
        },
        {
          "length": 20,
          "start": 9078
        },
        {
          "length": 20,
          "start": 10260
        },
        {
          "length": 20,
          "start": 10555
        },
        {
          "length": 20,
          "start": 10783
        },
        {
          "length": 20,
          "start": 10938
        }
      ]
    },
    "contracts/CLINT.sol": {
      "CLINT": [
        {
          "length": 20,
          "start": 6068
        },
        {
          "length": 20,
          "start": 10414
        }
      ]
    },
    "contracts/HTIF.sol": {
      "HTIF": [
        {
          "length": 20,
          "start": 4370
        },
        {
          "length": 20,
          "start": 6373
        },
        {
          "length": 20,
          "start": 8211
        },
        {
          "length": 20,
          "start": 9632
        },
        {
          "length": 20,
          "start": 9776
        }
      ]
    },
    "contracts/RiscVConstants.sol": {
      "RiscVConstants": [
        {
          "length": 20,
          "start": 4456
        },
        {
          "length": 20,
          "start": 4574
        },
        {
          "length": 20,
          "start": 5690
        },
        {
          "length": 20,
          "start": 5758
        },
        {
          "length": 20,
          "start": 7133
        },
        {
          "length": 20,
          "start": 7273
        },
        {
          "length": 20,
          "start": 7857
        },
        {
          "length": 20,
          "start": 7925
        },
        {
          "length": 20,
          "start": 8654
        },
        {
          "length": 20,
          "start": 8800
        },
        {
          "length": 20,
          "start": 9357
        },
        {
          "length": 20,
          "start": 9497
        },
        {
          "length": 20,
          "start": 9988
        },
        {
          "length": 20,
          "start": 10128
        }
      ]
    },
    "contracts/ShadowAddresses.sol": {
      "ShadowAddresses": [
        {
          "length": 20,
          "start": 3438
        },
        {
          "length": 20,
          "start": 3564
        },
        {
          "length": 20,
          "start": 3689
        },
        {
          "length": 20,
          "start": 3762
        },
        {
          "length": 20,
          "start": 3863
        },
        {
          "length": 20,
          "start": 3936
        },
        {
          "length": 20,
          "start": 4009
        },
        {
          "length": 20,
          "start": 4082
        },
        {
          "length": 20,
          "start": 4153
        },
        {
          "length": 20,
          "start": 4224
        },
        {
          "length": 20,
          "start": 4297
        },
        {
          "length": 20,
          "start": 4692
        },
        {
          "length": 20,
          "start": 4798
        },
        {
          "length": 20,
          "start": 5245
        },
        {
          "length": 20,
          "start": 5338
        },
        {
          "length": 20,
          "start": 5462
        },
        {
          "length": 20,
          "start": 5533
        },
        {
          "length": 20,
          "start": 5604
        },
        {
          "length": 20,
          "start": 5831
        },
        {
          "length": 20,
          "start": 5902
        },
        {
          "length": 20,
          "start": 5975
        },
        {
          "length": 20,
          "start": 6141
        },
        {
          "length": 20,
          "start": 6214
        },
        {
          "length": 20,
          "start": 6287
        },
        {
          "length": 20,
          "start": 6444
        },
        {
          "length": 20,
          "start": 6515
        },
        {
          "length": 20,
          "start": 6588
        },
        {
          "length": 20,
          "start": 6661
        },
        {
          "length": 20,
          "start": 6732
        },
        {
          "length": 20,
          "start": 6803
        },
        {
          "length": 20,
          "start": 7063
        },
        {
          "length": 20,
          "start": 7396
        },
        {
          "length": 20,
          "start": 7478
        },
        {
          "length": 20,
          "start": 7549
        },
        {
          "length": 20,
          "start": 7620
        },
        {
          "length": 20,
          "start": 7693
        },
        {
          "length": 20,
          "start": 7771
        },
        {
          "length": 20,
          "start": 7996
        },
        {
          "length": 20,
          "start": 8067
        },
        {
          "length": 20,
          "start": 8140
        },
        {
          "length": 20,
          "start": 8284
        },
        {
          "length": 20,
          "start": 8357
        },
        {
          "length": 20,
          "start": 8430
        },
        {
          "length": 20,
          "start": 8501
        },
        {
          "length": 20,
          "start": 8574
        },
        {
          "length": 20,
          "start": 8934
        },
        {
          "length": 20,
          "start": 9287
        },
        {
          "length": 20,
          "start": 9561
        },
        {
          "length": 20,
          "start": 9703
        },
        {
          "length": 20,
          "start": 9847
        },
        {
          "length": 20,
          "start": 9918
        },
        {
          "length": 20,
          "start": 10190
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
      "BitsManipulationLibrary": [
        {
          "length": 20,
          "start": 4858
        },
        {
          "length": 20,
          "start": 5083
        },
        {
          "length": 20,
          "start": 6841
        },
        {
          "length": 20,
          "start": 9046
        },
        {
          "length": 20,
          "start": 10228
        },
        {
          "length": 20,
          "start": 10523
        },
        {
          "length": 20,
          "start": 10751
        },
        {
          "length": 20,
          "start": 10906
        }
      ]
    },
    "contracts/CLINT.sol": {
      "CLINT": [
        {
          "length": 20,
          "start": 6036
        },
        {
          "length": 20,
          "start": 10382
        }
      ]
    },
    "contracts/HTIF.sol": {
      "HTIF": [
        {
          "length": 20,
          "start": 4338
        },
        {
          "length": 20,
          "start": 6341
        },
        {
          "length": 20,
          "start": 8179
        },
        {
          "length": 20,
          "start": 9600
        },
        {
          "length": 20,
          "start": 9744
        }
      ]
    },
    "contracts/RiscVConstants.sol": {
      "RiscVConstants": [
        {
          "length": 20,
          "start": 4424
        },
        {
          "length": 20,
          "start": 4542
        },
        {
          "length": 20,
          "start": 5658
        },
        {
          "length": 20,
          "start": 5726
        },
        {
          "length": 20,
          "start": 7101
        },
        {
          "length": 20,
          "start": 7241
        },
        {
          "length": 20,
          "start": 7825
        },
        {
          "length": 20,
          "start": 7893
        },
        {
          "length": 20,
          "start": 8622
        },
        {
          "length": 20,
          "start": 8768
        },
        {
          "length": 20,
          "start": 9325
        },
        {
          "length": 20,
          "start": 9465
        },
        {
          "length": 20,
          "start": 9956
        },
        {
          "length": 20,
          "start": 10096
        }
      ]
    },
    "contracts/ShadowAddresses.sol": {
      "ShadowAddresses": [
        {
          "length": 20,
          "start": 3406
        },
        {
          "length": 20,
          "start": 3532
        },
        {
          "length": 20,
          "start": 3657
        },
        {
          "length": 20,
          "start": 3730
        },
        {
          "length": 20,
          "start": 3831
        },
        {
          "length": 20,
          "start": 3904
        },
        {
          "length": 20,
          "start": 3977
        },
        {
          "length": 20,
          "start": 4050
        },
        {
          "length": 20,
          "start": 4121
        },
        {
          "length": 20,
          "start": 4192
        },
        {
          "length": 20,
          "start": 4265
        },
        {
          "length": 20,
          "start": 4660
        },
        {
          "length": 20,
          "start": 4766
        },
        {
          "length": 20,
          "start": 5213
        },
        {
          "length": 20,
          "start": 5306
        },
        {
          "length": 20,
          "start": 5430
        },
        {
          "length": 20,
          "start": 5501
        },
        {
          "length": 20,
          "start": 5572
        },
        {
          "length": 20,
          "start": 5799
        },
        {
          "length": 20,
          "start": 5870
        },
        {
          "length": 20,
          "start": 5943
        },
        {
          "length": 20,
          "start": 6109
        },
        {
          "length": 20,
          "start": 6182
        },
        {
          "length": 20,
          "start": 6255
        },
        {
          "length": 20,
          "start": 6412
        },
        {
          "length": 20,
          "start": 6483
        },
        {
          "length": 20,
          "start": 6556
        },
        {
          "length": 20,
          "start": 6629
        },
        {
          "length": 20,
          "start": 6700
        },
        {
          "length": 20,
          "start": 6771
        },
        {
          "length": 20,
          "start": 7031
        },
        {
          "length": 20,
          "start": 7364
        },
        {
          "length": 20,
          "start": 7446
        },
        {
          "length": 20,
          "start": 7517
        },
        {
          "length": 20,
          "start": 7588
        },
        {
          "length": 20,
          "start": 7661
        },
        {
          "length": 20,
          "start": 7739
        },
        {
          "length": 20,
          "start": 7964
        },
        {
          "length": 20,
          "start": 8035
        },
        {
          "length": 20,
          "start": 8108
        },
        {
          "length": 20,
          "start": 8252
        },
        {
          "length": 20,
          "start": 8325
        },
        {
          "length": 20,
          "start": 8398
        },
        {
          "length": 20,
          "start": 8469
        },
        {
          "length": 20,
          "start": 8542
        },
        {
          "length": 20,
          "start": 8902
        },
        {
          "length": 20,
          "start": 9255
        },
        {
          "length": 20,
          "start": 9529
        },
        {
          "length": 20,
          "start": 9671
        },
        {
          "length": 20,
          "start": 9815
        },
        {
          "length": 20,
          "start": 9886
        },
        {
          "length": 20,
          "start": 10158
        }
      ]
    }
  },
  "devdoc": {
    "author": "Felipe",
    "details": "This should never be deployed to Main net.This contract is unsafe.",
    "kind": "dev",
    "methods": {},
    "title": "Test Memory Interactor",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
          "BitsManipulationLibrary": [
            {
              "length": 20,
              "start": 4890
            },
            {
              "length": 20,
              "start": 5115
            },
            {
              "length": 20,
              "start": 6873
            },
            {
              "length": 20,
              "start": 9078
            },
            {
              "length": 20,
              "start": 10260
            },
            {
              "length": 20,
              "start": 10555
            },
            {
              "length": 20,
              "start": 10783
            },
            {
              "length": 20,
              "start": 10938
            }
          ]
        },
        "contracts/CLINT.sol": {
          "CLINT": [
            {
              "length": 20,
              "start": 6068
            },
            {
              "length": 20,
              "start": 10414
            }
          ]
        },
        "contracts/HTIF.sol": {
          "HTIF": [
            {
              "length": 20,
              "start": 4370
            },
            {
              "length": 20,
              "start": 6373
            },
            {
              "length": 20,
              "start": 8211
            },
            {
              "length": 20,
              "start": 9632
            },
            {
              "length": 20,
              "start": 9776
            }
          ]
        },
        "contracts/RiscVConstants.sol": {
          "RiscVConstants": [
            {
              "length": 20,
              "start": 4456
            },
            {
              "length": 20,
              "start": 4574
            },
            {
              "length": 20,
              "start": 5690
            },
            {
              "length": 20,
              "start": 5758
            },
            {
              "length": 20,
              "start": 7133
            },
            {
              "length": 20,
              "start": 7273
            },
            {
              "length": 20,
              "start": 7857
            },
            {
              "length": 20,
              "start": 7925
            },
            {
              "length": 20,
              "start": 8654
            },
            {
              "length": 20,
              "start": 8800
            },
            {
              "length": 20,
              "start": 9357
            },
            {
              "length": 20,
              "start": 9497
            },
            {
              "length": 20,
              "start": 9988
            },
            {
              "length": 20,
              "start": 10128
            }
          ]
        },
        "contracts/ShadowAddresses.sol": {
          "ShadowAddresses": [
            {
              "length": 20,
              "start": 3438
            },
            {
              "length": 20,
              "start": 3564
            },
            {
              "length": 20,
              "start": 3689
            },
            {
              "length": 20,
              "start": 3762
            },
            {
              "length": 20,
              "start": 3863
            },
            {
              "length": 20,
              "start": 3936
            },
            {
              "length": 20,
              "start": 4009
            },
            {
              "length": 20,
              "start": 4082
            },
            {
              "length": 20,
              "start": 4153
            },
            {
              "length": 20,
              "start": 4224
            },
            {
              "length": 20,
              "start": 4297
            },
            {
              "length": 20,
              "start": 4692
            },
            {
              "length": 20,
              "start": 4798
            },
            {
              "length": 20,
              "start": 5245
            },
            {
              "length": 20,
              "start": 5338
            },
            {
              "length": 20,
              "start": 5462
            },
            {
              "length": 20,
              "start": 5533
            },
            {
              "length": 20,
              "start": 5604
            },
            {
              "length": 20,
              "start": 5831
            },
            {
              "length": 20,
              "start": 5902
            },
            {
              "length": 20,
              "start": 5975
            },
            {
              "length": 20,
              "start": 6141
            },
            {
              "length": 20,
              "start": 6214
            },
            {
              "length": 20,
              "start": 6287
            },
            {
              "length": 20,
              "start": 6444
            },
            {
              "length": 20,
              "start": 6515
            },
            {
              "length": 20,
              "start": 6588
            },
            {
              "length": 20,
              "start": 6661
            },
            {
              "length": 20,
              "start": 6732
            },
            {
              "length": 20,
              "start": 6803
            },
            {
              "length": 20,
              "start": 7063
            },
            {
              "length": 20,
              "start": 7396
            },
            {
              "length": 20,
              "start": 7478
            },
            {
              "length": 20,
              "start": 7549
            },
            {
              "length": 20,
              "start": 7620
            },
            {
              "length": 20,
              "start": 7693
            },
            {
              "length": 20,
              "start": 7771
            },
            {
              "length": 20,
              "start": 7996
            },
            {
              "length": 20,
              "start": 8067
            },
            {
              "length": 20,
              "start": 8140
            },
            {
              "length": 20,
              "start": 8284
            },
            {
              "length": 20,
              "start": 8357
            },
            {
              "length": 20,
              "start": 8430
            },
            {
              "length": 20,
              "start": 8501
            },
            {
              "length": 20,
              "start": 8574
            },
            {
              "length": 20,
              "start": 8934
            },
            {
              "length": 20,
              "start": 9287
            },
            {
              "length": 20,
              "start": 9561
            },
            {
              "length": 20,
              "start": 9703
            },
            {
              "length": 20,
              "start": 9847
            },
            {
              "length": 20,
              "start": 9918
            },
            {
              "length": 20,
              "start": 10190
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BDC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x454 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x834AA4F6 GT PUSH2 0x241 JUMPI DUP1 PUSH4 0xBECDC10D GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xDD5C4A14 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF7AC913D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF7AC913D EQ PUSH2 0xC91 JUMPI DUP1 PUSH4 0xF9911587 EQ PUSH2 0xC99 JUMPI DUP1 PUSH4 0xFA644AF5 EQ PUSH2 0xCBF JUMPI DUP1 PUSH4 0xFBDB975D EQ PUSH2 0xCE5 JUMPI DUP1 PUSH4 0xFD295ABE EQ PUSH2 0xD0B JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0xDD5C4A14 EQ PUSH2 0xBF1 JUMPI DUP1 PUSH4 0xF21D94F8 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0xF2CF6CEB EQ PUSH2 0xC3D JUMPI DUP1 PUSH4 0xF55C4D38 EQ PUSH2 0xC45 JUMPI DUP1 PUSH4 0xF604EDB8 EQ PUSH2 0xC6B JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0xCECDAE53 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xCECDAE53 EQ PUSH2 0xB8D JUMPI DUP1 PUSH4 0xCF187430 EQ PUSH2 0xBB3 JUMPI DUP1 PUSH4 0xD2BE7B6D EQ PUSH2 0xBBB JUMPI DUP1 PUSH4 0xD40D17C5 EQ PUSH2 0xBE1 JUMPI DUP1 PUSH4 0xDADED5C2 EQ PUSH2 0xBE9 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0xBECDC10D EQ PUSH2 0xB4F JUMPI DUP1 PUSH4 0xC133B7FF EQ PUSH2 0xB57 JUMPI DUP1 PUSH4 0xCBC446B1 EQ PUSH2 0xB5F JUMPI DUP1 PUSH4 0xCC92CBF7 EQ PUSH2 0xB85 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xAAED4F07 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0xAAED4F07 EQ PUSH2 0xACD JUMPI DUP1 PUSH4 0xAB9779B7 EQ PUSH2 0xAF3 JUMPI DUP1 PUSH4 0xAF63B2A8 EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xB2325AEF EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0xB5B98ED4 EQ PUSH2 0xB47 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xA317CE9D EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xA47594DF EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0xA740DBC1 EQ PUSH2 0xAA6 JUMPI DUP1 PUSH4 0xA7458B95 EQ PUSH2 0xAAE JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x8E32F35E GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x8E32F35E EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0x9485871B EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0x968644F0 EQ PUSH2 0x897 JUMPI DUP1 PUSH4 0x9B7021CE EQ PUSH2 0x89F JUMPI DUP1 PUSH4 0x9C7B005D EQ PUSH2 0x8A7 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x834AA4F6 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x854DBA40 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0x86676D43 EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0x89365909 EQ PUSH2 0x83B JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 GT PUSH2 0x352 JUMPI DUP1 PUSH4 0x5F824BF9 GT PUSH2 0x2DA JUMPI DUP1 PUSH4 0x6CD24DAF GT PUSH2 0x29E JUMPI DUP1 PUSH4 0x6CD24DAF EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0x6DC95C2E EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0x6F6C0E7D EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x78C49574 EQ PUSH2 0x7B9 JUMPI DUP1 PUSH4 0x78DDEE75 EQ PUSH2 0x7DF JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x5F824BF9 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0x6232E59C EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x6475E342 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0x650CA32B EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0x6A72B27D EQ PUSH2 0x773 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x57907837 GT PUSH2 0x321 JUMPI DUP1 PUSH4 0x57907837 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x5AF47CA7 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x5D914C0D EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0x5DADD78A EQ PUSH2 0x707 JUMPI DUP1 PUSH4 0x5E5CA652 EQ PUSH2 0x70F JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0x568B2702 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x5729E4A6 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0x575832DF EQ PUSH2 0x676 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x28520B30 GT PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x3A48BB56 GT PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x3A48BB56 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x45057ED7 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x4AE9388B EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x50CEC2D5 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x51BB3615 EQ PUSH2 0x60A JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x28520B30 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x28751B36 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x2CA2BD16 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x2E963A80 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x34970F18 EQ PUSH2 0x587 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x11CF3A22 GT PUSH2 0x427 JUMPI DUP1 PUSH4 0x11CF3A22 EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0x15DD9C06 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x18E504DB EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x1BF2F73D EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x1E5E6190 EQ PUSH2 0x523 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x80AA5D1 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xDF3E295 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xF84C046 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x10D74C7D EQ PUSH2 0x4BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x461 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xD49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A3 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x105B JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x10A2 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1134 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x149F JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1868 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x194E JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1E2F SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1E34 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1F17 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x257B JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x25C2 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2609 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x27F0 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2889 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 PUSH2 0x1AB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x27F0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDE PUSH2 0x1DE6 JUMP JUMPDEST DUP3 NOT AND SWAP1 POP PUSH2 0xEEC DUP2 PUSH2 0x1F17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x11BC JUMPI PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x119E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD OR PUSH2 0x122F JUMP JUMPDEST PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1214 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD NOT AND JUMPDEST PUSH2 0xEEC PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1280 PUSH2 0x1DE6 JUMP JUMPDEST DUP3 OR SWAP1 POP PUSH2 0x128D DUP2 PUSH2 0x1F17 JUMP JUMPDEST PUSH2 0xEEC PUSH1 0x0 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 NOT DUP4 AND DUP1 DUP5 SUB DUP3 PUSH2 0x12F4 DUP4 PUSH2 0x2B18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP5 AND DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x8 DUP7 MUL SWAP1 SWAP2 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1428 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x143E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A8 DUP2 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0xDC2 PUSH1 0x0 NOT PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1610 PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x165C JUMPI PUSH20 0x0 PUSH4 0x693549AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0x693549AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x92F5AA22 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1787 DUP3 PUSH1 0x8 MUL PUSH2 0x27F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEC DUP3 PUSH1 0x8 MUL DUP3 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x6299EA3F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x4A4C3510 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xC585EEDE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP5 SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x656B151F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1C13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFD198E55 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xFD198E55 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1C96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1CFE SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E87 PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1ED3 JUMPI PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x929127DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21AA PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2204 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x221A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 SHL SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x228D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 NOT SWAP4 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 PUSH2 0xEEC SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x40008000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH32 0x1F90FF9D73E8A6C31AA68CE092EE24C1FC49BC29C8525B76E90C710641779CEA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD DUP5 SWAP3 PUSH20 0x0 SWAP3 PUSH4 0xBF1924C5 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x238B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x239F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH6 0x7FFFFFFFFFFF PUSH1 0x1 DUP5 DUP2 SHR SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE DUP2 DUP6 AND SWAP2 DUP3 EQ DUP5 DUP5 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD SWAP5 SWAP7 POP SWAP2 SWAP5 POP SWAP3 SWAP1 SWAP2 PUSH32 0x23A6DBF84A188125A7E041CF278E49EBF25ABC3565D481F0728681181A01B1D4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xE89D408D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x24C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE697ACE9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xE697ACE9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x273A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 PUSH2 0x2817 DUP5 PUSH1 0x1 PUSH2 0x2B2E JUMP JUMPDEST PUSH1 0xC0 SHR PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x286B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND DIV SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x8 EQ ISZERO PUSH2 0x2902 JUMPI PUSH2 0x28FD DUP5 DUP5 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x7 NOT DUP5 AND DUP1 DUP6 SUB PUSH1 0x0 PUSH2 0x2915 DUP4 PUSH2 0x2B18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x29B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 DUP2 AND PUSH1 0x2 EXP PUSH1 0x0 NOT ADD DUP12 AND AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2A4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND PUSH1 0x8 DUP10 MUL DUP3 AND SHR DUP7 NOT DUP9 AND OR SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2AE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2B0B DUP7 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B25 DUP3 PUSH1 0x1 PUSH2 0x2B2E JUMP JUMPDEST PUSH1 0xC0 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 AND ISZERO PUSH2 0x2B86 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E206973206E6F7420616C69676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xC0 SHL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x4B PUSH17 0x487EDC0232BCBB911620D64372969744E6 SWAP12 SWAP1 0xA5 0xA6 PUSH32 0xE850C904644A4B64736F6C634300070400330000000000000000000000000000 ",
      "sourceMap": "902:1910:24:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {
        "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
          "BitsManipulationLibrary": [
            {
              "length": 20,
              "start": 4858
            },
            {
              "length": 20,
              "start": 5083
            },
            {
              "length": 20,
              "start": 6841
            },
            {
              "length": 20,
              "start": 9046
            },
            {
              "length": 20,
              "start": 10228
            },
            {
              "length": 20,
              "start": 10523
            },
            {
              "length": 20,
              "start": 10751
            },
            {
              "length": 20,
              "start": 10906
            }
          ]
        },
        "contracts/CLINT.sol": {
          "CLINT": [
            {
              "length": 20,
              "start": 6036
            },
            {
              "length": 20,
              "start": 10382
            }
          ]
        },
        "contracts/HTIF.sol": {
          "HTIF": [
            {
              "length": 20,
              "start": 4338
            },
            {
              "length": 20,
              "start": 6341
            },
            {
              "length": 20,
              "start": 8179
            },
            {
              "length": 20,
              "start": 9600
            },
            {
              "length": 20,
              "start": 9744
            }
          ]
        },
        "contracts/RiscVConstants.sol": {
          "RiscVConstants": [
            {
              "length": 20,
              "start": 4424
            },
            {
              "length": 20,
              "start": 4542
            },
            {
              "length": 20,
              "start": 5658
            },
            {
              "length": 20,
              "start": 5726
            },
            {
              "length": 20,
              "start": 7101
            },
            {
              "length": 20,
              "start": 7241
            },
            {
              "length": 20,
              "start": 7825
            },
            {
              "length": 20,
              "start": 7893
            },
            {
              "length": 20,
              "start": 8622
            },
            {
              "length": 20,
              "start": 8768
            },
            {
              "length": 20,
              "start": 9325
            },
            {
              "length": 20,
              "start": 9465
            },
            {
              "length": 20,
              "start": 9956
            },
            {
              "length": 20,
              "start": 10096
            }
          ]
        },
        "contracts/ShadowAddresses.sol": {
          "ShadowAddresses": [
            {
              "length": 20,
              "start": 3406
            },
            {
              "length": 20,
              "start": 3532
            },
            {
              "length": 20,
              "start": 3657
            },
            {
              "length": 20,
              "start": 3730
            },
            {
              "length": 20,
              "start": 3831
            },
            {
              "length": 20,
              "start": 3904
            },
            {
              "length": 20,
              "start": 3977
            },
            {
              "length": 20,
              "start": 4050
            },
            {
              "length": 20,
              "start": 4121
            },
            {
              "length": 20,
              "start": 4192
            },
            {
              "length": 20,
              "start": 4265
            },
            {
              "length": 20,
              "start": 4660
            },
            {
              "length": 20,
              "start": 4766
            },
            {
              "length": 20,
              "start": 5213
            },
            {
              "length": 20,
              "start": 5306
            },
            {
              "length": 20,
              "start": 5430
            },
            {
              "length": 20,
              "start": 5501
            },
            {
              "length": 20,
              "start": 5572
            },
            {
              "length": 20,
              "start": 5799
            },
            {
              "length": 20,
              "start": 5870
            },
            {
              "length": 20,
              "start": 5943
            },
            {
              "length": 20,
              "start": 6109
            },
            {
              "length": 20,
              "start": 6182
            },
            {
              "length": 20,
              "start": 6255
            },
            {
              "length": 20,
              "start": 6412
            },
            {
              "length": 20,
              "start": 6483
            },
            {
              "length": 20,
              "start": 6556
            },
            {
              "length": 20,
              "start": 6629
            },
            {
              "length": 20,
              "start": 6700
            },
            {
              "length": 20,
              "start": 6771
            },
            {
              "length": 20,
              "start": 7031
            },
            {
              "length": 20,
              "start": 7364
            },
            {
              "length": 20,
              "start": 7446
            },
            {
              "length": 20,
              "start": 7517
            },
            {
              "length": 20,
              "start": 7588
            },
            {
              "length": 20,
              "start": 7661
            },
            {
              "length": 20,
              "start": 7739
            },
            {
              "length": 20,
              "start": 7964
            },
            {
              "length": 20,
              "start": 8035
            },
            {
              "length": 20,
              "start": 8108
            },
            {
              "length": 20,
              "start": 8252
            },
            {
              "length": 20,
              "start": 8325
            },
            {
              "length": 20,
              "start": 8398
            },
            {
              "length": 20,
              "start": 8469
            },
            {
              "length": 20,
              "start": 8542
            },
            {
              "length": 20,
              "start": 8902
            },
            {
              "length": 20,
              "start": 9255
            },
            {
              "length": 20,
              "start": 9529
            },
            {
              "length": 20,
              "start": 9671
            },
            {
              "length": 20,
              "start": 9815
            },
            {
              "length": 20,
              "start": 9886
            },
            {
              "length": 20,
              "start": 10158
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x454 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x834AA4F6 GT PUSH2 0x241 JUMPI DUP1 PUSH4 0xBECDC10D GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xDD5C4A14 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF7AC913D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF7AC913D EQ PUSH2 0xC91 JUMPI DUP1 PUSH4 0xF9911587 EQ PUSH2 0xC99 JUMPI DUP1 PUSH4 0xFA644AF5 EQ PUSH2 0xCBF JUMPI DUP1 PUSH4 0xFBDB975D EQ PUSH2 0xCE5 JUMPI DUP1 PUSH4 0xFD295ABE EQ PUSH2 0xD0B JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0xDD5C4A14 EQ PUSH2 0xBF1 JUMPI DUP1 PUSH4 0xF21D94F8 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0xF2CF6CEB EQ PUSH2 0xC3D JUMPI DUP1 PUSH4 0xF55C4D38 EQ PUSH2 0xC45 JUMPI DUP1 PUSH4 0xF604EDB8 EQ PUSH2 0xC6B JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0xCECDAE53 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xCECDAE53 EQ PUSH2 0xB8D JUMPI DUP1 PUSH4 0xCF187430 EQ PUSH2 0xBB3 JUMPI DUP1 PUSH4 0xD2BE7B6D EQ PUSH2 0xBBB JUMPI DUP1 PUSH4 0xD40D17C5 EQ PUSH2 0xBE1 JUMPI DUP1 PUSH4 0xDADED5C2 EQ PUSH2 0xBE9 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0xBECDC10D EQ PUSH2 0xB4F JUMPI DUP1 PUSH4 0xC133B7FF EQ PUSH2 0xB57 JUMPI DUP1 PUSH4 0xCBC446B1 EQ PUSH2 0xB5F JUMPI DUP1 PUSH4 0xCC92CBF7 EQ PUSH2 0xB85 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xAAED4F07 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0xAAED4F07 EQ PUSH2 0xACD JUMPI DUP1 PUSH4 0xAB9779B7 EQ PUSH2 0xAF3 JUMPI DUP1 PUSH4 0xAF63B2A8 EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xB2325AEF EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0xB5B98ED4 EQ PUSH2 0xB47 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xA317CE9D EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xA47594DF EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0xA740DBC1 EQ PUSH2 0xAA6 JUMPI DUP1 PUSH4 0xA7458B95 EQ PUSH2 0xAAE JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x8E32F35E GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x8E32F35E EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0x9485871B EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0x968644F0 EQ PUSH2 0x897 JUMPI DUP1 PUSH4 0x9B7021CE EQ PUSH2 0x89F JUMPI DUP1 PUSH4 0x9C7B005D EQ PUSH2 0x8A7 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x834AA4F6 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x854DBA40 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0x86676D43 EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0x89365909 EQ PUSH2 0x83B JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 GT PUSH2 0x352 JUMPI DUP1 PUSH4 0x5F824BF9 GT PUSH2 0x2DA JUMPI DUP1 PUSH4 0x6CD24DAF GT PUSH2 0x29E JUMPI DUP1 PUSH4 0x6CD24DAF EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0x6DC95C2E EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0x6F6C0E7D EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x78C49574 EQ PUSH2 0x7B9 JUMPI DUP1 PUSH4 0x78DDEE75 EQ PUSH2 0x7DF JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x5F824BF9 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0x6232E59C EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x6475E342 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0x650CA32B EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0x6A72B27D EQ PUSH2 0x773 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x57907837 GT PUSH2 0x321 JUMPI DUP1 PUSH4 0x57907837 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x5AF47CA7 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x5D914C0D EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0x5DADD78A EQ PUSH2 0x707 JUMPI DUP1 PUSH4 0x5E5CA652 EQ PUSH2 0x70F JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0x568B2702 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x5729E4A6 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0x575832DF EQ PUSH2 0x676 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x28520B30 GT PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x3A48BB56 GT PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x3A48BB56 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x45057ED7 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x4AE9388B EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x50CEC2D5 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x51BB3615 EQ PUSH2 0x60A JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x28520B30 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x28751B36 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x2CA2BD16 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x2E963A80 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x34970F18 EQ PUSH2 0x587 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x11CF3A22 GT PUSH2 0x427 JUMPI DUP1 PUSH4 0x11CF3A22 EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0x15DD9C06 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x18E504DB EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x1BF2F73D EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x1E5E6190 EQ PUSH2 0x523 JUMPI PUSH2 0x454 JUMP JUMPDEST DUP1 PUSH4 0x80AA5D1 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xDF3E295 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xF84C046 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x10D74C7D EQ PUSH2 0x4BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x461 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xD49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A3 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x105B JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x10A2 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1134 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x149F JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1868 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x194E JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1E2F SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1E34 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1F17 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x257B JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x25C2 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x2609 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x4A3 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x27F0 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2889 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 PUSH2 0x1AB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x27F0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDE PUSH2 0x1DE6 JUMP JUMPDEST DUP3 NOT AND SWAP1 POP PUSH2 0xEEC DUP2 PUSH2 0x1F17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x11BC JUMPI PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x119E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD OR PUSH2 0x122F JUMP JUMPDEST PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1214 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD NOT AND JUMPDEST PUSH2 0xEEC PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1280 PUSH2 0x1DE6 JUMP JUMPDEST DUP3 OR SWAP1 POP PUSH2 0x128D DUP2 PUSH2 0x1F17 JUMP JUMPDEST PUSH2 0xEEC PUSH1 0x0 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 NOT DUP4 AND DUP1 DUP5 SUB DUP3 PUSH2 0x12F4 DUP4 PUSH2 0x2B18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP5 AND DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x8 DUP7 MUL SWAP1 SWAP2 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1428 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x143E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A8 DUP2 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0xDC2 PUSH1 0x0 NOT PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1610 PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x165C JUMPI PUSH20 0x0 PUSH4 0x693549AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0x693549AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x92F5AA22 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1787 DUP3 PUSH1 0x8 MUL PUSH2 0x27F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEC DUP3 PUSH1 0x8 MUL DUP3 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x6299EA3F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x4A4C3510 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xC585EEDE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP5 SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x656B151F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1C13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFD198E55 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xFD198E55 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1C96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1CFE SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E87 PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1ED3 JUMPI PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x929127DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21AA PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2204 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x221A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 SHL SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x228D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 NOT SWAP4 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 PUSH2 0xEEC SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x40008000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH32 0x1F90FF9D73E8A6C31AA68CE092EE24C1FC49BC29C8525B76E90C710641779CEA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD DUP5 SWAP3 PUSH20 0x0 SWAP3 PUSH4 0xBF1924C5 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x238B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x239F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH6 0x7FFFFFFFFFFF PUSH1 0x1 DUP5 DUP2 SHR SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE DUP2 DUP6 AND SWAP2 DUP3 EQ DUP5 DUP5 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD SWAP5 SWAP7 POP SWAP2 SWAP5 POP SWAP3 SWAP1 SWAP2 PUSH32 0x23A6DBF84A188125A7E041CF278E49EBF25ABC3565D481F0728681181A01B1D4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xE89D408D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x24C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE697ACE9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xE697ACE9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x273A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 PUSH2 0x2817 DUP5 PUSH1 0x1 PUSH2 0x2B2E JUMP JUMPDEST PUSH1 0xC0 SHR PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x286B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC2 PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND DIV SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x8 EQ ISZERO PUSH2 0x2902 JUMPI PUSH2 0x28FD DUP5 DUP5 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x7 NOT DUP5 AND DUP1 DUP6 SUB PUSH1 0x0 PUSH2 0x2915 DUP4 PUSH2 0x2B18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x29B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 DUP2 AND PUSH1 0x2 EXP PUSH1 0x0 NOT ADD DUP12 AND AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2A4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND PUSH1 0x8 DUP10 MUL DUP3 AND SHR DUP7 NOT DUP9 AND OR SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2AE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2B0B DUP7 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B25 DUP3 PUSH1 0x1 PUSH2 0x2B2E JUMP JUMPDEST PUSH1 0xC0 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 AND ISZERO PUSH2 0x2B86 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E206973206E6F7420616C69676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xC0 SHL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x4B PUSH17 0x487EDC0232BCBB911620D64372969744E6 SWAP12 SWAP1 0xA5 0xA6 PUSH32 0xE850C904644A4B64736F6C634300070400330000000000000000000000000000 ",
      "sourceMap": "902:1910:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:83:10;;;:::i;:::-;;;;;;;;;;;;;;;;9093:110;;;;;;;;;;;;;;;;-1:-1:-1;9093:110:10;-1:-1:-1;;;;;9093:110:10;;:::i;:::-;;5403:107;;;:::i;:::-;;;;-1:-1:-1;;;;;5403:107:10;;;;;;;;;;;;;;8977:110;;;;;;;;;;;;;;;;-1:-1:-1;8977:110:10;-1:-1:-1;;;;;8977:110:10;;:::i;4951:107::-;;;:::i;7719:122::-;;;;;;;;;;;;;;;;-1:-1:-1;7719:122:10;-1:-1:-1;;;;;7719:122:10;;:::i;4370:105::-;;;:::i;4144:::-;;;:::i;3339:::-;;;:::i;2982:113::-;;;:::i;9885:102::-;;;;;;;;;;;;;;;;-1:-1:-1;9885:102:10;-1:-1:-1;;;;;9885:102:10;;:::i;8745:114::-;;;;;;;;;;;;;;;;-1:-1:-1;8745:114:10;-1:-1:-1;;;;;8745:114:10;;:::i;4604:107::-;;;:::i;2526:110::-;;;:::i;10990:327::-;;;;;;;;;;;;;;;;-1:-1:-1;10990:327:10;;;;:::i;7565:148::-;;;;;;;;;;;;;;;;-1:-1:-1;7565:148:10;-1:-1:-1;;;;;7565:148:10;;:::i;4481:117::-;;;:::i;6429:642::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6429:642:10;;;;;;;;;;:::i;2867:109::-;;;:::i;7089:143::-;;;;;;;;;;;;;;;;-1:-1:-1;7089:143:10;-1:-1:-1;;;;;7089:143:10;;:::i;4255:109::-;;;:::i;1978:122:24:-;;;;;;;;;;;;;;;;-1:-1:-1;1978:122:24;;-1:-1:-1;;;;;1978:122:24;;;;;-1:-1:-1;;;;;;1978:122:24;;:::i;8407:108:10:-;;;;;;;;;;;;;;;;-1:-1:-1;8407:108:10;-1:-1:-1;;;;;8407:108:10;;:::i;9441:102::-;;;;;;;;;;;;;;;;-1:-1:-1;9441:102:10;-1:-1:-1;;;;;9441:102:10;;:::i;8077:110::-;;;;;;;;;;;;;;;;-1:-1:-1;8077:110:10;-1:-1:-1;;;;;8077:110:10;;:::i;7238:321::-;;;;;;;;;;;;;;;;-1:-1:-1;7238:321:10;;;;:::i;5064:107::-;;;:::i;8865:106::-;;;;;;;;;;;;;;;;-1:-1:-1;8865:106:10;-1:-1:-1;;;;;8865:106:10;;:::i;3672:115::-;;;:::i;2167:114::-;;;;;;;;;;;;;;;;-1:-1:-1;2167:114:10;-1:-1:-1;;;;;2167:114:10;;:::i;2287:113::-;;;:::i;5177:101::-;;;:::i;4834:111::-;;;:::i;3559:107::-;;;:::i;12819:113::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12819:113:10;;;;;;;;;;:::i;2642:110::-;;;:::i;9329:106::-;;;;;;;;;;;;;;;;-1:-1:-1;9329:106:10;-1:-1:-1;;;;;9329:106:10;;:::i;9209:114::-;;;;;;;;;;;;;;;;-1:-1:-1;9209:114:10;-1:-1:-1;;;;;9209:114:10;;:::i;5633:105::-;;;:::i;3793:111::-;;;:::i;7861:100::-;;;;;;;;;;;;;;;;-1:-1:-1;7861:100:10;-1:-1:-1;;;;;7861:100:10;;:::i;9773:106::-;;;;;;;;;;;;;;;;-1:-1:-1;9773:106:10;-1:-1:-1;;;;;9773:106:10;;:::i;1530:217:24:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1530:217:24;;;;;;;;;;:::i;3216:117:10:-;;;:::i;6053:182::-;;;:::i;5284:113::-;;;:::i;9549:104::-;;;;;;;;;;;;;;;;-1:-1:-1;9549:104:10;-1:-1:-1;;;;;9549:104:10;;:::i;8635:::-;;;;;;;;;;;;;;;;-1:-1:-1;8635:104:10;-1:-1:-1;;;;;8635:104:10;;:::i;3450:103::-;;;:::i;1361:163:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1361:163:24;;;;;;;;-1:-1:-1;1361:163:24;;-1:-1:-1;;1361:163:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1361:163:24;;;;;;;;-1:-1:-1;1361:163:24;;-1:-1:-1;;1361:163:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1361:163:24;;-1:-1:-1;1361:163:24;;-1:-1:-1;;;;;1361:163:24:i;4717:111:10:-;;;:::i;10663:321::-;;;;;;;;;;;;;;;;-1:-1:-1;10663:321:10;;;;:::i;8193:100::-;;;;;;;;;;;;;;;;-1:-1:-1;8193:100:10;-1:-1:-1;;;;;8193:100:10;;:::i;8299:102::-;;;;;;;;;;;;;;;;-1:-1:-1;8299:102:10;-1:-1:-1;;;;;8299:102:10;;:::i;4025:113::-;;;:::i;10433:111::-;;;;;;;;;;;;;;;;-1:-1:-1;10433:111:10;-1:-1:-1;;;;;10433:111:10;;:::i;5516:::-;;;:::i;3910:109::-;;;:::i;5744:::-;;;:::i;7967:104::-;;;;;;;;;;;;;;;;-1:-1:-1;7967:104:10;-1:-1:-1;;;;;7967:104:10;;:::i;2758:103::-;;;:::i;11323:337::-;;;;;;;;;;;;;;;;-1:-1:-1;11323:337:10;-1:-1:-1;;;;;11323:337:10;;:::i;2437:373:24:-;;;:::i;8521:108:10:-;;;;;;;;;;;;;;;;-1:-1:-1;8521:108:10;-1:-1:-1;;;;;8521:108:10;;:::i;6241:182::-;;;:::i;3101:109::-;;;:::i;10550:107::-;;;;;;;;;;;;;;;;-1:-1:-1;10550:107:10;-1:-1:-1;;;;;10550:107:10;;:::i;10207:104::-;;;;;;;;;;;;;;;;-1:-1:-1;10207:104:10;-1:-1:-1;;;;;10207:104:10;;:::i;2406:114::-;;;:::i;9659:108::-;;;;;;;;;;;;;;;;-1:-1:-1;9659:108:10;-1:-1:-1;;;;;9659:108:10;;:::i;9993:104::-;;;;;;;;;;;;;;;;-1:-1:-1;9993:104:10;-1:-1:-1;;;;;9993:104:10;;:::i;5859:188::-;;;:::i;10103:98::-;;;;;;;;;;;;;;;;-1:-1:-1;10103:98:10;-1:-1:-1;;;;;10103:98:10;;:::i;12964:200::-;;;;;;;;;;;;;;;;-1:-1:-1;12964:200:10;-1:-1:-1;;;;;12964:200:10;;:::i;10317:110::-;;;;;;;;;;;;;;;;-1:-1:-1;10317:110:10;-1:-1:-1;;;;;10317:110:10;;:::i;11666:1147::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11666:1147:10;;;;;;;;;;;;;;;;;;;:::i;2066:83::-;2109:7;2135;2066:83;:::o;9093:110::-;9147:49;9159:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9159:29:10;9190:5;9147:11;:49::i;:::-;9093:110;:::o;5403:107::-;5440:6;5465:38;5476:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5476:26:10;5465:10;:38::i;:::-;5458:45;;5403:107;:::o;8977:110::-;9031:49;9043:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4951:107;4988:6;5013:38;5024:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7719:122;7767:10;7780:9;:7;:9::i;:::-;7806:5;;7799:12;;-1:-1:-1;7821:13:10;7799:12;7821:8;:13::i;:::-;7719:122;;:::o;4370:105::-;4406:6;4431:37;4442:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4144:105;4180:6;4205:37;4216:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:105;3375:6;3400:37;3411:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2982:113;3022:6;3047:41;3058:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9885:102;9935:45;9947:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8745:114;8801:51;8813:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:107;4641:6;4666:38;4677:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:110;2568:6;2593:36;2604:4;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10990:327;11041:13;11057:12;:10;:12::i;:::-;11041:28;;11084:7;11080:172;;;11126:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11126:31:10;11117:40;11080:172;;;11209:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11209:31:10;11208:32;11199:41;11080:172;11262:48;11274:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7565:148;7611:10;7624:9;:7;:9::i;:::-;7643:11;;;-1:-1:-1;7665:13:10;7643:11;7665:8;:13::i;:::-;7689:17;7700:5;7689:10;:17::i;4481:117::-;4523:6;4548:43;4559:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6429:642;6496:6;-1:-1:-1;;6593:18:10;;6638:24;;;6496:6;6747:32;6593:18;6747:14;:32::i;:::-;6734:45;;6855:16;6874:23;:40;6948:7;6956:1;6948:9;-1:-1:-1;;;;;6915:42:10;6942:1;6930:8;-1:-1:-1;;;;;6917:21:10;6924:1;-1:-1:-1;;;;;6917:21:10;;6916:27;-1:-1:-1;;;;;6915:42:10;;;6874:84;;;;;;;;;;;;;-1:-1:-1;;;;;6874:84:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6874:84:10;6974:57;;;-1:-1:-1;;;6974:57:10;;-1:-1:-1;;;;;7015:15:10;;;6974:57;;;;;;;;6874:84;;-1:-1:-1;7043:1:10;7035:9;;6974:70;;;;:23;;:40;;:57;;;;;6874:84;;6974:57;;;;;;;:23;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6974:57:10;-1:-1:-1;;;;;6974:70:10;;;;6429:642;-1:-1:-1;;;;;;;6429:642:10:o;2867:109::-;2905:6;2930:39;2941:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7089:143;7139:23;7154:7;7139:14;:23::i;:::-;7172:22;-1:-1:-1;;7172:10:10;:22::i;4255:109::-;4293:6;4318:39;4329:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:122:24;-1:-1:-1;;;;;2066:18:24;;;;;;;;:3;:18;;;;;:27;;-1:-1:-1;;2066:27:24;;;;;;;;;;;;1978:122::o;8407:108:10:-;8460:48;8472:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9441:102;9491:45;9503:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8077:110;8131:49;8143:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7238:321;7286:13;7302:12;:10;:12::i;:::-;7286:28;;7329:4;7325:169;;;7368:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7325:169;7451:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5064:107;5101:6;5126:38;5137:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8865:106;8917:47;8929:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:115;3713:6;3738:42;3749:15;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2167:114;2220:6;2245:29;2256:13;2272:1;2256:17;2245:10;:29::i;:::-;2238:36;2167:114;-1:-1:-1;;2167:114:10:o;2287:113::-;2332:6;2357:36;2368:5;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5177:101;5211:6;5236:35;5247:15;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4834:111;4873:6;4898:40;4909:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3559:107;3596:6;3621:38;3632:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12819:113;12888:37;12900:13;12916:1;12900:17;12919:5;12888:11;:37::i;2642:110::-;2684:6;2709:36;2720:4;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9329:106;9381:47;9393:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9209:114;9265:51;9277:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5633:105;5669:6;5694:37;5705:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3793:111;3832:6;3857:40;3868:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7861:100;7910:44;7922:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9773:106;9825:47;9837:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1530:217:24;1614:17;1641:23;:40;1682:6;1641:48;;;;;;;;;;;;;-1:-1:-1;;;;;1641:48:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1641:48:24;-1:-1:-1;;;;;1701:18:24;;;;;;;:3;1641:48;1701:18;;;;:39;;-1:-1:-1;;1701:39:24;;;;;;;;;;;;-1:-1:-1;;1530:217:24:o;3216:117:10:-;3258:6;3283:43;3294:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6053:182;6092:6;6196:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6196:32:10;6160:31;;;-1:-1:-1;;;6160:31:10;;;;-1:-1:-1;;;;;6117:111:10;;;;6160:14;;:29;;:31;;;;;6196:32;;6160:31;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6160:31:10;6129:27;;;-1:-1:-1;;;6129:27:10;;;;6118:39;;6129:15;;:25;;:27;;;;;6160:31;;6129:27;;;;;;;;:15;:27;;;;;;;;;;6118:39;:73;-1:-1:-1;;;;;6117:111:10;;;6110:118;;6053:182;:::o;5284:113::-;5324:6;5349:41;5360:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9549:104;9600:46;9612:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8635:104;8686:46;8698:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3450:103;3485:6;3510:36;3521:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1361:163:24;;;;:::o;4717:111:10:-;4756:6;4781:40;4792:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10663:321;10711:13;10727:12;:10;:12::i;:::-;10711:28;;10754:4;10750:169;;;10793:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10750:169;10876:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8193:100;8242:44;8254:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8299:102;8349:45;8361:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:113;4065:6;4090:41;4101:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10433:111;10491:46;10503:4;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5516:111;5555:6;5580:40;5591:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3910:109;3948:6;3973:39;3984:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5744:109;5782:6;5807:39;5818:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7967:104;8018:46;8030:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2758:103;2793:6;2818:36;2829:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:337;11380:13;11396:12;:10;:12::i;:::-;11380:28;;11559:14;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11559:34:10;11509:33;;;-1:-1:-1;;;11509:33:10;;;;-1:-1:-1;;;;;11548:45:10;;;;;;;;;;11509:14;;:31;;:33;;;;;11559:34;;11509:33;;;;;;;:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11509:33:10;11617:27;;;-1:-1:-1;;;11617:27:10;;;;11508:34;;11498:45;;;;11497:97;;;;;11605:48;;11617:15;;:25;;:27;;;;;11509:33;;11617:27;;;;;;;:15;:27;;;;;;;;;;2437:373:24;2527:10;2481:6;2523:15;;;:3;:15;;;;;;;2583:45;;-1:-1:-1;;;2583:45:24;;-1:-1:-1;;;;;2516:23:24;;;2583:45;;;;;;;2481:6;;2583:23;;:40;;:45;;;;;2523:15;2583:45;;;;;:23;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2583:45:24;2639:11;2756:7;2747:32;;;;;;2687:15;2659:1;2687:15;;;;;;;2583:45;2747:32;;;;;2653:7;;;2721:9;;;2747:32;;;;;;;;2583:45;;-1:-1:-1;2721:9:24;;-1:-1:-1;2653:7:24;2687:15;;2747:32;;;;;;;;;;2796:7;-1:-1:-1;;;;2437:373:24;:::o;8521:108:10:-;8574:48;8586:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6241:182;6280:6;6384:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6384:32:10;6348:31;;;-1:-1:-1;;;6348:31:10;;;;-1:-1:-1;;;;;6305:111:10;;;;6348:14;;:29;;:31;;;;;6384:32;;6348:31;;;;;;;:14;:31;;;;;;;;;;3101:109;3139:6;3164:39;3175:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10550:107;10606:44;10618:4;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10207:104;10258:46;10270:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:114;2450:6;2475:38;2486:4;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9659:108;9712:48;9724:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9993:104;10044:46;10056:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5859:188;5900:6;6006:14;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6006:34:10;5968:33;;;-1:-1:-1;;;5968:33:10;;;;-1:-1:-1;;;;;5925:115:10;;;;5968:14;;:31;;:33;;;;;6006:34;;5968:33;;;;;;;:14;:33;;;;;;;;;;10103:98;10151:43;10163:15;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12964:200;13021:6;13046:23;:40;13107:39;13127:12;13141:4;13107:19;:39::i;:::-;13100:47;;13046:111;;;;;;;;;;;;;-1:-1:-1;;;;;13046:111:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13046:111:10;;12964:200;-1:-1:-1;;12964:200:10:o;10317:110::-;10376:44;10388:5;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11666:1147;11783:20;11817:1;-1:-1:-1;;;;;11806:12:10;;;11783:35;;11833:13;-1:-1:-1;;;;;11833:18:10;11850:1;11833:18;11829:978;;;11867:25;11879:5;11886;11867:11;:25::i;:::-;11829:978;;;-1:-1:-1;;12006:18:10;;12055:24;;;11980:23;12178:32;12006:18;12178:14;:32::i;:::-;12162:48;;12294:16;12313:23;:40;12387:7;12395:1;12387:9;-1:-1:-1;;;;;12354:42:10;12381:1;12369:8;-1:-1:-1;;;;;12356:21:10;12363:1;-1:-1:-1;;;;;12356:21:10;;12355:27;-1:-1:-1;;;;;12354:42:10;;;12313:84;;;;;;;;;;;;;-1:-1:-1;;;;;12313:84:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12313:84:10;12505:79;;;-1:-1:-1;;;12505:79:10;;-1:-1:-1;;;;;12556:21:10;;;12563:1;12556:21;-1:-1:-1;;12555:27:10;12546:37;;12505:79;;;;;;;12313:84;;-1:-1:-1;;;12505:23:10;;:40;;:79;;;;;12313:84;;12505:79;;;;;;;:23;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12505:79:10;12693:50;;;-1:-1:-1;;;12693:50:10;;-1:-1:-1;;;;;12643:22:10;;;12664:1;12656:9;;12643:22;;;12628:10;;12619:19;;12618:48;12693:50;;;;;;;;;12505:79;;-1:-1:-1;12618:48:10;;12693:23;;:40;;:50;;;;;12505:79;;12693:50;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12693:50:10;;-1:-1:-1;12757:39:10;12769:16;12693:50;12757:11;:39::i;:::-;11829:978;;;;;;;11666:1147;;;;:::o;13769:142::-;13832:6;13864:39;13884:12;13898:4;13864:19;:39::i;:::-;13857:47;;;13769:142;-1:-1:-1;;13769:142:10:o;2171:190:24:-;2250:6;2288:1;2277:12;;2276:19;2268:55;;;;;-1:-1:-1;;;2268:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;2341:13:24;;;;;:3;:13;;;;;;;;;2171:190::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2245600",
        "executionCost": "2397",
        "totalCost": "2247997"
      },
      "external": {
        "externalPureMemoryWrite(uint64,bytes8)": "21291",
        "getRWIndex()": "1068",
        "htifExit()": "infinite",
        "initializeMemory(uint64[],bytes8[],bool[])": "infinite",
        "memoryRead(uint64)": "infinite",
        "memoryWrite(uint64,uint64)": "infinite",
        "readClintMtimecmp()": "infinite",
        "readHtifFromhost()": "infinite",
        "readHtifIYield()": "infinite",
        "readHtifTohost()": "infinite",
        "readIflags()": "infinite",
        "readIflagsH()": "infinite",
        "readIflagsPrv()": "infinite",
        "readIflagsY()": "infinite",
        "readIlrsc()": "infinite",
        "readMarchid()": "infinite",
        "readMcause()": "infinite",
        "readMcounteren()": "infinite",
        "readMcycle()": "infinite",
        "readMedeleg()": "infinite",
        "readMemory(uint64,uint64)": "infinite",
        "readMepc()": "infinite",
        "readMideleg()": "infinite",
        "readMie()": "infinite",
        "readMimpid()": "infinite",
        "readMinstret()": "infinite",
        "readMip()": "infinite",
        "readMisa()": "infinite",
        "readMscratch()": "infinite",
        "readMstatus()": "infinite",
        "readMtval()": "infinite",
        "readMtvec()": "infinite",
        "readMvendorid()": "infinite",
        "readPc()": "infinite",
        "readSatp()": "infinite",
        "readScause()": "infinite",
        "readScounteren()": "infinite",
        "readSepc()": "infinite",
        "readSscratch()": "infinite",
        "readStval()": "infinite",
        "readStvec()": "infinite",
        "readX(uint64)": "infinite",
        "resetMip(uint64)": "infinite",
        "setIflagsH(bool)": "infinite",
        "setIflagsI(bool)": "infinite",
        "setIflagsY(bool)": "infinite",
        "setMip(uint64)": "infinite",
        "setPriv(uint64)": "infinite",
        "writeClintMtimecmp(uint64)": "infinite",
        "writeHtifFromhost(uint64)": "infinite",
        "writeHtifTohost(uint64)": "infinite",
        "writeIflagsPrv(uint64)": "infinite",
        "writeIlrsc(uint64)": "infinite",
        "writeMcause(uint64)": "infinite",
        "writeMcounteren(uint64)": "infinite",
        "writeMcycle(uint64)": "infinite",
        "writeMedeleg(uint64)": "infinite",
        "writeMemory(uint64,uint64,uint64)": "infinite",
        "writeMepc(uint64)": "infinite",
        "writeMideleg(uint64)": "infinite",
        "writeMie(uint64)": "infinite",
        "writeMinstret(uint64)": "infinite",
        "writeMip(uint64)": "infinite",
        "writeMscratch(uint64)": "infinite",
        "writeMstatus(uint64)": "infinite",
        "writeMtval(uint64)": "infinite",
        "writeMtvec(uint64)": "infinite",
        "writePc(uint64)": "infinite",
        "writeSatp(uint64)": "infinite",
        "writeScause(uint64)": "infinite",
        "writeScounteren(uint64)": "infinite",
        "writeSepc(uint64)": "infinite",
        "writeSscratch(uint64)": "infinite",
        "writeStval(uint64)": "infinite",
        "writeStvec(uint64)": "infinite",
        "writeX(uint64,uint64)": "infinite"
      },
      "internal": {
        "memoryAccessManager(uint64,bool)": "infinite",
        "pureMemoryWrite(uint64,uint64)": "infinite"
      }
    },
    "methodIdentifiers": {
      "externalPureMemoryWrite(uint64,bytes8)": "5729e4a6",
      "getRWIndex()": "080aa5d1",
      "htifExit()": "cf187430",
      "initializeMemory(uint64[],bytes8[],bool[])": "a47594df",
      "memoryRead(uint64)": "fa644af5",
      "memoryWrite(uint64,uint64)": "8e32f35e",
      "readClintMtimecmp()": "6475e342",
      "readHtifFromhost()": "f2cf6ceb",
      "readHtifIYield()": "6f6c0e7d",
      "readHtifTohost()": "34970f18",
      "readIflags()": "c133b7ff",
      "readIflagsH()": "968644f0",
      "readIflagsPrv()": "f7ac913d",
      "readIflagsY()": "d40d17c5",
      "readIlrsc()": "5dadd78a",
      "readMarchid()": "854dba40",
      "readMcause()": "51bb3615",
      "readMcounteren()": "9485871b",
      "readMcycle()": "daded5c2",
      "readMedeleg()": "6a72b27d",
      "readMemory(uint64,uint64)": "50cec2d5",
      "readMepc()": "1e5e6190",
      "readMideleg()": "a740dbc1",
      "readMie()": "cc92cbf7",
      "readMimpid()": "becdc10d",
      "readMinstret()": "28520b30",
      "readMip()": "a317ce9d",
      "readMisa()": "834aa4f6",
      "readMscratch()": "af63b2a8",
      "readMstatus()": "b5b98ed4",
      "readMtval()": "6cd24daf",
      "readMtvec()": "11cf3a22",
      "readMvendorid()": "5f824bf9",
      "readPc()": "650ca32b",
      "readSatp()": "1bf2f73d",
      "readScause()": "568b2702",
      "readScounteren()": "4ae9388b",
      "readSepc()": "18e504db",
      "readSscratch()": "9b7021ce",
      "readStval()": "2e963a80",
      "readStvec()": "0f84c046",
      "readX(uint64)": "6232e59c",
      "resetMip(uint64)": "15dd9c06",
      "setIflagsH(bool)": "a7458b95",
      "setIflagsI(bool)": "5d914c0d",
      "setIflagsY(bool)": "3a48bb56",
      "setMip(uint64)": "45057ed7",
      "setPriv(uint64)": "54749af3",
      "writeClintMtimecmp(uint64)": "fbdb975d",
      "writeHtifFromhost(uint64)": "b2325aef",
      "writeHtifTohost(uint64)": "dd5c4a14",
      "writeIflagsPrv(uint64)": "cecdae53",
      "writeIlrsc(uint64)": "f21d94f8",
      "writeMcause(uint64)": "89365909",
      "writeMcounteren(uint64)": "2ca2bd16",
      "writeMcycle(uint64)": "5e5ca652",
      "writeMedeleg(uint64)": "575832df",
      "writeMemory(uint64,uint64,uint64)": "fd295abe",
      "writeMepc(uint64)": "28751b36",
      "writeMideleg(uint64)": "d2be7b6d",
      "writeMie(uint64)": "86676d43",
      "writeMinstret(uint64)": "10d74c7d",
      "writeMip(uint64)": "aaed4f07",
      "writeMscratch(uint64)": "0df3e295",
      "writeMstatus(uint64)": "f55c4d38",
      "writeMtval(uint64)": "f604edb8",
      "writeMtvec(uint64)": "9c872d02",
      "writePc(uint64)": "f9911587",
      "writeSatp(uint64)": "ab9779b7",
      "writeScause(uint64)": "78c49574",
      "writeScounteren(uint64)": "78ddee75",
      "writeSepc(uint64)": "57907837",
      "writeSscratch(uint64)": "5af47ca7",
      "writeStval(uint64)": "9c7b005d",
      "writeStvec(uint64)": "cbc446b1",
      "writeX(uint64,uint64)": "6dc95c2e"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_exitCode\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_halt\",\"type\":\"bool\"}],\"name\":\"HTIFExit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_writeAddress\",\"type\":\"uint64\"},{\"internalType\":\"bytes8\",\"name\":\"_value\",\"type\":\"bytes8\"}],\"name\":\"externalPureMemoryWrite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRWIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"htifExit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"_rwPositions\",\"type\":\"uint64[]\"},{\"internalType\":\"bytes8[]\",\"name\":\"_rwValues\",\"type\":\"bytes8[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isRead\",\"type\":\"bool[]\"}],\"name\":\"initializeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_readAddress\",\"type\":\"uint64\"}],\"name\":\"memoryRead\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_writeAddress\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_value\",\"type\":\"uint64\"}],\"name\":\"memoryWrite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readClintMtimecmp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifFromhost\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifIYield\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifTohost\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflags\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsPrv\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIlrsc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMarchid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMcause\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMcounteren\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMcycle\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMedeleg\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"paddr\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"wordSize\",\"type\":\"uint64\"}],\"name\":\"readMemory\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMepc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMideleg\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMie\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMimpid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMinstret\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMip\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMisa\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMscratch\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMstatus\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMtval\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMtvec\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMvendorid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readPc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readSatp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readScause\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readScounteren\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readSepc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readSscratch\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readStval\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readStvec\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"registerIndex\",\"type\":\"uint64\"}],\"name\":\"readX\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"mask\",\"type\":\"uint64\"}],\"name\":\"resetMip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"halt\",\"type\":\"bool\"}],\"name\":\"setIflagsH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"idle\",\"type\":\"bool\"}],\"name\":\"setIflagsI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isYield\",\"type\":\"bool\"}],\"name\":\"setIflagsY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"mask\",\"type\":\"uint64\"}],\"name\":\"setMip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newPriv\",\"type\":\"uint64\"}],\"name\":\"setPriv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeClintMtimecmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeHtifFromhost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeHtifTohost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newPriv\",\"type\":\"uint64\"}],\"name\":\"writeIflagsPrv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeIlrsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMcause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMcounteren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMcycle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMedeleg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"paddr\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"wordSize\",\"type\":\"uint64\"}],\"name\":\"writeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMepc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMideleg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMie\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMinstret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMscratch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMstatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMtval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMtvec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writePc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeSatp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeScause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeScounteren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeSepc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeSscratch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeStval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeStvec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"registerindex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Felipe\",\"details\":\"This should never be deployed to Main net.This contract is unsafe.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Test Memory Interactor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"htifExit()\":{\"notice\":\"Perform a read in HTIF to get the arbitrary exit code\"}},\"notice\":\"A mock memory interactor for running test_ram.py\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestMemoryInteractor.sol\":\"TestMemoryInteractor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/BitsManipulationLibrary.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title Bits Manipulation Library\\n/// @author Felipe Argento / Stephen Chen\\n/// @notice Implements bit manipulation helper functions\\nlibrary BitsManipulationLibrary {\\n\\n    /// @notice Sign extend a shorter signed value to the full int32\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function int32SignExtension(int32 number, uint32 wordSize)\\n    public pure returns(int32)\\n    {\\n        uint32 uNumber = uint32(number);\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint32 mask = ((uint32(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return int32(uNumber);\\n    }\\n\\n    /// @notice Sign extend a shorter signed value to the full uint64\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function uint64SignExtension(uint64 number, uint64 wordSize)\\n    public pure returns(uint64)\\n    {\\n        uint64 uNumber = number;\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint64 mask = ((uint64(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return uNumber;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 64 bytes\\n    /// @param num number to have bytes swapped\\n    function uint64SwapEndian(uint64 num) public pure returns(uint64) {\\n        uint64 output = ((num & 0x00000000000000ff) << 56)|\\n            ((num & 0x000000000000ff00) << 40)|\\n            ((num & 0x0000000000ff0000) << 24)|\\n            ((num & 0x00000000ff000000) << 8) |\\n            ((num & 0x000000ff00000000) >> 8) |\\n            ((num & 0x0000ff0000000000) >> 24)|\\n            ((num & 0x00ff000000000000) >> 40)|\\n            ((num & 0xff00000000000000) >> 56);\\n\\n        return output;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 32 bytes\\n    /// @param num number to have bytes swapped\\n    function uint32SwapEndian(uint32 num) public pure returns(uint32) {\\n        uint32 output = ((num >> 24) & 0xff) | ((num << 8) & 0xff0000) | ((num >> 8) & 0xff00) | ((num << 24) & 0xff000000);\\n        return output;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x95b97e0ae364fb91a3fdcf8132e7b61c745c23dd4e5beb980f396c05a69bbd08\",\"license\":\"Apache-2.0\"},\"contracts/CLINT.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"./RealTimeClock.sol\\\";\\n\\n\\n/// @title CLINT\\n/// @author Felipe Argento\\n/// @notice Implements the Core Local Interruptor functionalities\\n/// @dev CLINT active addresses are 0x0200bff8(mtime) and 0x02004000(mtimecmp)\\n/// Reference: The Core of Cartesi, v1.02 - Section 3.2 - The Board\\nlibrary CLINT {\\n\\n    uint64 constant CLINT_MSIP0_ADDR = 0x02000000;\\n    uint64 constant CLINT_MTIMECMP_ADDR = 0x02004000;\\n    uint64 constant CLINT_MTIME_ADDR = 0x0200bff8;\\n\\n    /// @notice reads clint\\n    /// @param offset can be uint8, uint16, uint32 or uint64\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if read was successfull\\n    /// @return uint64 pval\\n    function clintRead(\\n        MemoryInteractor mi,\\n        uint64 offset,\\n        uint64 wordSize\\n    )\\n    public returns (bool, uint64)\\n    {\\n\\n        if (offset == CLINT_MSIP0_ADDR) {\\n            return clintReadMsip(mi, wordSize);\\n        } else if (offset == CLINT_MTIMECMP_ADDR) {\\n            return clintReadMtime(mi, wordSize);\\n        } else if (offset == CLINT_MTIME_ADDR) {\\n            return clintReadMtimecmp(mi, wordSize);\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    /// @notice write to clint\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param offset can be uint8, uint16, uint32 or uint64\\n    /// @param val to be written\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if write was successfull\\n    function clintWrite(\\n        MemoryInteractor mi,\\n        uint64 offset,\\n        uint64 val,\\n        uint64 wordSize)\\n    public returns (bool)\\n    {\\n        if (offset == CLINT_MSIP0_ADDR) {\\n            if (wordSize == 32) {\\n                if ((val & 1) != 0) {\\n                    mi.setMip(RiscVConstants.getMipMsipMask());\\n                } else {\\n                    mi.resetMip(RiscVConstants.getMipMsipMask());\\n                }\\n                return true;\\n            }\\n            return false;\\n        } else if (offset == CLINT_MTIMECMP_ADDR) {\\n            if (wordSize == 64) {\\n                mi.writeClintMtimecmp(val);\\n                mi.resetMip(RiscVConstants.getMipMsipMask());\\n                return true;\\n            }\\n            // partial mtimecmp is not supported\\n            return false;\\n        }\\n        return false;\\n    }\\n\\n    // internal functions\\n    function clintReadMsip(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 32) {\\n            if ((mi.readMip() & RiscVConstants.getMipMsipMask()) == RiscVConstants.getMipMsipMask()) {\\n                return(true, 1);\\n            } else {\\n                return (true, 0);\\n            }\\n        }\\n        return (false, 0);\\n    }\\n\\n    function clintReadMtime(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 64) {\\n            return (true, RealTimeClock.rtcCycleToTime(mi.readMcycle()));\\n        }\\n        return (false, 0);\\n    }\\n\\n    function clintReadMtimecmp(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 64) {\\n            return (true, mi.readClintMtimecmp());\\n        }\\n        return (false, 0);\\n    }\\n\\n    // getters\\n    function getClintMtimecmp() public pure returns (uint64) {\\n        return CLINT_MTIMECMP_ADDR;\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x89a1c4305fc05859156cbd73380aa63ce16a48aba24ce44d4b862b5f415d6362\",\"license\":\"Apache-2.0\"},\"contracts/HTIF.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n// @title HTIF\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\n\\n\\n/// @title HTIF\\n/// @author Felipe Argento\\n/// @notice Host-Target-Interface (HTIF) mediates communcation with external world.\\n/// @dev Its active addresses are 0x40000000(tohost) and 0x40000008(from host)\\n/// Reference: The Core of Cartesi, v1.02 - Section 3.2 - The Board\\nlibrary HTIF {\\n\\n    uint64 constant HTIF_TOHOST_ADDR_CONST = 0x40008000;\\n    uint64 constant HTIF_FROMHOST_ADDR_CONST = 0x40008008;\\n    uint64 constant HTIF_IYIELD_ADDR_CONST = 0x40008020;\\n\\n    // [c++] enum HTIF_devices\\n    uint64 constant HTIF_DEVICE_HALT = 0;        //< Used to halt machine\\n    uint64 constant HTIF_DEVICE_CONSOLE = 1;     //< Used for console input and output\\n    uint64 constant HTIF_DEVICE_YIELD = 2;       //< Used to yield control back to host\\n\\n    // [c++] enum HTIF_commands\\n    uint64 constant HTIF_HALT_HALT = 0;\\n    uint64 constant HTIF_CONSOLE_GETCHAR = 0;\\n    uint64 constant HTIF_CONSOLE_PUTCHAR = 1;\\n    uint64 constant HTIF_YIELD_PROGRESS = 0;\\n    uint64 constant HTIF_YIELD_ROLLUP = 1;\\n\\n    /// @notice reads htif\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param addr address to read from\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if read was successfull\\n    /// @return uint64 pval\\n    function htifRead(\\n        MemoryInteractor mi,\\n        uint64 addr,\\n        uint64 wordSize\\n    )\\n    public returns (bool, uint64)\\n    {\\n        // HTIF reads must be aligned and 8 bytes\\n        if (wordSize != 64 || (addr & 7) != 0) {\\n            return (false, 0);\\n        }\\n\\n        if (addr == HTIF_TOHOST_ADDR_CONST) {\\n            return (true, mi.readHtifTohost());\\n        } else if (addr == HTIF_FROMHOST_ADDR_CONST) {\\n            return (true, mi.readHtifFromhost());\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    /// @notice write htif\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param addr address to read from\\n    /// @param val value to be written\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if write was successfull\\n    function htifWrite(\\n        MemoryInteractor mi,\\n        uint64 addr,\\n        uint64 val,\\n        uint64 wordSize\\n    )\\n    public returns (bool)\\n    {\\n        // HTIF writes must be aligned and 8 bytes\\n        if (wordSize != 64 || (addr & 7) != 0) {\\n            return false;\\n        }\\n        if (addr == HTIF_TOHOST_ADDR_CONST) {\\n            return htifWriteTohost(mi, val);\\n        } else if (addr == HTIF_FROMHOST_ADDR_CONST) {\\n            mi.writeHtifFromhost(val);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    // Internal functions\\n    function htifWriteFromhost(MemoryInteractor mi, uint64 val)\\n    internal returns (bool)\\n    {\\n        mi.writeHtifFromhost(val);\\n        // TO-DO: check if h is interactive? reset from host? pollConsole?\\n        return true;\\n    }\\n\\n    function htifWriteTohost(MemoryInteractor mi, uint64 tohost)\\n    internal returns (bool)\\n    {\\n        uint32 device = uint32(tohost >> 56);\\n        uint32 cmd = uint32((tohost >> 48) & 0xff);\\n        uint64 payload = uint32((tohost & (~(uint256(1) >> 16))));\\n\\n        mi.writeHtifTohost(tohost);\\n\\n        if (device == HTIF_DEVICE_HALT) {\\n            return htifHalt(\\n                mi,\\n                cmd,\\n                payload);\\n        } else if (device == HTIF_DEVICE_CONSOLE) {\\n            return htifConsole(\\n                mi,\\n                cmd,\\n                payload);\\n        } else if (device == HTIF_DEVICE_YIELD) {\\n            return htifYield(\\n                mi,\\n                cmd,\\n                payload);\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    function htifHalt(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        if (cmd == HTIF_HALT_HALT && ((payload & 1) == 1) ) {\\n            //set iflags to halted\\n            mi.setIflagsH(true);\\n        }\\n        return true;\\n    }\\n\\n    function htifYield(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        // If yield command is enabled, yield\\n        if ((mi.readHtifIYield() >> cmd) & 1 == 1) {\\n            mi.setIflagsY(true);\\n            mi.writeHtifFromhost((HTIF_DEVICE_YIELD << 56) | cmd << 48);\\n        }\\n\\n        return true;\\n    }\\n\\n    function htifConsole(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        if (cmd == HTIF_CONSOLE_PUTCHAR) {\\n            htifPutchar(mi);\\n        } else if (cmd == HTIF_CONSOLE_GETCHAR) {\\n            htifGetchar(mi);\\n        } else {\\n            // Unknown HTIF console commands are silently ignored\\n            return true;\\n        }\\n    }\\n\\n    function htifPutchar(MemoryInteractor mi) internal\\n    returns (bool)\\n    {\\n        // TO-DO: what to do in the blockchain? Generate event?\\n        mi.writeHtifFromhost((HTIF_DEVICE_CONSOLE << 56) | uint64(HTIF_CONSOLE_PUTCHAR) << 48);\\n        return true;\\n    }\\n\\n    function htifGetchar(MemoryInteractor mi) internal\\n    returns (bool)\\n    {\\n        mi.writeHtifFromhost((HTIF_DEVICE_CONSOLE << 56) | uint64(HTIF_CONSOLE_GETCHAR) << 48);\\n        return true;\\n    }\\n\\n    // getters\\n    function getHtifToHostAddr() public pure returns (uint64) {\\n        return HTIF_TOHOST_ADDR_CONST;\\n    }\\n\\n    function getHtifFromHostAddr() public pure returns (uint64) {\\n        return HTIF_FROMHOST_ADDR_CONST;\\n    }\\n\\n    function getHtifIYieldAddr() public pure returns (uint64) {\\n        return HTIF_IYIELD_ADDR_CONST;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x269d377ff4e5c3d0c65bb18d949f249c7e56ab2c208d8fb3f9376ac4d0b5f8f8\",\"license\":\"Apache-2.0\"},\"contracts/MemoryInteractor.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n/// @title MemoryInteractor.sol\\npragma solidity ^0.7.0;\\n\\nimport \\\"./ShadowAddresses.sol\\\";\\nimport \\\"./HTIF.sol\\\";\\nimport \\\"./CLINT.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"@cartesi/util/contracts/BitsManipulationLibrary.sol\\\";\\n\\n/// @title MemoryInteractor\\n/// @author Felipe Argento\\n/// @notice Bridge between Memory Manager and Step\\n/// @dev Every read performed by mi.memoryRead or mi.write should be followed by an\\n/// @dev endianess swap from little endian to big endian. This is the case because\\n/// @dev EVM is big endian but RiscV is little endian.\\n/// @dev Reference: riscv-spec-v2.2.pdf - Preface to Version 2.0\\n/// @dev Reference: Ethereum yellowpaper - Version 69351d5\\n/// @dev    Appendix H. Virtual Machine Specification\\ncontract MemoryInteractor {\\n\\n    uint256 rwIndex; // read write index\\n    uint64[] rwPositions; // read write positions\\n    bytes8[] rwValues; // read write values\\n    bool[] isRead; // true if access is read, false if its write\\n\\n    function initializeMemory(\\n        uint64[] memory _rwPositions,\\n        bytes8[] memory _rwValues,\\n        bool[] memory _isRead\\n    ) virtual public\\n    {\\n        require(_rwPositions.length == _rwValues.length, \\\"Read/write arrays are not the same size\\\");\\n        require(_rwPositions.length == _isRead.length, \\\"Read/write arrays are not the same size\\\");\\n        rwIndex = 0;\\n        rwPositions = _rwPositions;\\n        rwValues = _rwValues;\\n        isRead = _isRead;\\n    }\\n\\n    function getRWIndex() public view returns (uint256) {\\n        return rwIndex;\\n    }\\n    // Reads\\n    function readX(uint64 registerIndex) public returns (uint64) {\\n        return memoryRead(registerIndex * 8);\\n    }\\n\\n    function readClintMtimecmp() public returns (uint64) {\\n        return memoryRead(CLINT.getClintMtimecmp());\\n    }\\n\\n    function readHtifFromhost() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifFromHostAddr());\\n    }\\n\\n    function readHtifTohost() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifToHostAddr());\\n    }\\n\\n    function readHtifIYield() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifIYieldAddr());\\n    }\\n\\n    function readMie() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMie());\\n    }\\n\\n    function readMcause() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcause());\\n    }\\n\\n    function readMinstret() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMinstret());\\n    }\\n\\n    function readMcycle() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcycle());\\n    }\\n\\n    function readMcounteren() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcounteren());\\n    }\\n\\n    function readMepc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMepc());\\n    }\\n\\n    function readMip() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMip());\\n    }\\n\\n    function readMtval() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMtval());\\n    }\\n\\n    function readMvendorid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMvendorid());\\n    }\\n\\n    function readMarchid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMarchid());\\n    }\\n\\n    function readMimpid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMimpid());\\n    }\\n\\n    function readMscratch() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMscratch());\\n    }\\n\\n    function readSatp() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSatp());\\n    }\\n\\n    function readScause() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getScause());\\n    }\\n\\n    function readSepc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSepc());\\n    }\\n\\n    function readScounteren() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getScounteren());\\n    }\\n\\n    function readStval() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getStval());\\n    }\\n\\n    function readMideleg() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMideleg());\\n    }\\n\\n    function readMedeleg() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMedeleg());\\n    }\\n\\n    function readMtvec() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMtvec());\\n    }\\n\\n    function readIlrsc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getIlrsc());\\n    }\\n\\n    function readPc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getPc());\\n    }\\n\\n    function readSscratch() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSscratch());\\n    }\\n\\n    function readStvec() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getStvec());\\n    }\\n\\n    function readMstatus() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMstatus());\\n    }\\n\\n    function readMisa() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMisa());\\n    }\\n\\n    function readIflags() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getIflags());\\n    }\\n\\n    function readIflagsPrv() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsPrvMask()) >> RiscVConstants.getIflagsPrvShift();\\n    }\\n\\n    function readIflagsH() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsHMask()) >> RiscVConstants.getIflagsHShift();\\n    }\\n\\n    function readIflagsY() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsYMask()) >> RiscVConstants.getIflagsYShift();\\n    }\\n\\n    function readMemory(uint64 paddr, uint64 wordSize) public returns (uint64) {\\n        // get relative address from unaligned paddr\\n        uint64 closestStartAddr = paddr & uint64(~7);\\n        uint64 relAddr = paddr - closestStartAddr;\\n\\n        // value just like its on MM, without endianess swap\\n        uint64 val = pureMemoryRead(closestStartAddr);\\n\\n        // mask to clean a piece of the value that was on memory\\n        uint64 valueMask = BitsManipulationLibrary.uint64SwapEndian(((uint64(2) ** wordSize) - 1) << relAddr*8);\\n        val = BitsManipulationLibrary.uint64SwapEndian(val & valueMask) >> relAddr*8;\\n        return val;\\n    }\\n\\n    // Sets\\n    function setPriv(uint64 newPriv) public {\\n        writeIflagsPrv(newPriv);\\n        writeIlrsc(uint64(-1)); // invalidate reserved address\\n    }\\n\\n    function setIflagsI(bool idle) public {\\n        uint64 iflags = readIflags();\\n\\n        if (idle) {\\n            iflags = (iflags | RiscVConstants.getIflagsIMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsIMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function setMip(uint64 mask) public {\\n        uint64 mip = readMip();\\n        mip |= mask;\\n\\n        writeMip(mip);\\n\\n        setIflagsI(false);\\n    }\\n\\n    function resetMip(uint64 mask) public {\\n        uint64 mip = readMip();\\n        mip &= ~mask;\\n        writeMip(mip);\\n    }\\n\\n    // Writes\\n    function writeMie(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMie(), value);\\n    }\\n\\n    function writeStvec(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getStvec(), value);\\n    }\\n\\n    function writeSscratch(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSscratch(), value);\\n    }\\n\\n    function writeMip(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMip(), value);\\n    }\\n\\n    function writeSatp(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSatp(), value);\\n    }\\n\\n    function writeMedeleg(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMedeleg(), value);\\n    }\\n\\n    function writeMideleg(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMideleg(), value);\\n    }\\n\\n    function writeMtvec(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMtvec(), value);\\n    }\\n\\n    function writeMcounteren(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcounteren(), value);\\n    }\\n\\n    function writeMcycle(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcycle(), value);\\n    }\\n\\n    function writeMinstret(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMinstret(), value);\\n    }\\n\\n    function writeMscratch(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMscratch(), value);\\n    }\\n\\n    function writeScounteren(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getScounteren(), value);\\n    }\\n\\n    function writeScause(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getScause(), value);\\n    }\\n\\n    function writeSepc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSepc(), value);\\n    }\\n\\n    function writeStval(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getStval(), value);\\n    }\\n\\n    function writeMstatus(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMstatus(), value);\\n    }\\n\\n    function writeMcause(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcause(), value);\\n    }\\n\\n    function writeMepc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMepc(), value);\\n    }\\n\\n    function writeMtval(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMtval(), value);\\n    }\\n\\n    function writePc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getPc(), value);\\n    }\\n\\n    function writeIlrsc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getIlrsc(), value);\\n    }\\n\\n    function writeClintMtimecmp(uint64 value) public {\\n        memoryWrite(CLINT.getClintMtimecmp(), value);\\n    }\\n\\n    function writeHtifFromhost(uint64 value) public {\\n        memoryWrite(HTIF.getHtifFromHostAddr(), value);\\n    }\\n\\n    function writeHtifTohost(uint64 value) public {\\n        memoryWrite(HTIF.getHtifToHostAddr(), value);\\n    }\\n\\n    function setIflagsH(bool halt) public {\\n        uint64 iflags = readIflags();\\n\\n        if (halt) {\\n            iflags = (iflags | RiscVConstants.getIflagsHMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsHMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function setIflagsY(bool isYield) public {\\n        uint64 iflags = readIflags();\\n\\n        if (isYield) {\\n            iflags = (iflags | RiscVConstants.getIflagsYMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsYMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function writeIflagsPrv(uint64 newPriv) public {\\n        uint64 iflags = readIflags();\\n\\n        // Clears bits 3 and 2 of iflags and use or to set new value\\n        iflags = (iflags & (~RiscVConstants.getIflagsPrvMask())) | (newPriv << RiscVConstants.getIflagsPrvShift());\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function writeMemory(\\n        uint64 paddr,\\n        uint64 value,\\n        uint64 wordSize\\n    ) public\\n    {\\n        uint64 numberOfBytes = wordSize / 8;\\n\\n        if (numberOfBytes == 8) {\\n            memoryWrite(paddr, value);\\n        } else {\\n            // get relative address from unaligned paddr\\n            uint64 closestStartAddr = paddr & uint64(~7);\\n            uint64 relAddr = paddr - closestStartAddr;\\n\\n            // oldvalue just like its on MM, without endianess swap\\n            uint64 oldVal = pureMemoryRead(closestStartAddr);\\n\\n            // Mask to clean a piece of the value that was on memory\\n            uint64 valueMask = BitsManipulationLibrary.uint64SwapEndian(((uint64(2) ** wordSize) - 1) << relAddr*8);\\n\\n            // value is big endian, need to swap before further operation\\n            uint64 valueSwap = BitsManipulationLibrary.uint64SwapEndian(value & ((uint64(2) ** wordSize) - 1));\\n\\n            uint64 newvalue = ((oldVal & ~valueMask) | (valueSwap >> relAddr*8));\\n\\n            newvalue = BitsManipulationLibrary.uint64SwapEndian(newvalue);\\n            memoryWrite(closestStartAddr, newvalue);\\n        }\\n    }\\n\\n    function writeX(uint64 registerindex, uint64 value) public {\\n        memoryWrite(registerindex * 8, value);\\n    }\\n\\n    // Internal functions\\n    function memoryRead(uint64 _readAddress) public returns (uint64) {\\n        return BitsManipulationLibrary.uint64SwapEndian(\\n            uint64(memoryAccessManager(_readAddress, true))\\n        );\\n    }\\n\\n    function memoryWrite(uint64 _writeAddress, uint64 _value) virtual public {\\n        bytes8 bytesvalue = bytes8(BitsManipulationLibrary.uint64SwapEndian(_value));\\n        require(memoryAccessManager(_writeAddress, false) == bytesvalue, \\\"Written value does not match\\\");\\n    }\\n\\n    // Memory Write without endianess swap\\n    function pureMemoryWrite(uint64 _writeAddress, uint64 _value) virtual internal {\\n        require(\\n            memoryAccessManager(_writeAddress, false) == bytes8(_value),\\n            \\\"Written value does not match\\\"\\n        );\\n    }\\n\\n    // Memory Read without endianess swap\\n    function pureMemoryRead(uint64 _readAddress) internal returns (uint64) {\\n        return uint64(memoryAccessManager(_readAddress, true));\\n    }\\n\\n   // Private functions\\n\\n    // takes care of read/write access\\n    function memoryAccessManager(uint64 _address, bool _accessIsRead) internal virtual returns (bytes8) {\\n        require(isRead[rwIndex] == _accessIsRead, \\\"Access was not the correct type\\\");\\n\\n        uint64 position = rwPositions[rwIndex];\\n        bytes8 value = rwValues[rwIndex];\\n        rwIndex++;\\n\\n        require((position & 7) == 0, \\\"Position is not aligned\\\");\\n        require(position == _address, \\\"Position and read address do not match\\\");\\n\\n        return value;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x172ace0eab16d875b5dc342bf9fd15aeca8a493a4e7b0ab6b1667ae22361e78f\",\"license\":\"Apache-2.0\"},\"contracts/RealTimeClock.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n/// @title RealTimeClock\\npragma solidity ^0.7.0;\\n\\n/// @title RealTimeClock\\n/// @author Felipe Argento\\n/// @notice Real Time clock simulator\\nlibrary RealTimeClock {\\n    uint64 constant RTC_FREQ_DIV = 100;\\n    \\n    /// @notice Converts from cycle count to time count\\n    /// @param cycle Cycle count\\n    /// @return Time count\\n    function rtcCycleToTime(uint64 cycle) public pure returns (uint64) {\\n        return cycle / RTC_FREQ_DIV;\\n    }\\n\\n    /// @notice Converts from time count to cycle count\\n    /// @param  time Time count\\n    /// @return Cycle count\\n    function rtcTimeToCycle(uint64 time) public pure returns (uint64) {\\n        return time * RTC_FREQ_DIV;\\n    }\\n}\\n\",\"keccak256\":\"0x07a038d80a3f50c9cb153f63ff8d251a5704a2cd1c74863c9f5aeeb0aee247fd\",\"license\":\"Apache-2.0\"},\"contracts/RiscVConstants.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title RiscVConstants\\n/// @author Felipe Argento\\n/// @notice Defines getters for important constants\\nlibrary RiscVConstants {\\n    //iflags shifts\\n    function getIflagsHShift()  public pure returns(uint64) {return 0;}\\n    function getIflagsYShift()  public pure returns(uint64) {return 1;}\\n    function getIflagsIShift()  public pure returns(uint64) {return 2;}\\n    function getIflagsPrvShift()  public pure returns(uint64) {return 3;}\\n\\n    //iflags masks\\n    function getIflagsHMask()  public pure returns(uint64) {return uint64(1) << getIflagsHShift();}\\n    function getIflagsYMask()  public pure returns(uint64) {return uint64(1) << getIflagsYShift();}\\n    function getIflagsIMask()  public pure returns(uint64) {return uint64(1) << getIflagsIShift();}\\n    function getIflagsPrvMask()  public pure returns(uint64) {return uint64(3) << getIflagsPrvShift();}\\n\\n    //general purpose\\n    function getXlen() public pure returns(uint64) {return 64;}\\n    function getMxl()  public pure returns(uint64) {return 2;}\\n\\n    //privilege levels\\n    function getPrvU() public pure returns(uint64) {return 0;}\\n    function getPrvS() public pure returns(uint64) {return 1;}\\n    function getPrvH() public pure returns(uint64) {return 2;}\\n    function getPrvM() public pure returns(uint64) {return 3;}\\n\\n    //mstatus shifts\\n    function getMstatusUieShift()  public pure returns(uint64) {return 0;}\\n    function getMstatusSieShift()  public pure returns(uint64) {return 1;}\\n    function getMstatusHieShift()  public pure returns(uint64) {return 2;}\\n    function getMstatusMieShift()  public pure returns(uint64) {return 3;}\\n    function getMstatusUpieShift() public pure returns(uint64) {return 4;}\\n    function getMstatusSpieShift() public pure returns(uint64) {return 5;}\\n    function getMstatusMpieShift() public pure returns(uint64) {return 7;}\\n    function getMstatusSppShift()  public pure returns(uint64) {return 8;}\\n    function getMstatusMppShift()  public pure returns(uint64) {return 11;}\\n    function getMstatusFsShift()   public pure returns(uint64) {return 13;}\\n\\n    function getMstatusXsShift()   public pure returns(uint64) {return 15;}\\n    function getMstatusMprvShift() public pure returns(uint64) {return 17;}\\n    function getMstatusSumShift()  public pure returns(uint64) {return 18;}\\n    function getMstatusMxrShift()  public pure returns(uint64) {return 19;}\\n    function getMstatusTvmShift()  public pure returns(uint64) {return 20;}\\n    function getMstatusTwShift()   public pure returns(uint64) {return 21;}\\n    function getMstatusTsrShift()  public pure returns(uint64) {return 22;}\\n\\n\\n    function getMstatusUxlShift()  public pure returns(uint64) {return 32;}\\n    function getMstatusSxlShift()  public pure returns(uint64) {return 34;}\\n\\n    function getMstatusSdShift()   public pure returns(uint64) {return getXlen() - 1;}\\n\\n    //mstatus masks\\n    function getMstatusUieMask()  public pure returns(uint64) {return (uint64(1) << getMstatusUieShift());}\\n    function getMstatusSieMask()  public pure returns(uint64) {return uint64(1) << getMstatusSieShift();}\\n    function getMstatusMieMask()  public pure returns(uint64) {return uint64(1) << getMstatusMieShift();}\\n    function getMstatusUpieMask() public pure returns(uint64) {return uint64(1) << getMstatusUpieShift();}\\n    function getMstatusSpieMask() public pure returns(uint64) {return uint64(1) << getMstatusSpieShift();}\\n    function getMstatusMpieMask() public pure returns(uint64) {return uint64(1) << getMstatusMpieShift();}\\n    function getMstatusSppMask()  public pure returns(uint64) {return uint64(1) << getMstatusSppShift();}\\n    function getMstatusMppMask()  public pure returns(uint64) {return uint64(3) << getMstatusMppShift();}\\n    function getMstatusFsMask()   public pure returns(uint64) {return uint64(3) << getMstatusFsShift();}\\n    function getMstatusXsMask()   public pure returns(uint64) {return uint64(3) << getMstatusXsShift();}\\n    function getMstatusMprvMask() public pure returns(uint64) {return uint64(1) << getMstatusMprvShift();}\\n    function getMstatusSumMask()  public pure returns(uint64) {return uint64(1) << getMstatusSumShift();}\\n    function getMstatusMxrMask()  public pure returns(uint64) {return uint64(1) << getMstatusMxrShift();}\\n    function getMstatusTvmMask()  public pure returns(uint64) {return uint64(1) << getMstatusTvmShift();}\\n    function getMstatusTwMask()   public pure returns(uint64) {return uint64(1) << getMstatusTwShift();}\\n    function getMstatusTsrMask()  public pure returns(uint64) {return uint64(1) << getMstatusTsrShift();}\\n\\n    function getMstatusUxlMask()  public pure returns(uint64) {return uint64(3) << getMstatusUxlShift();}\\n    function getMstatusSxlMask()  public pure returns(uint64) {return uint64(3) << getMstatusSxlShift();}\\n    function getMstatusSdMask()   public pure returns(uint64) {return uint64(1) << getMstatusSdShift();}\\n\\n    // mstatus read/writes\\n    function getMstatusWMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusMieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusMpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusMppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusMprvMask() |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusTvmMask()  |\\n            getMstatusTwMask()   |\\n            getMstatusTsrMask()\\n        );\\n    }\\n\\n    function getMstatusRMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusMieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusMpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusMppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusMprvMask() |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusTvmMask()  |\\n            getMstatusTwMask()   |\\n            getMstatusTsrMask()  |\\n            getMstatusUxlMask()  |\\n            getMstatusSxlMask()  |\\n            getMstatusSdMask()\\n        );\\n    }\\n\\n    // sstatus read/writes\\n    function getSstatusWMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()\\n        );\\n    }\\n\\n    function getSstatusRMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusUxlMask()  |\\n            getMstatusSdMask()\\n        );\\n    }\\n\\n    // mcause for exceptions\\n    function getMcauseInsnAddressMisaligned() public pure returns(uint64) {return 0x0;} ///< instruction address misaligned\\n    function getMcauseInsnAccessFault() public pure returns(uint64) {return 0x1;} ///< instruction access fault\\n    function getMcauseIllegalInsn() public pure returns(uint64) {return 0x2;} ///< illegal instruction\\n    function getMcauseBreakpoint() public pure returns(uint64) {return 0x3;} ///< breakpoint\\n    function getMcauseLoadAddressMisaligned() public pure returns(uint64) {return 0x4;} ///< load address misaligned\\n    function getMcauseLoadAccessFault() public pure returns(uint64) {return 0x5;} ///< load access fault\\n    function getMcauseStoreAmoAddressMisaligned() public pure returns(uint64) {return 0x6;} ///< store/amo address misaligned\\n    function getMcauseStoreAmoAccessFault() public pure returns(uint64) {return 0x7;} ///< store/amo access fault\\n    ///< environment call (+0: from u-mode, +1: from s-mode, +3: from m-mode)\\n    function getMcauseEcallBase() public pure returns(uint64) { return 0x8;}\\n    function getMcauseFetchPageFault() public pure returns(uint64) {return 0xc;} ///< instruction page fault\\n    function getMcauseLoadPageFault() public pure returns(uint64) {return 0xd;} ///< load page fault\\n    function getMcauseStoreAmoPageFault() public pure returns(uint64) {return 0xf;} ///< store/amo page fault\\n\\n    function getMcauseInterruptFlag() public pure returns(uint64) {return uint64(1) << (getXlen() - 1);} ///< interrupt flag\\n\\n    // mcounteren constants\\n    function getMcounterenCyShift() public pure returns(uint64) {return 0;}\\n    function getMcounterenTmShift() public pure returns(uint64) {return 1;}\\n    function getMcounterenIrShift() public pure returns(uint64) {return 2;}\\n\\n    function getMcounterenCyMask() public pure returns(uint64) {return uint64(1) << getMcounterenCyShift();}\\n    function getMcounterenTmMask() public pure returns(uint64) {return uint64(1) << getMcounterenTmShift();}\\n    function getMcounterenIrMask() public pure returns(uint64) {return uint64(1) << getMcounterenIrShift();}\\n\\n    function getMcounterenRwMask() public pure returns(uint64) {return getMcounterenCyMask() | getMcounterenTmMask() | getMcounterenIrMask();}\\n    function getScounterenRwMask() public pure returns(uint64) {return getMcounterenRwMask();}\\n\\n    //paging constants\\n    function getPgShift() public pure returns(uint64) {return 12;}\\n    function getPgMask()  public pure returns(uint64) {((uint64(1) << getPgShift()) - 1);}\\n\\n    function getPteVMask() public pure returns(uint64) {return (1 << 0);}\\n    function getPteUMask() public pure returns(uint64) {return (1 << 4);}\\n    function getPteAMask() public pure returns(uint64) {return (1 << 6);}\\n    function getPteDMask() public pure returns(uint64) {return (1 << 7);}\\n\\n    function getPteXwrReadShift() public pure returns(uint64) {return 0;}\\n    function getPteXwrWriteShift() public pure returns(uint64) {return 1;}\\n    function getPteXwrCodeShift() public pure returns(uint64) {return 2;}\\n\\n    // page masks\\n    function getPageNumberShift() public pure returns(uint64) {return 12;}\\n\\n    function getPageOffsetMask() public pure returns(uint64) {return ((uint64(1) << getPageNumberShift()) - 1);}\\n\\n    // mip shifts:\\n    function getMipUsipShift() public pure returns(uint64) {return 0;}\\n    function getMipSsipShift() public pure returns(uint64) {return 1;}\\n    function getMipMsipShift() public pure returns(uint64) {return 3;}\\n    function getMipUtipShift() public pure returns(uint64) {return 4;}\\n    function getMipStipShift() public pure returns(uint64) {return 5;}\\n    function getMipMtipShift() public pure returns(uint64) {return 7;}\\n    function getMipUeipShift() public pure returns(uint64) {return 8;}\\n    function getMipSeipShift() public pure returns(uint64) {return 9;}\\n    function getMipMeipShift() public pure returns(uint64) {return 11;}\\n\\n    function getMipUsipMask() public pure returns(uint64) {return uint64(1) << getMipUsipShift();}\\n    function getMipSsipMask() public pure returns(uint64) {return uint64(1) << getMipSsipShift();}\\n    function getMipMsipMask() public pure returns(uint64) {return uint64(1) << getMipMsipShift();}\\n    function getMipUtipMask() public pure returns(uint64) {return uint64(1) << getMipUtipShift();}\\n    function getMipStipMask() public pure returns(uint64) {return uint64(1) << getMipStipShift();}\\n    function getMipMtipMask() public pure returns(uint64) {return uint64(1) << getMipMtipShift();}\\n    function getMipUeipMask() public pure returns(uint64) {return uint64(1) << getMipUeipShift();}\\n    function getMipSeipMask() public pure returns(uint64) {return uint64(1) << getMipSeipShift();}\\n    function getMipMeipMask() public pure returns(uint64) {return uint64(1) << getMipMeipShift();}\\n}\\n\",\"keccak256\":\"0xfd9070a43036eb37831d90fd3770640225fe8fd31e0dbe93034b247933b9a9c1\",\"license\":\"Apache-2.0\"},\"contracts/ShadowAddresses.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\n\\n/// @title ShadowAddresses\\n/// @author Felipe Argento\\n/// @notice Defines the processor state. Memory-mapped to the lowest 512 bytes in pm\\n/// @dev Defined on Cartesi techpaper version 1.02 - Section 3 - table 2 \\n/// Source: https://cartesi.io/cartesi_whitepaper.pdf \\nlibrary ShadowAddresses {\\n    uint64 constant PC         = 0x100;\\n    uint64 constant MVENDORID  = 0x108;\\n    uint64 constant MARCHID    = 0x110;\\n    uint64 constant MIMPID     = 0x118;\\n    uint64 constant MCYCLE     = 0x120;\\n    uint64 constant MINSTRET   = 0x128;\\n    uint64 constant MSTATUS    = 0x130;\\n    uint64 constant MTVEC      = 0x138;\\n    uint64 constant MSCRATCH   = 0x140;\\n    uint64 constant MEPC       = 0x148;\\n    uint64 constant MCAUSE     = 0x150;\\n    uint64 constant MTVAL      = 0x158;\\n    uint64 constant MISA       = 0x160;\\n    uint64 constant MIE        = 0x168;\\n    uint64 constant MIP        = 0x170;\\n    uint64 constant MEDELEG    = 0x178;\\n    uint64 constant MIDELEG    = 0x180;\\n    uint64 constant MCOUNTEREN = 0x188;\\n    uint64 constant STVEC      = 0x190;\\n    uint64 constant SSCRATCH   = 0x198;\\n    uint64 constant SEPC       = 0x1a0;\\n    uint64 constant SCAUSE     = 0x1a8;\\n    uint64 constant STVAL      = 0x1b0;\\n    uint64 constant SATP       = 0x1b8;\\n    uint64 constant SCOUNTEREN = 0x1c0;\\n    uint64 constant ILRSC      = 0x1c8;\\n    uint64 constant IFLAGS     = 0x1d0;\\n\\n    //getters - contracts cant access constants directly\\n    function getPc()         public pure returns(uint64) {return PC;}\\n    function getMvendorid()  public pure returns(uint64) {return MVENDORID;}\\n    function getMarchid()    public pure returns(uint64) {return MARCHID;}\\n    function getMimpid()     public pure returns(uint64) {return MIMPID;}\\n    function getMcycle()     public pure returns(uint64) {return MCYCLE;}\\n    function getMinstret()   public pure returns(uint64) {return MINSTRET;}\\n    function getMstatus()    public pure returns(uint64) {return MSTATUS;}\\n    function getMtvec()      public pure returns(uint64) {return MTVEC;}\\n    function getMscratch()   public pure returns(uint64) {return MSCRATCH;}\\n    function getMepc()       public pure returns(uint64) {return MEPC;}\\n    function getMcause()     public pure returns(uint64) {return MCAUSE;}\\n    function getMtval()      public pure returns(uint64) {return MTVAL;}\\n    function getMisa()       public pure returns(uint64) {return MISA;}\\n    function getMie()        public pure returns(uint64) {return MIE;}\\n    function getMip()        public pure returns(uint64) {return MIP;}\\n    function getMedeleg()    public pure returns(uint64) {return MEDELEG;}\\n    function getMideleg()    public pure returns(uint64) {return MIDELEG;}\\n    function getMcounteren() public pure returns(uint64) {return MCOUNTEREN;}\\n    function getStvec()      public pure returns(uint64) {return STVEC;}\\n    function getSscratch()   public pure returns(uint64) {return SSCRATCH;}\\n    function getSepc()       public pure returns(uint64) {return SEPC;}\\n    function getScause()     public pure returns(uint64) {return SCAUSE;}\\n    function getStval()      public pure returns(uint64) {return STVAL;}\\n    function getSatp()       public pure returns(uint64) {return SATP;}\\n    function getScounteren() public pure returns(uint64) {return SCOUNTEREN;}\\n    function getIlrsc()      public pure returns(uint64) {return ILRSC;}\\n    function getIflags()     public pure returns(uint64) {return IFLAGS;}\\n}\\n\",\"keccak256\":\"0xbfd187bab76a2802de777406cdddc9fe0cbf79ab8cb6f76075da7db664a9e9ae\",\"license\":\"Apache-2.0\"},\"contracts/TestMemoryInteractor.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\nimport \\\"@cartesi/util/contracts/BitsManipulationLibrary.sol\\\";\\n\\n\\n/// @title Test Memory Interactor\\n/// @author Felipe\\n/// @notice A mock memory interactor for running test_ram.py\\n/// @dev This should never be deployed to Main net.\\n/// @dev This contract is unsafe.\\ncontract TestMemoryInteractor is MemoryInteractor {\\n  // the provider will fill the memory for the client to read and write\\n  // memory starts with hash and all values that are inserted are first verified\\n  // then client can read inserted values and write some more\\n  // finally the provider has to update the hash to account for writes\\n\\n   // ram map\\n    mapping(uint64 => bytes8) ram;\\n    event HTIFExit(uint256 _index, uint64 _exitCode, bool _halt);\\n\\n    function initializeMemory(\\n        uint64[] memory _rwPositions,\\n        bytes8[] memory _rwValues,\\n        bool[] memory _isRead\\n    ) override public\\n    {\\n    }\\n\\n    function memoryWrite(uint64 _writeAddress, uint64 _value) override public {\\n        bytes8 bytesvalue = bytes8(BitsManipulationLibrary.uint64SwapEndian(_value));\\n\\n        ram[_writeAddress] = bytes8(bytesvalue);\\n    }\\n\\n    // Memory Write without endianess swap\\n    function pureMemoryWrite(uint64 _writeAddress, uint64 _value) override internal {\\n\\n        ram[_writeAddress] = bytes8(_value);\\n    }\\n\\n    // Memory Write without endianess swap\\n    function externalPureMemoryWrite(uint64 _writeAddress, bytes8 _value) public {\\n\\n        ram[_writeAddress] = _value;\\n    }\\n\\n    // Private functions\\n\\n    // takes care of read/write access\\n    function memoryAccessManager(uint64 _address, bool) internal override returns (bytes8) {\\n        require((_address & 7) == 0, \\\"Position is not aligned\\\");\\n\\n        return ram[_address];\\n    }\\n\\n    /// @notice Perform a read in HTIF to get the arbitrary exit code\\n    function htifExit() public\\n        returns (uint64)\\n    {\\n        uint64 val = uint64(ram[0x40008000]);\\n        bool halt = false;\\n\\n        val = BitsManipulationLibrary.uint64SwapEndian(val);\\n\\n        uint64 bit0 = val & 1;\\n        uint64 payload = val << 16 >> 17;\\n\\n        halt = (bit0 == 1);\\n\\n        emit HTIFExit(rwIndex, payload, halt);\\n        return payload;\\n    }\\n}\\n\",\"keccak256\":\"0xb0019a792b9ef850d670a654226c9fe316c685d0985e6447027b819215161127\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 5785,
        "contract": "contracts/TestMemoryInteractor.sol:TestMemoryInteractor",
        "label": "rwIndex",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5788,
        "contract": "contracts/TestMemoryInteractor.sol:TestMemoryInteractor",
        "label": "rwPositions",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint64)dyn_storage"
      },
      {
        "astId": 5791,
        "contract": "contracts/TestMemoryInteractor.sol:TestMemoryInteractor",
        "label": "rwValues",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_bytes8)dyn_storage"
      },
      {
        "astId": 5794,
        "contract": "contracts/TestMemoryInteractor.sol:TestMemoryInteractor",
        "label": "isRead",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_bool)dyn_storage"
      },
      {
        "astId": 14400,
        "contract": "contracts/TestMemoryInteractor.sol:TestMemoryInteractor",
        "label": "ram",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint64,t_bytes8)"
      }
    ],
    "types": {
      "t_array(t_bool)dyn_storage": {
        "base": "t_bool",
        "encoding": "dynamic_array",
        "label": "bool[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes8)dyn_storage": {
        "base": "t_bytes8",
        "encoding": "dynamic_array",
        "label": "bytes8[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes8": {
        "encoding": "inplace",
        "label": "bytes8",
        "numberOfBytes": "8"
      },
      "t_mapping(t_uint64,t_bytes8)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes8)",
        "numberOfBytes": "32",
        "value": "t_bytes8"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "htifExit()": {
        "notice": "Perform a read in HTIF to get the arbitrary exit code"
      }
    },
    "notice": "A mock memory interactor for running test_ram.py",
    "version": 1
  }
}