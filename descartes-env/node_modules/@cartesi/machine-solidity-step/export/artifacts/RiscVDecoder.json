{
  "contractName": "RiscVDecoder",
  "sourceName": "contracts/RiscVDecoder.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnBImm",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnFunct3",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnFunct3Funct5",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnFunct3Funct7",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnFunct6",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnFunct7",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnIImm",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnIUimm",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnJImm",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnOpcode",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnRd",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnRs1",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnRs2",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnSImm",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "insn",
          "type": "uint32"
        }
      ],
      "name": "insnUImm",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x6105c4610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100ff5760003560e01c8063b8464b83116100a1578063e91d6a9411610070578063e91d6a94146102b5578063ee9fd035146102d8578063efdbf49a146102fb578063f98780721461031e576100ff565b8063b8464b8314610229578063c920257b1461024c578063dff959bd1461026f578063e01eb62014610292576100ff565b806353c0a143116100dd57806353c0a1431461019d5780635c53fe57146101c05780636d0ba6fa146101e35780637b80452414610206576100ff565b80631863d40c1461010457806322772c841461013e578063287b44bf14610161575b600080fd5b6101276004803603602081101561011a57600080fd5b503563ffffffff16610341565b6040805160039290920b8252519081900360200190f35b6101276004803603602081101561015457600080fd5b503563ffffffff1661034a565b6101846004803603602081101561017757600080fd5b503563ffffffff16610353565b6040805163ffffffff9092168252519081900360200190f35b610184600480360360208110156101b357600080fd5b503563ffffffff1661035c565b610184600480360360208110156101d657600080fd5b503563ffffffff16610365565b610184600480360360208110156101f957600080fd5b503563ffffffff1661036b565b6101846004803603602081101561021c57600080fd5b503563ffffffff16610374565b6101276004803603602081101561023f57600080fd5b503563ffffffff1661037d565b6101846004803603602081101561026257600080fd5b503563ffffffff16610423565b6101846004803603602081101561028557600080fd5b503563ffffffff16610439565b610127600480360360208110156102a857600080fd5b503563ffffffff16610442565b610127600480360360208110156102cb57600080fd5b503563ffffffff166104c8565b610184600480360360208110156102ee57600080fd5b503563ffffffff16610566565b6101846004803603602081101561031157600080fd5b503563ffffffff1661057b565b6101846004803603602081101561033457600080fd5b503563ffffffff16610584565b63fffff0001690565b60030b60141d90565b600f1c601f1690565b60191c607f1690565b607f1690565b601a1c603f1690565b60071c601f1690565b6040805163f69c389b60e01b8152610fe0601484901c16601f600785901c1617600381900b6004830152600c602483015291516000929173__$184ef4a65c614d890e6225597d290b0ed9$__9163f69c389b91604480820192602092909190829003018186803b1580156103f057600080fd5b505af4158015610404573d6000803e3d6000fd5b505050506040513d602081101561041a57600080fd5b50519392505050565b601981901c607f1660059190911c610380161790565b600c1c60071690565b6040805163f69c389b60e01b815262100000600b84901c166107fe601485901c1617610800600985901c1617620ff000841617600381900b60048301526015602483015291516000929173__$184ef4a65c614d890e6225597d290b0ed9$__9163f69c389b91604480820192602092909190829003018186803b1580156103f057600080fd5b60008060048363ffffffff16901b6108001660078463ffffffff16901c601e1660148563ffffffff16901c6107e01660138663ffffffff16901c61100016171717905073__$184ef4a65c614d890e6225597d290b0ed9$__63f69c389b82600d6040518363ffffffff1660e01b8152600401808360030b81526020018281526020019250505060206040518083038186803b1580156103f057600080fd5b601b81901c601f1660079190911c60e0161790565b60141c601f1690565b60141c610fff169056fea264697066735822122066242daf3a631ec35d14563ef0dfe9b1a7ffdf1b2678d2359f59ecbcae035c7864736f6c63430007040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100ff5760003560e01c8063b8464b83116100a1578063e91d6a9411610070578063e91d6a94146102b5578063ee9fd035146102d8578063efdbf49a146102fb578063f98780721461031e576100ff565b8063b8464b8314610229578063c920257b1461024c578063dff959bd1461026f578063e01eb62014610292576100ff565b806353c0a143116100dd57806353c0a1431461019d5780635c53fe57146101c05780636d0ba6fa146101e35780637b80452414610206576100ff565b80631863d40c1461010457806322772c841461013e578063287b44bf14610161575b600080fd5b6101276004803603602081101561011a57600080fd5b503563ffffffff16610341565b6040805160039290920b8252519081900360200190f35b6101276004803603602081101561015457600080fd5b503563ffffffff1661034a565b6101846004803603602081101561017757600080fd5b503563ffffffff16610353565b6040805163ffffffff9092168252519081900360200190f35b610184600480360360208110156101b357600080fd5b503563ffffffff1661035c565b610184600480360360208110156101d657600080fd5b503563ffffffff16610365565b610184600480360360208110156101f957600080fd5b503563ffffffff1661036b565b6101846004803603602081101561021c57600080fd5b503563ffffffff16610374565b6101276004803603602081101561023f57600080fd5b503563ffffffff1661037d565b6101846004803603602081101561026257600080fd5b503563ffffffff16610423565b6101846004803603602081101561028557600080fd5b503563ffffffff16610439565b610127600480360360208110156102a857600080fd5b503563ffffffff16610442565b610127600480360360208110156102cb57600080fd5b503563ffffffff166104c8565b610184600480360360208110156102ee57600080fd5b503563ffffffff16610566565b6101846004803603602081101561031157600080fd5b503563ffffffff1661057b565b6101846004803603602081101561033457600080fd5b503563ffffffff16610584565b63fffff0001690565b60030b60141d90565b600f1c601f1690565b60191c607f1690565b607f1690565b601a1c603f1690565b60071c601f1690565b6040805163f69c389b60e01b8152610fe0601484901c16601f600785901c1617600381900b6004830152600c602483015291516000929173__$184ef4a65c614d890e6225597d290b0ed9$__9163f69c389b91604480820192602092909190829003018186803b1580156103f057600080fd5b505af4158015610404573d6000803e3d6000fd5b505050506040513d602081101561041a57600080fd5b50519392505050565b601981901c607f1660059190911c610380161790565b600c1c60071690565b6040805163f69c389b60e01b815262100000600b84901c166107fe601485901c1617610800600985901c1617620ff000841617600381900b60048301526015602483015291516000929173__$184ef4a65c614d890e6225597d290b0ed9$__9163f69c389b91604480820192602092909190829003018186803b1580156103f057600080fd5b60008060048363ffffffff16901b6108001660078463ffffffff16901c601e1660148563ffffffff16901c6107e01660138663ffffffff16901c61100016171717905073__$184ef4a65c614d890e6225597d290b0ed9$__63f69c389b82600d6040518363ffffffff1660e01b8152600401808360030b81526020018281526020019250505060206040518083038186803b1580156103f057600080fd5b601b81901c601f1660079190911c60e0161790565b60141c601f1690565b60141c610fff169056fea264697066735822122066242daf3a631ec35d14563ef0dfe9b1a7ffdf1b2678d2359f59ecbcae035c7864736f6c63430007040033",
  "linkReferences": {
    "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
      "BitsManipulationLibrary": [
        {
          "length": 20,
          "start": 988
        },
        {
          "length": 20,
          "start": 1204
        },
        {
          "length": 20,
          "start": 1331
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
      "BitsManipulationLibrary": [
        {
          "length": 20,
          "start": 950
        },
        {
          "length": 20,
          "start": 1166
        },
        {
          "length": 20,
          "start": 1293
        }
      ]
    }
  },
  "devdoc": {
    "author": "Felipe Argento",
    "kind": "dev",
    "methods": {
      "insnBImm(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnFunct3(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnFunct3Funct5(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnFunct3Funct7(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnFunct6(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnFunct7(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnIImm(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnIUimm(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnJImm(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnOpcode(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnRd(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnRs1(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnRs2(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnSImm(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      },
      "insnUImm(uint32)": {
        "params": {
          "insn": "Instruction"
        }
      }
    },
    "title": "RiscVDecoder",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
          "BitsManipulationLibrary": [
            {
              "length": 20,
              "start": 988
            },
            {
              "length": 20,
              "start": 1204
            },
            {
              "length": 20,
              "start": 1331
            }
          ]
        }
      },
      "opcodes": "PUSH2 0x5C4 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB8464B83 GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xE91D6A94 GT PUSH2 0x70 JUMPI DUP1 PUSH4 0xE91D6A94 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xEE9FD035 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xEFDBF49A EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xF9878072 EQ PUSH2 0x31E JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0xB8464B83 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xC920257B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xDFF959BD EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xE01EB620 EQ PUSH2 0x292 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x53C0A143 GT PUSH2 0xDD JUMPI DUP1 PUSH4 0x53C0A143 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x5C53FE57 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x6D0BA6FA EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x7B804524 EQ PUSH2 0x206 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x1863D40C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x22772C84 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x287B44BF EQ PUSH2 0x161 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x34A JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x35C JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x365 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x36B JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x374 JUMP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x37D JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x423 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x439 JUMP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x442 JUMP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x566 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x57B JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x584 JUMP JUMPDEST PUSH4 0xFFFFF000 AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND PUSH1 0x14 SAR SWAP1 JUMP JUMPDEST PUSH1 0xF SHR PUSH1 0x1F AND SWAP1 JUMP JUMPDEST PUSH1 0x19 SHR PUSH1 0x7F AND SWAP1 JUMP JUMPDEST PUSH1 0x7F AND SWAP1 JUMP JUMPDEST PUSH1 0x1A SHR PUSH1 0x3F AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SHR PUSH1 0x1F AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xF69C389B PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFE0 PUSH1 0x14 DUP5 SWAP1 SHR AND PUSH1 0x1F PUSH1 0x7 DUP6 SWAP1 SHR AND OR PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xF69C389B SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x19 DUP2 SWAP1 SHR PUSH1 0x7F AND PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHR PUSH2 0x380 AND OR SWAP1 JUMP JUMPDEST PUSH1 0xC SHR PUSH1 0x7 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xF69C389B PUSH1 0xE0 SHL DUP2 MSTORE PUSH3 0x100000 PUSH1 0xB DUP5 SWAP1 SHR AND PUSH2 0x7FE PUSH1 0x14 DUP6 SWAP1 SHR AND OR PUSH2 0x800 PUSH1 0x9 DUP6 SWAP1 SHR AND OR PUSH3 0xFF000 DUP5 AND OR PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xF69C389B SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP4 PUSH4 0xFFFFFFFF AND SWAP1 SHL PUSH2 0x800 AND PUSH1 0x7 DUP5 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH1 0x1E AND PUSH1 0x14 DUP6 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH2 0x7E0 AND PUSH1 0x13 DUP7 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH2 0x1000 AND OR OR OR SWAP1 POP PUSH20 0x0 PUSH4 0xF69C389B DUP3 PUSH1 0xD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x3 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1B DUP2 SWAP1 SHR PUSH1 0x1F AND PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xE0 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x14 SHR PUSH1 0x1F AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SHR PUSH2 0xFFF AND SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x242DAF3A631EC3 0x5D EQ JUMP RETURNDATACOPY CREATE 0xDF 0xE9 0xB1 0xA7 SELFDESTRUCT 0xDF SHL 0x26 PUSH25 0xD2359F59ECBCAE035C7864736F6C6343000704003300000000 ",
      "sourceMap": "1025:3629:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {
        "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
          "BitsManipulationLibrary": [
            {
              "length": 20,
              "start": 950
            },
            {
              "length": 20,
              "start": 1166
            },
            {
              "length": 20,
              "start": 1293
            }
          ]
        }
      },
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB8464B83 GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xE91D6A94 GT PUSH2 0x70 JUMPI DUP1 PUSH4 0xE91D6A94 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xEE9FD035 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xEFDBF49A EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xF9878072 EQ PUSH2 0x31E JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0xB8464B83 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xC920257B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xDFF959BD EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xE01EB620 EQ PUSH2 0x292 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x53C0A143 GT PUSH2 0xDD JUMPI DUP1 PUSH4 0x53C0A143 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x5C53FE57 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x6D0BA6FA EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x7B804524 EQ PUSH2 0x206 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x1863D40C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x22772C84 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x287B44BF EQ PUSH2 0x161 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x34A JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x35C JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x365 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x36B JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x374 JUMP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x37D JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x423 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x439 JUMP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x442 JUMP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x566 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x57B JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x584 JUMP JUMPDEST PUSH4 0xFFFFF000 AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SIGNEXTEND PUSH1 0x14 SAR SWAP1 JUMP JUMPDEST PUSH1 0xF SHR PUSH1 0x1F AND SWAP1 JUMP JUMPDEST PUSH1 0x19 SHR PUSH1 0x7F AND SWAP1 JUMP JUMPDEST PUSH1 0x7F AND SWAP1 JUMP JUMPDEST PUSH1 0x1A SHR PUSH1 0x3F AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SHR PUSH1 0x1F AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xF69C389B PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFE0 PUSH1 0x14 DUP5 SWAP1 SHR AND PUSH1 0x1F PUSH1 0x7 DUP6 SWAP1 SHR AND OR PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xF69C389B SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x19 DUP2 SWAP1 SHR PUSH1 0x7F AND PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHR PUSH2 0x380 AND OR SWAP1 JUMP JUMPDEST PUSH1 0xC SHR PUSH1 0x7 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xF69C389B PUSH1 0xE0 SHL DUP2 MSTORE PUSH3 0x100000 PUSH1 0xB DUP5 SWAP1 SHR AND PUSH2 0x7FE PUSH1 0x14 DUP6 SWAP1 SHR AND OR PUSH2 0x800 PUSH1 0x9 DUP6 SWAP1 SHR AND OR PUSH3 0xFF000 DUP5 AND OR PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xF69C389B SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP4 PUSH4 0xFFFFFFFF AND SWAP1 SHL PUSH2 0x800 AND PUSH1 0x7 DUP5 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH1 0x1E AND PUSH1 0x14 DUP6 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH2 0x7E0 AND PUSH1 0x13 DUP7 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH2 0x1000 AND OR OR OR SWAP1 POP PUSH20 0x0 PUSH4 0xF69C389B DUP3 PUSH1 0xD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x3 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1B DUP2 SWAP1 SHR PUSH1 0x1F AND PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xE0 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x14 SHR PUSH1 0x1F AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SHR PUSH2 0xFFF AND SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x242DAF3A631EC3 0x5D EQ JUMP RETURNDATACOPY CREATE 0xDF 0xE9 0xB1 0xA7 SELFDESTRUCT 0xDF SHL 0x26 PUSH25 0xD2359F59ECBCAE035C7864736F6C6343000704003300000000 ",
      "sourceMap": "1025:3629:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2085:106;;;;;;;;;;;;;;;;-1:-1:-1;2085:106:14;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1685:99;;;;;;;;;;;;;;;;-1:-1:-1;1685:99:14;;;;:::i;1304:101::-;;;;;;;;;;;;;;;;-1:-1:-1;1304:101:14;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4353:105;;;;;;;;;;;;;;;;-1:-1:-1;4353:105:14;;;;:::i;3482:97::-;;;;;;;;;;;;;;;;-1:-1:-1;3482:97:14;;;;:::i;4547:105::-;;;;;;;;;;;;;;;;-1:-1:-1;4547:105:14;;;;:::i;1125:99::-;;;;;;;;;;;;;;;;-1:-1:-1;1125:99:14;;;;:::i;3175:218::-;;;;;;;;;;;;;;;;-1:-1:-1;3175:218:14;;;;:::i;3891:128::-;;;;;;;;;;;;;;;;-1:-1:-1;3891:128:14;;;;:::i;3668:105::-;;;;;;;;;;;;;;;;-1:-1:-1;3668:105:14;;;;:::i;2737:339::-;;;;;;;;;;;;;;;;-1:-1:-1;2737:339:14;;;;:::i;2290:348::-;;;;;;;;;;;;;;;;-1:-1:-1;2290:348:14;;;;:::i;4137:127::-;;;;;;;;;;;;;;;;-1:-1:-1;4137:127:14;;;;:::i;1485:101::-;;;;;;;;;;;;;;;;-1:-1:-1;1485:101:14;;;;:::i;1892:94::-;;;;;;;;;;;;;;;;-1:-1:-1;1892:94:14;;;;:::i;2085:106::-;2173:10;2166:17;;2085:106::o;1685:99::-;1760:17;;1775:2;1760:17;;1685:99::o;1304:101::-;1388:2;1380:10;1394:4;1379:19;;1304:101::o;4353:105::-;4441:2;4433:10;;;;4353:105::o;3482:97::-;3568:4;3561:11;;3482:97::o;4547:105::-;4635:2;4627:10;;;;4547:105::o;1125:99::-;1208:1;1200:9;1213:4;1199:18;;1125:99::o;3175:218::-;3335:51;;;-1:-1:-1;;;3335:51:14;;3262:31;3286:6;3262:31;;;;3312:4;3307:1;3299:9;;;3298:18;3261:56;3335:51;;;;;;;;3383:2;3335:51;;;;;;3226:5;;3261:56;3335:23;;:42;;:51;;;;;;;;;;;;;;;:23;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3335:51:14;;3175:218;-1:-1:-1;;;3175:218:14:o;3891:128::-;4009:2;4001:10;;;;;3986:1;3978:9;;;;3991:5;3977:19;3976:36;;3891:128::o;3668:105::-;3756:2;3748:10;3762:4;3747:19;;3668:105::o;2737:339::-;3018:51;;;-1:-1:-1;;;3018:51:14;;2860:7;2847;2838:17;;;2837:31;2906:5;2895:6;2886:16;;;2885:26;2836:76;2951:7;2938;2929:17;;;2928:31;2836:124;2983:7;2976:14;;2836:155;3018:51;;;;;;;;3066:2;3018:51;;;;;;2788:5;;2836:155;3018:23;;:42;;:51;;;;;;;;;;;;;;;:23;:51;;;;;;;;;;2290:348;2341:5;2358:9;2532:6;2523:4;:16;;;;2544:7;2522:30;2491:5;2482:4;:15;;;;2501:4;2481:24;2448:6;2439:4;:16;;;;2459:5;2438:26;2400:7;2391:4;:17;;;;2413:7;2390:31;2389:76;:117;:164;2358:205;;2580:23;:42;2623:3;2628:2;2580:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4137:127;4254:2;4246:10;;;;;4232:1;4224:9;;;;4237:4;4223:18;4222:35;;4137:127::o;1485:101::-;1569:2;1561:10;1575:4;1560:19;;1485:101::o;1892:94::-;1977:2;1969:10;;;;1892:94::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "295200",
        "executionCost": "362",
        "totalCost": "295562"
      },
      "external": {
        "insnBImm(uint32)": "infinite",
        "insnFunct3(uint32)": "315",
        "insnFunct3Funct5(uint32)": "322",
        "insnFunct3Funct7(uint32)": "323",
        "insnFunct6(uint32)": "315",
        "insnFunct7(uint32)": "271",
        "insnIImm(uint32)": "301",
        "insnIUimm(uint32)": "336",
        "insnJImm(uint32)": "infinite",
        "insnOpcode(uint32)": "287",
        "insnRd(uint32)": "337",
        "insnRs1(uint32)": "316",
        "insnRs2(uint32)": "314",
        "insnSImm(uint32)": "infinite",
        "insnUImm(uint32)": "271"
      }
    },
    "methodIdentifiers": {
      "insnBImm(uint32)": "e91d6a94",
      "insnFunct3(uint32)": "dff959bd",
      "insnFunct3Funct5(uint32)": "ee9fd035",
      "insnFunct3Funct7(uint32)": "c920257b",
      "insnFunct6(uint32)": "6d0ba6fa",
      "insnFunct7(uint32)": "53c0a143",
      "insnIImm(uint32)": "22772c84",
      "insnIUimm(uint32)": "f9878072",
      "insnJImm(uint32)": "e01eb620",
      "insnOpcode(uint32)": "5c53fe57",
      "insnRd(uint32)": "7b804524",
      "insnRs1(uint32)": "287b44bf",
      "insnRs2(uint32)": "efdbf49a",
      "insnSImm(uint32)": "b8464b83",
      "insnUImm(uint32)": "1863d40c"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnBImm\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnFunct3\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnFunct3Funct5\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnFunct3Funct7\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnFunct6\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnFunct7\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnIImm\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnIUimm\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnJImm\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnOpcode\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnRd\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnRs1\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnRs2\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnSImm\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"insn\",\"type\":\"uint32\"}],\"name\":\"insnUImm\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Felipe Argento\",\"kind\":\"dev\",\"methods\":{\"insnBImm(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnFunct3(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnFunct3Funct5(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnFunct3Funct7(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnFunct6(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnFunct7(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnIImm(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnIUimm(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnJImm(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnOpcode(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnRd(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnRs1(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnRs2(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnSImm(uint32)\":{\"params\":{\"insn\":\"Instruction\"}},\"insnUImm(uint32)\":{\"params\":{\"insn\":\"Instruction\"}}},\"title\":\"RiscVDecoder\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"insnBImm(uint32)\":{\"notice\":\"Get the B-type instruction's immediate value\"},\"insnFunct3(uint32)\":{\"notice\":\"Get the instruction's funct3 field\"},\"insnFunct3Funct5(uint32)\":{\"notice\":\"Get the concatenation of instruction's funct3 and funct5 fields\"},\"insnFunct3Funct7(uint32)\":{\"notice\":\"Get the concatenation of instruction's funct3 and funct7 fields\"},\"insnFunct6(uint32)\":{\"notice\":\"Get the instruction's funct6 field\"},\"insnFunct7(uint32)\":{\"notice\":\"Get the instruction's funct7 field\"},\"insnIImm(uint32)\":{\"notice\":\"Get the I-type instruction's immediate value\"},\"insnIUimm(uint32)\":{\"notice\":\"Get the I-type instruction's unsigned immediate value\"},\"insnJImm(uint32)\":{\"notice\":\"Get the J-type instruction's immediate value\"},\"insnOpcode(uint32)\":{\"notice\":\"Get the instruction's opcode field\"},\"insnRd(uint32)\":{\"notice\":\"Get the instruction's RD\"},\"insnRs1(uint32)\":{\"notice\":\"Get the instruction's RS1\"},\"insnRs2(uint32)\":{\"notice\":\"Get the instruction's RS2\"},\"insnSImm(uint32)\":{\"notice\":\"Get the S-type instruction's immediate value\"},\"insnUImm(uint32)\":{\"notice\":\"Get the U-type instruction's immediate value\"}},\"notice\":\"Contract responsible for decoding the riscv's instructions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RiscVDecoder.sol\":\"RiscVDecoder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/BitsManipulationLibrary.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title Bits Manipulation Library\\n/// @author Felipe Argento / Stephen Chen\\n/// @notice Implements bit manipulation helper functions\\nlibrary BitsManipulationLibrary {\\n\\n    /// @notice Sign extend a shorter signed value to the full int32\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function int32SignExtension(int32 number, uint32 wordSize)\\n    public pure returns(int32)\\n    {\\n        uint32 uNumber = uint32(number);\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint32 mask = ((uint32(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return int32(uNumber);\\n    }\\n\\n    /// @notice Sign extend a shorter signed value to the full uint64\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function uint64SignExtension(uint64 number, uint64 wordSize)\\n    public pure returns(uint64)\\n    {\\n        uint64 uNumber = number;\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint64 mask = ((uint64(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return uNumber;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 64 bytes\\n    /// @param num number to have bytes swapped\\n    function uint64SwapEndian(uint64 num) public pure returns(uint64) {\\n        uint64 output = ((num & 0x00000000000000ff) << 56)|\\n            ((num & 0x000000000000ff00) << 40)|\\n            ((num & 0x0000000000ff0000) << 24)|\\n            ((num & 0x00000000ff000000) << 8) |\\n            ((num & 0x000000ff00000000) >> 8) |\\n            ((num & 0x0000ff0000000000) >> 24)|\\n            ((num & 0x00ff000000000000) >> 40)|\\n            ((num & 0xff00000000000000) >> 56);\\n\\n        return output;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 32 bytes\\n    /// @param num number to have bytes swapped\\n    function uint32SwapEndian(uint32 num) public pure returns(uint32) {\\n        uint32 output = ((num >> 24) & 0xff) | ((num << 8) & 0xff0000) | ((num >> 8) & 0xff00) | ((num << 24) & 0xff000000);\\n        return output;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x95b97e0ae364fb91a3fdcf8132e7b61c745c23dd4e5beb980f396c05a69bbd08\",\"license\":\"Apache-2.0\"},\"contracts/RiscVDecoder.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n// @title RiscVDecoder\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/BitsManipulationLibrary.sol\\\";\\n\\n/// @title RiscVDecoder\\n/// @author Felipe Argento\\n/// @notice Contract responsible for decoding the riscv's instructions\\n//      It applies different bitwise operations and masks to reach\\n//      specific positions and use that positions to identify the\\n//      correct function to be executed\\nlibrary RiscVDecoder {\\n    /// @notice Get the instruction's RD\\n    /// @param insn Instruction\\n    function insnRd(uint32 insn) public pure returns(uint32) {\\n        return (insn >> 7) & 0x1F;\\n    }\\n\\n    /// @notice Get the instruction's RS1\\n    /// @param insn Instruction\\n    function insnRs1(uint32 insn) public pure returns(uint32) {\\n        return (insn >> 15) & 0x1F;\\n    }\\n\\n    /// @notice Get the instruction's RS2\\n    /// @param insn Instruction\\n    function insnRs2(uint32 insn) public pure returns(uint32) {\\n        return (insn >> 20) & 0x1F;\\n    }\\n\\n    /// @notice Get the I-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnIImm(uint32 insn) public pure returns(int32) {\\n        return int32(insn) >> 20;\\n    }\\n\\n    /// @notice Get the I-type instruction's unsigned immediate value\\n    /// @param insn Instruction\\n    function insnIUimm(uint32 insn) public pure returns(uint32) {\\n        return insn >> 20;\\n    }\\n\\n    /// @notice Get the U-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnUImm(uint32 insn) public pure returns(int32) {\\n        return int32(insn & 0xfffff000);\\n    }\\n\\n    /// @notice Get the B-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnBImm(uint32 insn) public pure returns(int32) {\\n        int32 imm = int32(\\n            ((insn >> (31 - 12)) & (1 << 12)) |\\n            ((insn >> (25 - 5)) & 0x7e0) |\\n            ((insn >> (8 - 1)) & 0x1e) |\\n            ((insn << (11 - 7)) & (1 << 11))\\n        );\\n        return BitsManipulationLibrary.int32SignExtension(imm, 13);\\n    }\\n\\n    /// @notice Get the J-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnJImm(uint32 insn) public pure returns(int32) {\\n        int32 imm = int32(\\n            ((insn >> (31 - 20)) & (1 << 20)) |\\n            ((insn >> (21 - 1)) & 0x7fe) |\\n            ((insn >> (20 - 11)) & (1 << 11)) |\\n            (insn & 0xff000)\\n        );\\n        return BitsManipulationLibrary.int32SignExtension(imm, 21);\\n    }\\n\\n    /// @notice Get the S-type instruction's immediate value\\n    /// @param insn Instruction\\n    function insnSImm(uint32 insn) public pure returns(int32) {\\n        int32 imm = int32(((insn & 0xfe000000) >> (25 - 5)) | ((insn >> 7) & 0x1F));\\n        return BitsManipulationLibrary.int32SignExtension(imm, 12);\\n    }\\n\\n    /// @notice Get the instruction's opcode field\\n    /// @param insn Instruction\\n    function insnOpcode(uint32 insn) public pure returns (uint32) {\\n        return insn & 0x7F;\\n    }\\n\\n    /// @notice Get the instruction's funct3 field\\n    /// @param insn Instruction\\n    function insnFunct3(uint32 insn) public pure returns (uint32) {\\n        return (insn >> 12) & 0x07;\\n    }\\n\\n    /// @notice Get the concatenation of instruction's funct3 and funct7 fields\\n    /// @param insn Instruction\\n    function insnFunct3Funct7(uint32 insn) public pure returns (uint32) {\\n        return ((insn >> 5) & 0x380) | (insn >> 25);\\n    }\\n\\n    /// @notice Get the concatenation of instruction's funct3 and funct5 fields\\n    /// @param insn Instruction\\n    function insnFunct3Funct5(uint32 insn) public pure returns (uint32) {\\n        return ((insn >> 7) & 0xE0) | (insn >> 27);\\n    }\\n\\n    /// @notice Get the instruction's funct7 field\\n    /// @param insn Instruction\\n    function insnFunct7(uint32 insn) public pure returns (uint32) {\\n        return (insn >> 25) & 0x7F;\\n    }\\n\\n    /// @notice Get the instruction's funct6 field\\n    /// @param insn Instruction\\n    function insnFunct6(uint32 insn) public pure returns (uint32) {\\n        return (insn >> 26) & 0x3F;\\n    }\\n}\\n\",\"keccak256\":\"0xd908b1ffb6386732728562ea6cc57d5ffe71dc2134e8b0f79857882c8a3eac3c\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "insnBImm(uint32)": {
        "notice": "Get the B-type instruction's immediate value"
      },
      "insnFunct3(uint32)": {
        "notice": "Get the instruction's funct3 field"
      },
      "insnFunct3Funct5(uint32)": {
        "notice": "Get the concatenation of instruction's funct3 and funct5 fields"
      },
      "insnFunct3Funct7(uint32)": {
        "notice": "Get the concatenation of instruction's funct3 and funct7 fields"
      },
      "insnFunct6(uint32)": {
        "notice": "Get the instruction's funct6 field"
      },
      "insnFunct7(uint32)": {
        "notice": "Get the instruction's funct7 field"
      },
      "insnIImm(uint32)": {
        "notice": "Get the I-type instruction's immediate value"
      },
      "insnIUimm(uint32)": {
        "notice": "Get the I-type instruction's unsigned immediate value"
      },
      "insnJImm(uint32)": {
        "notice": "Get the J-type instruction's immediate value"
      },
      "insnOpcode(uint32)": {
        "notice": "Get the instruction's opcode field"
      },
      "insnRd(uint32)": {
        "notice": "Get the instruction's RD"
      },
      "insnRs1(uint32)": {
        "notice": "Get the instruction's RS1"
      },
      "insnRs2(uint32)": {
        "notice": "Get the instruction's RS2"
      },
      "insnSImm(uint32)": {
        "notice": "Get the S-type instruction's immediate value"
      },
      "insnUImm(uint32)": {
        "notice": "Get the U-type instruction's immediate value"
      }
    },
    "notice": "Contract responsible for decoding the riscv's instructions",
    "version": 1
  }
}