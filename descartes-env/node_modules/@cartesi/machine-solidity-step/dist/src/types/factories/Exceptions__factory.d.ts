import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Exceptions } from "../Exceptions";
export declare class Exceptions__factory extends ContractFactory {
    constructor(linkLibraryAddresses: ExceptionsLibraryAddresses, signer?: Signer);
    static linkBytecode(linkLibraryAddresses: ExceptionsLibraryAddresses): string;
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<Exceptions>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): Exceptions;
    connect(signer: Signer): Exceptions__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): Exceptions;
}
export interface ExceptionsLibraryAddresses {
    ["__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__"]: string;
}
