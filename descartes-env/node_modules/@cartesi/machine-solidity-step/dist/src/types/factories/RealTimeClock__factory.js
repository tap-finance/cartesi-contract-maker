"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RealTimeClock__factory = void 0;
var ethers_1 = require("ethers");
var RealTimeClock__factory = /** @class */ (function (_super) {
    __extends(RealTimeClock__factory, _super);
    function RealTimeClock__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    RealTimeClock__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    RealTimeClock__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    RealTimeClock__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    RealTimeClock__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    RealTimeClock__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return RealTimeClock__factory;
}(ethers_1.ContractFactory));
exports.RealTimeClock__factory = RealTimeClock__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint64",
                name: "cycle",
                type: "uint64",
            },
        ],
        name: "rtcCycleToTime",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "time",
                type: "uint64",
            },
        ],
        name: "rtcTimeToCycle",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x60f6610025600b82828239805160001a60731461001857fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c8063453f06be14604257806368bd2a56146083575b600080fd5b606660048036036020811015605657600080fd5b503567ffffffffffffffff1660a7565b6040805167ffffffffffffffff9092168252519081900360200190f35b606660048036036020811015609757600080fd5b503567ffffffffffffffff1660ba565b606467ffffffffffffffff919091160490565b6064029056fea26469706673582212205432e00f1fccffb20a220f9c2171e7371da6ed33f0698bb3d69843a5c780cff364736f6c63430007040033";
