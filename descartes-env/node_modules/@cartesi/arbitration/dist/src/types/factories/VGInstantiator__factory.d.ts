import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VGInstantiator } from "../VGInstantiator";
export declare class VGInstantiator__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_partitionInstantiatorAddress: string, _mmInstantiatorAddress: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<VGInstantiator>;
    getDeployTransaction(_partitionInstantiatorAddress: string, _mmInstantiatorAddress: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): VGInstantiator;
    connect(signer: Signer): VGInstantiator__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): VGInstantiator;
}
