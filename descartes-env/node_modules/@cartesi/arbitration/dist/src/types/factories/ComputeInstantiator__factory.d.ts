import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ComputeInstantiator } from "../ComputeInstantiator";
export declare class ComputeInstantiator__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_vgInstantiatorAddress: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ComputeInstantiator>;
    getDeployTransaction(_vgInstantiatorAddress: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): ComputeInstantiator;
    connect(signer: Signer): ComputeInstantiator__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): ComputeInstantiator;
}
