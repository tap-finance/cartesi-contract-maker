import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { ContractFactory, Overrides } from "@ethersproject/contracts";
import type { WorkerAuthManagerImpl } from "./WorkerAuthManagerImpl";
export declare class WorkerAuthManagerImplFactory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_workerManager: string, overrides?: Overrides): Promise<WorkerAuthManagerImpl>;
    getDeployTransaction(_workerManager: string, overrides?: Overrides): TransactionRequest;
    attach(address: string): WorkerAuthManagerImpl;
    connect(signer: Signer): WorkerAuthManagerImplFactory;
    static connect(address: string, signerOrProvider: Signer | Provider): WorkerAuthManagerImpl;
}
