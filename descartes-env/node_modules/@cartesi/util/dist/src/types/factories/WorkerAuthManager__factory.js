"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerAuthManager__factory = void 0;
const ethers_1 = require("ethers");
class WorkerAuthManager__factory {
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.WorkerAuthManager__factory = WorkerAuthManager__factory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "worker",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "dapp",
                type: "address",
            },
        ],
        name: "Authorization",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "worker",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "dapp",
                type: "address",
            },
        ],
        name: "Deauthorization",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_workerAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_dappAddress",
                type: "address",
            },
        ],
        name: "authorize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_workerAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_dappAddresses",
                type: "address",
            },
        ],
        name: "deauthorize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "workerAddress",
                type: "address",
            },
        ],
        name: "getOwner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_workerAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_dappAddress",
                type: "address",
            },
        ],
        name: "isAuthorized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
